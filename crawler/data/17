http://www.cs.dartmouth.edu/~campbell/cs50/startingcrawler.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.tug.org/tex4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.tug.org/tex4ht/)"> 
<!-- html --> 
<meta name="src" content="startingcrawler.tex"> 
<meta name="date" content="2015-05-04 13:20:00"> 
<link rel="stylesheet" type="text/css" href="startingcrawler.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 13+</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>Getting Started on the Crawler: Some Coding and Debugging Tips </h1>
<!--l. 22--><p class="noindent" >A very common feeling when challenged with coding the crawler is to ask - &#8220;How the heck to I start this
thing?&#8221;. In what follows, we propose a step by step approach to getting started wth coding the crawler.
We first take a look at the pseudo code then detail each step. We break down each step into coding
and debugging tips. You should use the gdb debugger to set break points and examin data
structures such as the DICTIONARY, DNODES and URLNODES. The debugger is very powerful
in this respect and allows you to print data structures and traverse the double link list of
DNODES checking that pointers and data elements are consistent and correct - if not, you have a
bug.
<!--l. 25--><p class="noindent" >We suggest that once you fully understand the data flow and data structures you should then take a
detailed look proat the peusdo code; that is, read the Design Spec and Implementation Spec from the
notes.
<!--l. 27--><p class="noindent" >In what follows, we discuss 8 steps that will get you started. We suggest that you code up the functions in
crawler one by one and use the debugger to check for correctness. At the end of these notes we&#8217;ll give some
tips about debugging tricky bugs.
<!--l. 29--><p class="noindent" >Have fun. The crawler is cool. Once you have completed it you will have learnt a lot.
<!--l. 31--><p class="noindent" >Let&#8217;s get started.
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Step 1: Code and check the command line processing</h3>
<!--l. 35--><p class="noindent" >Remember to always code defensively &#8211; <span 
class="cmbx-10">expect the unexpected with software!</span>. Here the user enters a
numer of parameters to the crawler program; for example:
<!--l. 37--><p class="noindent" >$crawler www.cs.dartmouth.edu ../../data/ 2
<!--l. 39--><p class="noindent" >Start by coding up the command line argument processing - you need to check that crawler is passed good
parameters: has the user entered the right number of parameters, is the directorty valid (i.e., does it exist
and is it writable?), is the depth parameter less than the maxmium allowed? If the user provides invalid
paremeters then you need to exit gracefully with usage printout to the user to correct their
input.
<!--l. 41--><p class="noindent" >Use printf to print out error or usage messages to the user as discussed in the Input and output in the
                                                                                  
                                                                                  
Design Spec.
<!--l. 43--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>Step 2: Code and check *initLists*</h3>
<!--l. 45--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>Code *initLists*: Initialize any data structure and variables.
<!--l. 48--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>The Dictionary should be malloced and initialized.
<!--l. 51--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>use the debugger (dgb) to print out the dictionary once initialized. In the following
snippet of a gdb session we start gdb by passing in the parameters. You can also do this by simply running
gdb and the once the debugger is running type set args www.cs.dartmouth.edu ../../data/ 2. Use either
method.
<!--l. 54--><p class="noindent" >In all the gdb examples below we use the <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">#</span></span></span> to provide comments.
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;lets</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;debugger,</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;pass</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;parameters</span><br /><br /><span 
class="cmtt-10">\$</span><span 
class="cmtt-10">&#x00A0;gdb</span><span 
class="cmtt-10">&#x00A0;--args</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><span 
class="cmtt-10">&#x00A0;../../data/</span><span 
class="cmtt-10">&#x00A0;2</span><br /><span 
class="cmtt-10">GNU</span><span 
class="cmtt-10">&#x00A0;gdb</span><span 
class="cmtt-10">&#x00A0;6.3.50-20050815</span><span 
class="cmtt-10">&#x00A0;(Apple</span><span 
class="cmtt-10">&#x00A0;version</span><span 
class="cmtt-10">&#x00A0;gdb-1510)</span><span 
class="cmtt-10">&#x00A0;(Wed</span><span 
class="cmtt-10">&#x00A0;Sep</span><span 
class="cmtt-10">&#x00A0;22</span><span 
class="cmtt-10">&#x00A0;02:45:02</span><span 
class="cmtt-10">&#x00A0;UTC</span><span 
class="cmtt-10">&#x00A0;2010)</span><br /><span 
class="cmtt-10">Copyright</span><span 
class="cmtt-10">&#x00A0;2004</span><span 
class="cmtt-10">&#x00A0;Free</span><span 
class="cmtt-10">&#x00A0;Software</span><span 
class="cmtt-10">&#x00A0;Foundation,</span><span 
class="cmtt-10">&#x00A0;Inc.</span><br /><span 
class="cmtt-10">GDB</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;free</span><span 
class="cmtt-10">&#x00A0;software,</span><span 
class="cmtt-10">&#x00A0;covered</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;GNU</span><span 
class="cmtt-10">&#x00A0;General</span><span 
class="cmtt-10">&#x00A0;Public</span><span 
class="cmtt-10">&#x00A0;License,</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;are</span><br /><span 
class="cmtt-10">welcome</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;change</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;and/or</span><span 
class="cmtt-10">&#x00A0;distribute</span><span 
class="cmtt-10">&#x00A0;copies</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;under</span><span 
class="cmtt-10">&#x00A0;certain</span><span 
class="cmtt-10">&#x00A0;conditions.</span><br /><span 
class="cmtt-10">Type</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;show</span><span 
class="cmtt-10">&#x00A0;copying&#8217;&#8217;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;see</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;conditions.</span><br /><span 
class="cmtt-10">There</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;absolutely</span><span 
class="cmtt-10">&#x00A0;no</span><span 
class="cmtt-10">&#x00A0;warranty</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;GDB.</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Type</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;show</span><span 
class="cmtt-10">&#x00A0;warranty&#8217;&#8217;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;details.</span><br /><span 
class="cmtt-10">This</span><span 
class="cmtt-10">&#x00A0;GDB</span><span 
class="cmtt-10">&#x00A0;was</span><span 
class="cmtt-10">&#x00A0;configured</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;x86_64-apple-darwin&#8217;&#8217;...Reading</span><span 
class="cmtt-10">&#x00A0;symbols</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;shared</span><span 
class="cmtt-10">&#x00A0;libraries</span><span 
class="cmtt-10">&#x00A0;..</span><span 
class="cmtt-10">&#x00A0;done</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;339</span><br /><span 
class="cmtt-10">334</span><br /><span 
class="cmtt-10">335MYASSERT(sscanf(argv[3],</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;%d&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&amp;max_depth)</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;1);</span><br /><span 
class="cmtt-10">336</span><br /><span 
class="cmtt-10">337//(2)</span><span 
class="cmtt-10">&#x00A0;*initLists*</span><span 
class="cmtt-10">&#x00A0;Initialize</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;variables</span><br /><span 
class="cmtt-10">338</span><br /><span 
class="cmtt-10">339if</span><span 
class="cmtt-10">&#x00A0;(initList()</span><span 
class="cmtt-10">&#x00A0;!=</span><span 
class="cmtt-10">&#x00A0;1){</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;340</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf(&#8216;&#8216;initialization</span><span 
class="cmtt-10">&#x00A0;wrong!\n&#8217;&#8217;);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;341</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(1);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;342}</span><br /><span 
class="cmtt-10">343</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;339</span><br /><span 
class="cmtt-10">334</span><br /><span 
class="cmtt-10">335MYASSERT(sscanf(argv[3],</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;%d&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&amp;max_depth)</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;1);</span><br /><span 
class="cmtt-10">336</span><br /><span 
class="cmtt-10">337//(2)</span><span 
class="cmtt-10">&#x00A0;*initLists*</span><span 
class="cmtt-10">&#x00A0;Initialize</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;variables</span><br /><span 
class="cmtt-10">338</span><br /><span 
class="cmtt-10">339if</span><span 
class="cmtt-10">&#x00A0;(initList()</span><span 
class="cmtt-10">&#x00A0;!=</span><span 
class="cmtt-10">&#x00A0;1){</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;340</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf(&#8216;&#8216;initialization</span><span 
class="cmtt-10">&#x00A0;wrong!\n&#8217;&#8217;);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;341</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(1);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;342}</span><br /><span 
class="cmtt-10">343</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;set</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;breakpoint</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;initialization</span><span 
class="cmtt-10">&#x00A0;routine</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;step</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;then</span><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;initialized</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;looks</span><span 
class="cmtt-10">&#x00A0;OK.</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;break</span><span 
class="cmtt-10">&#x00A0;339</span><br /><span 
class="cmtt-10">Breakpoint</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x10000110a:</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;./crawler.c,</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;339.</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;run</span><br /><span 
class="cmtt-10">Starting</span><span 
class="cmtt-10">&#x00A0;program:</span><span 
class="cmtt-10">&#x00A0;/Users/atc/teaching/cs23/notes/s4/my-lab4/src/crawler/</span><br /><span 
class="cmtt-10">crawler</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><span 
class="cmtt-10">&#x00A0;../../data/</span><span 
class="cmtt-10">&#x00A0;2</span><br /><span 
class="cmtt-10">Reading</span><span 
class="cmtt-10">&#x00A0;symbols</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;shared</span><span 
class="cmtt-10">&#x00A0;libraries</span><span 
class="cmtt-10">&#x00A0;+.</span><span 
class="cmtt-10">&#x00A0;done</span><br /><span 
class="cmtt-10">ascii</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;50</span><span 
class="cmtt-10">&#x00A0;string</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;integer</span><span 
class="cmtt-10">&#x00A0;2</span><br /><br /><span 
class="cmtt-10">Breakpoint</span><span 
class="cmtt-10">&#x00A0;1,</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(argc=4,</span><span 
class="cmtt-10">&#x00A0;argv=0x7fff5fbff530)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;./crawler.c:339</span><br /><span 
class="cmtt-10">339if</span><span 
class="cmtt-10">&#x00A0;(initList()</span><span 
class="cmtt-10">&#x00A0;!=</span><span 
class="cmtt-10">&#x00A0;1){</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;next</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;351page</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;getPage(argv[1],</span><span 
class="cmtt-10">&#x00A0;current_depth,</span><span 
class="cmtt-10">&#x00A0;argv[2]);</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;dict</span><br /><span 
class="cmtt-10">\$1</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*)</span><span 
class="cmtt-10">&#x00A0;0x100801000</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict</span><br /><span 
class="cmtt-10">\$2</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;10000</span><span 
class="cmtt-10">&#x00A0;times&#x003E;},</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 124--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>Step 3: Code and check *getPage(seedURL, current&#x02D9;depth, target&#x02D9;directory)*</h3>
<!--l. 126--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>Code and check *getPage(seedURL, current&#x02D9;depth, target&#x02D9;directory)* Get HTML
page &#8211; this is a stricky function.
<!--l. 129--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>You have to use wget to store the seed page to a temp file. Determine the length of the
temp file in terms of the number of bytes (+1 for the string termination 0 character that you need to
append to the end of the string), malloc a buffer, read in the file into the buffer and add the 0 at the end
of the string. Then return the pointer to the buffer.
<!--l. 132--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>You can set a break point on the return from getPage and print out the string,
you can make sure that the length of the buffer is the same as what wget prints outu, or,
use the shell command &#8220;wc&#8221; on the temp file to check the number of characters/bytes - the
length buffer should be the same the output of wget or wc + 1. This function also creates
a file (viz 1..N) to store the URL, depth, hmtl. You can also use the shell command &#8220;less&#8221;
on the file to check that it is the same as the temp file with the addition of the URL and
depth &#8211; try using the shell command &#8220;diff&#8221; to do this smartly. These rudimentary checks give
confidence that the getPage function is working correctly. It does not mean that bugs are
not present. You need to run unit tests to determine this &#8211; we will discuss this later in the
course.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;truncates</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;output</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;page</span><br /><span 
class="cmtt-10">$85</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100815a00</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;&#x003C;!DOCTYPEhtmlPUBLIC\"-//W3C//DTDXHTML1.0Transitional//</span><br /><span 
class="cmtt-10">EN\"\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&#x003E;&#x003C;htmlxmlns=\</span><br /><span 
class="cmtt-10">"http://www.w3.org/1999/xhtml\"&#x003E;&#x003C;head&#x003E;&#x003C;title&#x003E;WelcometotheDartmouthComputerSc&#8217;&#8217;...</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;printf</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;see</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;complete</span><span 
class="cmtt-10">&#x00A0;page</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;note,</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;notes</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;printf</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;page</span><span 
class="cmtt-10">&#x00A0;%s\n&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;page</span><br /><br /></div></div>
                                                                                  
                                                                                  
<!--l. 158--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a> Step 4: Code and check *extractURLs(page, SEED&#x02D9;URL)* </h3>
<!--l. 160--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>Code and check *extractURLs(page, SEED&#x02D9;URL)* Extract all URLs from
SEED&#x02D9;URL page.
<!--l. 163--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>This function needs to use the parser GetNextURL (we give you the code
to do this, phew) to extract the URLs from the page (the buffer string mentioned above).
It should add each URL to the url&#x02D9;list[] array if the URL has the same URL&#x02D9;PREFIX (i.e.,
<span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">define</span><span 
class="cmtt-10">&#x00A0;URL_PREFIX</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu&#8217;&#8217;</span></span></span>). This is really important since we only want
to search crawler CS pages and not the New York Times webpages! So you need to do a string comparison
to check that the URL has the same prefix as above. The function needs to first initialize the complete
url&#x02D9;list[] to NULL; recall url&#x02D9;list is an array of pointers to URLs (strings). Therefore, if a valid URL
is found you have to malloc a string to copy the URL into and then add the pointer to the
url&#x02D9;list[].
<!--l. 166--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>Once you return from this function use gdb to look at the URLs in the url&#x02D9;list &#8211; this
function returns a pointer to url&#x02D9;list[] which is simply the name of the array if you use a global variable - if
you malloc url&#x02D9;list then return the pointer.
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[0]</span><br /><span 
class="cmtt-10">$77</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001000c0</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/internal/index.php&#8217;&#8217;</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[1]</span><br /><span 
class="cmtt-10">$78</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001004b0</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/connector/index.php&#8217;&#8217;</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[3]</span><br /><span 
class="cmtt-10">$79</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100100c90</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/faculty-other/index.php&#8217;&#8217;</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[4]</span><br /><span 
class="cmtt-10">$80</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100101080</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/staff-administrative/index.php&#8217;&#8217;</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[5]</span><br /><span 
class="cmtt-10">$81</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100101470</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/staff-technical/index.php&#8217;&#8217;</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[6]</span><br /><span 
class="cmtt-10">$82</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100101860</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/postdoctoral-researchers/index.php&#8217;&#8217;</span><br /><br /><br /></div></div>
<!--l. 195--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a> Step 5: Code and check *updateListLinkToBeVisited(URLsLists, current&#x02D9;depth + 1)* </h3>
<!--l. 197--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>Code and check *updateListLinkToBeVisited(URLsLists, current&#x02D9;depth + 1)* For all
the URL in the URLsList that do not exist already exist in the dictionary add a DNODE and URLNODE
(URL name, depth, visited) to dictionary list.
<!--l. 200--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span><span 
class="cmti-10">This is perhaps the most complicated function you will code for the crawler</span>. At a high level
it has to determine uniqueness of all URLs in the url&#x02D9;list (it is very likely that your code will come across
duplicates). We discussed in class how the dictionary can be used to determine uniqueness and how
the dictionary can searched to determine uniqueness; and, if the URL is unique it shall be
added at the end of the Dictionary list (i.e., <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">dict-&#x003E;end</span></span></span>) or at the end of cluster if there is a
collision. The process of adding an unique URL requires the code to malloc and initialize a
URLNODE and DNODE. Then, link the DNODE and URLNODE pair into the dictionary
correctly.
<!--l. 203--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>Set a break point after before and after this function is called and inspect the
dictionary data structure. For the seed webpage you should get approximately 30 URLs (could be
more or less). You should be able to run down the list and inspect pointers to DNODEs and
URLNODEs and study their contents: is the structure intact? are all the pointers correct
including start and end of the deictionary, and next prev for the DNODE? are all the elements in
the datastructures that are not pointers correct (DNODE&#8217;s key, URLNODE&#8217;s url, visited,
depth). If not you have a bug. Note, the debugger is very powerful. You can follow pointers
and print out data structures with ease. Much better than using cumbersome printfs in your
                                                                                  
                                                                                  
code.
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict</span><br /><span 
class="cmtt-10">$54</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;708</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081ec00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;287</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081f000,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;262</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100815200,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;1508</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081d800,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;2446</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081d400,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;47</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081f400,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;518</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081f800,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;456</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081e000,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;201</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081e400,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;811</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081dc00,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;302</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100815600,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;1332</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100814a00,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;29</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081d000,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;240</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081e800,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;389</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100814e00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;47</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081cc00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;401</span><span 
class="cmtt-10">&#x00A0;times&#x003E;},</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814a00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081f800</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;start,</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict-&#x003E;start</span><br /><span 
class="cmtt-10">$56</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814e00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001072f0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;972</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">$57</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081f400,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001037e0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/site/</span><br /><span 
class="cmtt-10">contact-dartmouth-computer-science.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;915</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict-&#x003E;end</span><br /><span 
class="cmtt-10">$57</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081f400,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001037e0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/site/</span><br /><span 
class="cmtt-10">contact-dartmouth-computer-science.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;915</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;Print</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;start-&#x003E;data</span><br /><span 
class="cmtt-10">$58</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)</span><span 
class="cmtt-10">&#x00A0;0x1001072f0</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;Print</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;first</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;last</span><span 
class="cmtt-10">&#x00A0;URLNODEs</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;Dictionary.</span><span 
class="cmtt-10">&#x00A0;Because</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;cast</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;get</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;work</span><span 
class="cmtt-10">&#x00A0;properly</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start-&#x003E;data)</span><br /><span 
class="cmtt-10">$59</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;972</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;end-&#x003E;data)</span><br /><span 
class="cmtt-10">$60</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/site/</span><br /><span 
class="cmtt-10">contact-dartmouth-computer-science.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;915</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;Importantly,</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;traverse</span><span 
class="cmtt-10">&#x00A0;down</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;double-linked</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;make</span><span 
class="cmtt-10">&#x00A0;sure</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;correct</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;start-&#x003E;next</span><br /><span 
class="cmtt-10">$63</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;*)</span><span 
class="cmtt-10">&#x00A0;0x100814e00</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict-&#x003E;start-&#x003E;next</span><br /><span 
class="cmtt-10">$64</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100815200,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814a00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001000c0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/internal/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;940</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict-&#x003E;start-&#x003E;next-&#x003E;next</span><br /><span 
class="cmtt-10">$65</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100815600,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814e00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001004b0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/connector/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;939</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict-&#x003E;start-&#x003E;next-&#x003E;prev</span><br /><span 
class="cmtt-10">$66</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814e00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001072f0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;972</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URLNODEs</span><span 
class="cmtt-10">&#x00A0;hanging</span><span 
class="cmtt-10">&#x00A0;off</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;these</span><span 
class="cmtt-10">&#x00A0;DNODES</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start-&#x003E;next-&#x003E;data)</span><br /><span 
class="cmtt-10">$68</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/internal/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;940</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start-&#x003E;next-&#x003E;next-&#x003E;data)</span><br /><span 
class="cmtt-10">$69</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/connector/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;939</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;anypoint</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;explit</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;dict</span><br /><span 
class="cmtt-10">1:</span><span 
class="cmtt-10">&#x00A0;dict</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*)</span><span 
class="cmtt-10">&#x00A0;0x100801000</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;*dict</span><br /><span 
class="cmtt-10">2:</span><span 
class="cmtt-10">&#x00A0;*dict</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;708</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081ec00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;287</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081f000,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;262</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100815200,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;1508</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081d800,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;2446</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081d400,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;47</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081f400,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;518</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081f800,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;456</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081e000,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;201</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081e400,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;811</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081dc00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;302</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100815600,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;1332</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x100814a00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;29</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081d000,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;240</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081e800,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;389</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100814e00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;47</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081cc00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;401</span><span 
class="cmtt-10">&#x00A0;times&#x003E;},</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814a00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081f800</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((DNODE</span><span 
class="cmtt-10">&#x00A0;*)0x10081d400)</span><br /><span 
class="cmtt-10">$71</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081d800,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081d000,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100101470,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/</span><br /><span 
class="cmtt-10">staff-technical/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;933</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)0x100101470)</span><br /><span 
class="cmtt-10">$73</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/</span><br /><span 
class="cmtt-10">staff-technical/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;933</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><br /><br /></div></div>
<!--l. 360--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-9000"></a>Step 6: Code and check *setURLasVisited(SEED&#x02D9;URL)*</h3>
<!--l. 362--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>*setURLasVisited(SEED&#x02D9;URL)* Mark the current URL visited in the
URLNODE.
<!--l. 365--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>Simply set the current URL as visited.
<!--l. 368--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>Simply use gdb to inspect the DNODE data structure before and after this function is
called.
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start-&#x003E;data)</span><br /><span 
class="cmtt-10">$87</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;972</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">}</span><br /><br /><br /></div></div>
<!--l. 391--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-10000"></a> Step 7: Code and check *getAddressFromTheLinksToBeVisited(current&#x02D9;depth)*. </h3>
<!--l. 394--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>*getAddressFromTheLinksToBeVisited(current&#x02D9;depth)*. Get the next URL to be
visited from the dictionary list (first one not visited from <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">dict-&#x003E;start</span></span></span>.
<!--l. 397--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>Simply traverse the dictionary&#8217;s DNODEs searching for a URLNODE not visited. If there
aren&#8217;t any (all URLNODEs have been visited - we are done!) we return NULL and the crawler drops out
of its &#8220;while loop&#8221; (see pseudo code) and cleans up.
<!--l. 400--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>Simply check after the function is called that the URLNODE has not been visited. Also,
find the URLNODE on the dictionary and make sure that the prev DNODE&#8217;s URLNODE has been
visited, and that the next DNODE&#8217;s URLNODE is &#8220;not visited&#8221; (assuming that the current DNODE&#8217;s
URLNODE is not the last item on the dictionary).
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)0x100101470)</span><br /><span 
class="cmtt-10">$73</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/</span><br /><span 
class="cmtt-10">staff-technical/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;933</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><br /><br /></div></div>
<!--l. 424--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-11000"></a> Step 8: Code and check *cleanup* </h3>
<!--l. 426--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>*cleanup* Clean up data structures and make sure all files are closed, resources
deallocated.
<!--l. 429--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>Simply breakdown all the data structures malloced by freeing them.
                                                                                  
                                                                                  
<!--l. 432--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>Because free a chunk of memory still leaves pointers in data structures this is hard to
check. But we will use a tool valgrind to check for memory leaks.
<!--l. 435--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-12000"></a>Debugging tricky bugs: valgrind and gdb are your friends, printf your enemy</h3>
<!--l. 437--><p class="noindent" >This is your first real encounter with dynamic memory management for data strcutures and pointers
which drive the management and operation of the data structures. Many tricky bugs lead to
segfaults that can be easily debugged &#8211; a pointer that is NULL when you expect an address to a
malloced data structure. But bugs may manifest all sorts of edge cases leading to unstable
code, infinite loops, fewer crawled files than expected. You might have a beautiful operational
crawler at depth 2 but segfaults at depth 3; or you might crawl at level 3 but if you change the
size of the hash table (MAX_HASH_SLOTS) from 10000 entries (which means the crawler
nearly always finds a NULL pointer in the hash table) to 10 entries (which means your code is
executing collision processing nearly all the time) then you might (or will likely ;-) segafult &#8211; these
are edge cases. By changing a system parameter (i.e., MAX_HASH_SLOTS) we radically
change the operation of the system forcing the program control through code not probably
executed often. These edge case tests force pesky bugs out into the light so we can swat them &#8211;
splat!.
<!--l. 439--><p class="noindent" >Once you have coded each of the steps above and used the debugger to verify that the code functionally
works you can go on to complete the crawler cycle which is just a while loop for all URLs to visit. You will
likely experiennce some of the bugs mentioned above &#8211; many associated with your codes interaction with
memory &#8211; that is data strcutures.
<!--l. 441--><p class="noindent" >What do you do if you have a really non-obvious bug &#8211; that is, a tricky one?
<!--l. 443--><p class="noindent" ><span 
class="cmbx-10">1) run your program through valgrind, and note the line numbers of any errors.</span>
<span 
class="cmbx-10">Examine the code around these lines and see if I can figure out what the problem</span>
<span 
class="cmbx-10">is</span>.
<!--l. 445--><p class="noindent" >We haven&#8217;t covered valgrind yet other than the quick demo in class. Run this command on the command
line once you have a clean make &#8211; on a single command line (it looks like it&#8217;s on two lines below but has to
be one:
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;valgrind</span><span 
class="cmtt-10">&#x00A0;--leak-check=yes</span><span 
class="cmtt-10">&#x00A0;--track-origins=yes</span><span 
class="cmtt-10">&#x00A0;--log-file=valout</span><span 
class="cmtt-10">&#x00A0;-v</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;http://www.cs.dartmouth.edu/~campbell/cs50/</span><span 
class="cmtt-10">&#x00A0;../../data</span><span 
class="cmtt-10">&#x00A0;0</span><br /><br /></div></div>
<!--l. 460--><p class="noindent" >We will discuss valgrind more in class this week along with other techniques for testing and debugging.
But here is a quick introduction to valgrind:
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;http://valgrind.org/docs/manual/quick-start.html</span><br /><br /></div>                                 </div>
<!--l. 473--><p class="noindent" ><span 
class="cmbx-10">2) If you can&#8217;t simply figure out the problem by eyeballing your code (i.e., desk checking it),</span>
<span 
class="cmbx-10">then start gdb and set breakpoints at some nearby lines &#8211; that is before and/or after the</span>
<span 
class="cmbx-10">source code line numbers given by the valgrind error indicated in valout. Step through</span>
<span 
class="cmbx-10">(potentially multiple times), examining variables (e.g., DNODEs) and the code until you</span>
<span 
class="cmbx-10">understand &#8220;the problem&#8221; (always a good place to start) &#8211; and what valgrind is</span>
                                                                                  
                                                                                  
<span 
class="cmbx-10">complaining about, such as, mememory leaks, writing/reading beyond malloced</span>
<span 
class="cmbx-10">memory</span>.
<!--l. 475--><p class="noindent" >Start by looking at the valout file &#8211; this is the output of valgrind (see the command line). Note, valgrind
runs much more slowly that non valgrind code. In addition, we set the verbose flag in the command.
Ideally you should have no errors but if you do (which you will for sure) then clear all the illegal read and
writes and memory leaks.
<!--l. 477--><p class="noindent" >I would not continue with any further code development until you clear all the valgrind errors; your
CLEAN (no errors) valout file should look like this for example:
<div 
class="colorbox" id="colorbox9"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;78==15102==</span><span 
class="cmtt-10">&#x00A0;HEAP</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;79==15102==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;exit:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;blocks</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;80==15102==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;heap</span><span 
class="cmtt-10">&#x00A0;usage:</span><span 
class="cmtt-10">&#x00A0;37</span><span 
class="cmtt-10">&#x00A0;allocs,</span><span 
class="cmtt-10">&#x00A0;37</span><span 
class="cmtt-10">&#x00A0;frees,</span><span 
class="cmtt-10">&#x00A0;114,513</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;allocated</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;81==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;82==15102==</span><span 
class="cmtt-10">&#x00A0;All</span><span 
class="cmtt-10">&#x00A0;heap</span><span 
class="cmtt-10">&#x00A0;blocks</span><span 
class="cmtt-10">&#x00A0;were</span><span 
class="cmtt-10">&#x00A0;freed</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;no</span><span 
class="cmtt-10">&#x00A0;leaks</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;possible</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;83==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;84==15102==</span><span 
class="cmtt-10">&#x00A0;ERROR</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;85--15102--</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;86--15102--</span><span 
class="cmtt-10">&#x00A0;used_suppression:</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;glibc-2.5.x-on-SUSE-10.2-(PPC)-2a</span><span 
class="cmtt-10">&#x00A0;/usr/lib64/valgrind/default.\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;supp:1286</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;87==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;88==15102==</span><span 
class="cmtt-10">&#x00A0;ERROR</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2)</span><br /><br /></div></div>
<!--l. 501--><p class="noindent" ><span 
class="cmbx-10">3) Of course, there could always be edge cases where something completely unrelated to the</span>
<span 
class="cmbx-10">code is at fault, but these are pretty rare</span>
<!--l. 503--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-13000"></a>Final comment</h3>
<!--l. 505--><p class="noindent" >Once you have done 1-8 for the seed URL you will be in good shape to run in the &#8220;while loop&#8221; doing steps
3, 4, 5, 6 and 7 until no more URLNODE&#8217;s need to be visited. This is not to say there will not be bugs
running more deeply in the list but you will now have a good sense of the &#8220;excuting data strcutures&#8221; and
valgrind and gdb skills to attack those pesky bugs if lurking. Remember, printf is not your friend. Dump
him now.
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/startingcrawler.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.tug.org/tex4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.tug.org/tex4ht/)"> 
<!-- html --> 
<meta name="src" content="startingcrawler.tex"> 
<meta name="date" content="2015-05-04 13:20:00"> 
<link rel="stylesheet" type="text/css" href="startingcrawler.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 13+</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>Getting Started on the Crawler: Some Coding and Debugging Tips </h1>
<!--l. 22--><p class="noindent" >A very common feeling when challenged with coding the crawler is to ask - &#8220;How the heck to I start this
thing?&#8221;. In what follows, we propose a step by step approach to getting started wth coding the crawler.
We first take a look at the pseudo code then detail each step. We break down each step into coding
and debugging tips. You should use the gdb debugger to set break points and examin data
structures such as the DICTIONARY, DNODES and URLNODES. The debugger is very powerful
in this respect and allows you to print data structures and traverse the double link list of
DNODES checking that pointers and data elements are consistent and correct - if not, you have a
bug.
<!--l. 25--><p class="noindent" >We suggest that once you fully understand the data flow and data structures you should then take a
detailed look proat the peusdo code; that is, read the Design Spec and Implementation Spec from the
notes.
<!--l. 27--><p class="noindent" >In what follows, we discuss 8 steps that will get you started. We suggest that you code up the functions in
crawler one by one and use the debugger to check for correctness. At the end of these notes we&#8217;ll give some
tips about debugging tricky bugs.
<!--l. 29--><p class="noindent" >Have fun. The crawler is cool. Once you have completed it you will have learnt a lot.
<!--l. 31--><p class="noindent" >Let&#8217;s get started.
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Step 1: Code and check the command line processing</h3>
<!--l. 35--><p class="noindent" >Remember to always code defensively &#8211; <span 
class="cmbx-10">expect the unexpected with software!</span>. Here the user enters a
numer of parameters to the crawler program; for example:
<!--l. 37--><p class="noindent" >$crawler www.cs.dartmouth.edu ../../data/ 2
<!--l. 39--><p class="noindent" >Start by coding up the command line argument processing - you need to check that crawler is passed good
parameters: has the user entered the right number of parameters, is the directorty valid (i.e., does it exist
and is it writable?), is the depth parameter less than the maxmium allowed? If the user provides invalid
paremeters then you need to exit gracefully with usage printout to the user to correct their
input.
<!--l. 41--><p class="noindent" >Use printf to print out error or usage messages to the user as discussed in the Input and output in the
                                                                                  
                                                                                  
Design Spec.
<!--l. 43--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>Step 2: Code and check *initLists*</h3>
<!--l. 45--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>Code *initLists*: Initialize any data structure and variables.
<!--l. 48--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>The Dictionary should be malloced and initialized.
<!--l. 51--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>use the debugger (dgb) to print out the dictionary once initialized. In the following
snippet of a gdb session we start gdb by passing in the parameters. You can also do this by simply running
gdb and the once the debugger is running type set args www.cs.dartmouth.edu ../../data/ 2. Use either
method.
<!--l. 54--><p class="noindent" >In all the gdb examples below we use the <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">#</span></span></span> to provide comments.
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;lets</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;debugger,</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;pass</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;parameters</span><br /><br /><span 
class="cmtt-10">\$</span><span 
class="cmtt-10">&#x00A0;gdb</span><span 
class="cmtt-10">&#x00A0;--args</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><span 
class="cmtt-10">&#x00A0;../../data/</span><span 
class="cmtt-10">&#x00A0;2</span><br /><span 
class="cmtt-10">GNU</span><span 
class="cmtt-10">&#x00A0;gdb</span><span 
class="cmtt-10">&#x00A0;6.3.50-20050815</span><span 
class="cmtt-10">&#x00A0;(Apple</span><span 
class="cmtt-10">&#x00A0;version</span><span 
class="cmtt-10">&#x00A0;gdb-1510)</span><span 
class="cmtt-10">&#x00A0;(Wed</span><span 
class="cmtt-10">&#x00A0;Sep</span><span 
class="cmtt-10">&#x00A0;22</span><span 
class="cmtt-10">&#x00A0;02:45:02</span><span 
class="cmtt-10">&#x00A0;UTC</span><span 
class="cmtt-10">&#x00A0;2010)</span><br /><span 
class="cmtt-10">Copyright</span><span 
class="cmtt-10">&#x00A0;2004</span><span 
class="cmtt-10">&#x00A0;Free</span><span 
class="cmtt-10">&#x00A0;Software</span><span 
class="cmtt-10">&#x00A0;Foundation,</span><span 
class="cmtt-10">&#x00A0;Inc.</span><br /><span 
class="cmtt-10">GDB</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;free</span><span 
class="cmtt-10">&#x00A0;software,</span><span 
class="cmtt-10">&#x00A0;covered</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;GNU</span><span 
class="cmtt-10">&#x00A0;General</span><span 
class="cmtt-10">&#x00A0;Public</span><span 
class="cmtt-10">&#x00A0;License,</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;are</span><br /><span 
class="cmtt-10">welcome</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;change</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;and/or</span><span 
class="cmtt-10">&#x00A0;distribute</span><span 
class="cmtt-10">&#x00A0;copies</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;under</span><span 
class="cmtt-10">&#x00A0;certain</span><span 
class="cmtt-10">&#x00A0;conditions.</span><br /><span 
class="cmtt-10">Type</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;show</span><span 
class="cmtt-10">&#x00A0;copying&#8217;&#8217;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;see</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;conditions.</span><br /><span 
class="cmtt-10">There</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;absolutely</span><span 
class="cmtt-10">&#x00A0;no</span><span 
class="cmtt-10">&#x00A0;warranty</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;GDB.</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Type</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;show</span><span 
class="cmtt-10">&#x00A0;warranty&#8217;&#8217;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;details.</span><br /><span 
class="cmtt-10">This</span><span 
class="cmtt-10">&#x00A0;GDB</span><span 
class="cmtt-10">&#x00A0;was</span><span 
class="cmtt-10">&#x00A0;configured</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;x86_64-apple-darwin&#8217;&#8217;...Reading</span><span 
class="cmtt-10">&#x00A0;symbols</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;shared</span><span 
class="cmtt-10">&#x00A0;libraries</span><span 
class="cmtt-10">&#x00A0;..</span><span 
class="cmtt-10">&#x00A0;done</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;339</span><br /><span 
class="cmtt-10">334</span><br /><span 
class="cmtt-10">335MYASSERT(sscanf(argv[3],</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;%d&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&amp;max_depth)</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;1);</span><br /><span 
class="cmtt-10">336</span><br /><span 
class="cmtt-10">337//(2)</span><span 
class="cmtt-10">&#x00A0;*initLists*</span><span 
class="cmtt-10">&#x00A0;Initialize</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;variables</span><br /><span 
class="cmtt-10">338</span><br /><span 
class="cmtt-10">339if</span><span 
class="cmtt-10">&#x00A0;(initList()</span><span 
class="cmtt-10">&#x00A0;!=</span><span 
class="cmtt-10">&#x00A0;1){</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;340</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf(&#8216;&#8216;initialization</span><span 
class="cmtt-10">&#x00A0;wrong!\n&#8217;&#8217;);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;341</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(1);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;342}</span><br /><span 
class="cmtt-10">343</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;339</span><br /><span 
class="cmtt-10">334</span><br /><span 
class="cmtt-10">335MYASSERT(sscanf(argv[3],</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;%d&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&amp;max_depth)</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;1);</span><br /><span 
class="cmtt-10">336</span><br /><span 
class="cmtt-10">337//(2)</span><span 
class="cmtt-10">&#x00A0;*initLists*</span><span 
class="cmtt-10">&#x00A0;Initialize</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;variables</span><br /><span 
class="cmtt-10">338</span><br /><span 
class="cmtt-10">339if</span><span 
class="cmtt-10">&#x00A0;(initList()</span><span 
class="cmtt-10">&#x00A0;!=</span><span 
class="cmtt-10">&#x00A0;1){</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;340</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf(&#8216;&#8216;initialization</span><span 
class="cmtt-10">&#x00A0;wrong!\n&#8217;&#8217;);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;341</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(1);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;342}</span><br /><span 
class="cmtt-10">343</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;set</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;breakpoint</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;initialization</span><span 
class="cmtt-10">&#x00A0;routine</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;step</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;then</span><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;initialized</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;looks</span><span 
class="cmtt-10">&#x00A0;OK.</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;break</span><span 
class="cmtt-10">&#x00A0;339</span><br /><span 
class="cmtt-10">Breakpoint</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x10000110a:</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;./crawler.c,</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;339.</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;run</span><br /><span 
class="cmtt-10">Starting</span><span 
class="cmtt-10">&#x00A0;program:</span><span 
class="cmtt-10">&#x00A0;/Users/atc/teaching/cs23/notes/s4/my-lab4/src/crawler/</span><br /><span 
class="cmtt-10">crawler</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><span 
class="cmtt-10">&#x00A0;../../data/</span><span 
class="cmtt-10">&#x00A0;2</span><br /><span 
class="cmtt-10">Reading</span><span 
class="cmtt-10">&#x00A0;symbols</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;shared</span><span 
class="cmtt-10">&#x00A0;libraries</span><span 
class="cmtt-10">&#x00A0;+.</span><span 
class="cmtt-10">&#x00A0;done</span><br /><span 
class="cmtt-10">ascii</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;50</span><span 
class="cmtt-10">&#x00A0;string</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;integer</span><span 
class="cmtt-10">&#x00A0;2</span><br /><br /><span 
class="cmtt-10">Breakpoint</span><span 
class="cmtt-10">&#x00A0;1,</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(argc=4,</span><span 
class="cmtt-10">&#x00A0;argv=0x7fff5fbff530)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;./crawler.c:339</span><br /><span 
class="cmtt-10">339if</span><span 
class="cmtt-10">&#x00A0;(initList()</span><span 
class="cmtt-10">&#x00A0;!=</span><span 
class="cmtt-10">&#x00A0;1){</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;next</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;351page</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;getPage(argv[1],</span><span 
class="cmtt-10">&#x00A0;current_depth,</span><span 
class="cmtt-10">&#x00A0;argv[2]);</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;dict</span><br /><span 
class="cmtt-10">\$1</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*)</span><span 
class="cmtt-10">&#x00A0;0x100801000</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict</span><br /><span 
class="cmtt-10">\$2</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;10000</span><span 
class="cmtt-10">&#x00A0;times&#x003E;},</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 124--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>Step 3: Code and check *getPage(seedURL, current&#x02D9;depth, target&#x02D9;directory)*</h3>
<!--l. 126--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>Code and check *getPage(seedURL, current&#x02D9;depth, target&#x02D9;directory)* Get HTML
page &#8211; this is a stricky function.
<!--l. 129--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>You have to use wget to store the seed page to a temp file. Determine the length of the
temp file in terms of the number of bytes (+1 for the string termination 0 character that you need to
append to the end of the string), malloc a buffer, read in the file into the buffer and add the 0 at the end
of the string. Then return the pointer to the buffer.
<!--l. 132--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>You can set a break point on the return from getPage and print out the string,
you can make sure that the length of the buffer is the same as what wget prints outu, or,
use the shell command &#8220;wc&#8221; on the temp file to check the number of characters/bytes - the
length buffer should be the same the output of wget or wc + 1. This function also creates
a file (viz 1..N) to store the URL, depth, hmtl. You can also use the shell command &#8220;less&#8221;
on the file to check that it is the same as the temp file with the addition of the URL and
depth &#8211; try using the shell command &#8220;diff&#8221; to do this smartly. These rudimentary checks give
confidence that the getPage function is working correctly. It does not mean that bugs are
not present. You need to run unit tests to determine this &#8211; we will discuss this later in the
course.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;truncates</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;output</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;page</span><br /><span 
class="cmtt-10">$85</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100815a00</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;&#x003C;!DOCTYPEhtmlPUBLIC\"-//W3C//DTDXHTML1.0Transitional//</span><br /><span 
class="cmtt-10">EN\"\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&#x003E;&#x003C;htmlxmlns=\</span><br /><span 
class="cmtt-10">"http://www.w3.org/1999/xhtml\"&#x003E;&#x003C;head&#x003E;&#x003C;title&#x003E;WelcometotheDartmouthComputerSc&#8217;&#8217;...</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;printf</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;see</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;complete</span><span 
class="cmtt-10">&#x00A0;page</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;note,</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;notes</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;printf</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;page</span><span 
class="cmtt-10">&#x00A0;%s\n&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;page</span><br /><br /></div></div>
                                                                                  
                                                                                  
<!--l. 158--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a> Step 4: Code and check *extractURLs(page, SEED&#x02D9;URL)* </h3>
<!--l. 160--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>Code and check *extractURLs(page, SEED&#x02D9;URL)* Extract all URLs from
SEED&#x02D9;URL page.
<!--l. 163--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>This function needs to use the parser GetNextURL (we give you the code
to do this, phew) to extract the URLs from the page (the buffer string mentioned above).
It should add each URL to the url&#x02D9;list[] array if the URL has the same URL&#x02D9;PREFIX (i.e.,
<span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">define</span><span 
class="cmtt-10">&#x00A0;URL_PREFIX</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu&#8217;&#8217;</span></span></span>). This is really important since we only want
to search crawler CS pages and not the New York Times webpages! So you need to do a string comparison
to check that the URL has the same prefix as above. The function needs to first initialize the complete
url&#x02D9;list[] to NULL; recall url&#x02D9;list is an array of pointers to URLs (strings). Therefore, if a valid URL
is found you have to malloc a string to copy the URL into and then add the pointer to the
url&#x02D9;list[].
<!--l. 166--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>Once you return from this function use gdb to look at the URLs in the url&#x02D9;list &#8211; this
function returns a pointer to url&#x02D9;list[] which is simply the name of the array if you use a global variable - if
you malloc url&#x02D9;list then return the pointer.
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[0]</span><br /><span 
class="cmtt-10">$77</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001000c0</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/internal/index.php&#8217;&#8217;</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[1]</span><br /><span 
class="cmtt-10">$78</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001004b0</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/connector/index.php&#8217;&#8217;</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[3]</span><br /><span 
class="cmtt-10">$79</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100100c90</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/faculty-other/index.php&#8217;&#8217;</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[4]</span><br /><span 
class="cmtt-10">$80</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100101080</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/staff-administrative/index.php&#8217;&#8217;</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[5]</span><br /><span 
class="cmtt-10">$81</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100101470</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/staff-technical/index.php&#8217;&#8217;</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;url_list[6]</span><br /><span 
class="cmtt-10">$82</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100101860</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/postdoctoral-researchers/index.php&#8217;&#8217;</span><br /><br /><br /></div></div>
<!--l. 195--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a> Step 5: Code and check *updateListLinkToBeVisited(URLsLists, current&#x02D9;depth + 1)* </h3>
<!--l. 197--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>Code and check *updateListLinkToBeVisited(URLsLists, current&#x02D9;depth + 1)* For all
the URL in the URLsList that do not exist already exist in the dictionary add a DNODE and URLNODE
(URL name, depth, visited) to dictionary list.
<!--l. 200--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span><span 
class="cmti-10">This is perhaps the most complicated function you will code for the crawler</span>. At a high level
it has to determine uniqueness of all URLs in the url&#x02D9;list (it is very likely that your code will come across
duplicates). We discussed in class how the dictionary can be used to determine uniqueness and how
the dictionary can searched to determine uniqueness; and, if the URL is unique it shall be
added at the end of the Dictionary list (i.e., <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">dict-&#x003E;end</span></span></span>) or at the end of cluster if there is a
collision. The process of adding an unique URL requires the code to malloc and initialize a
URLNODE and DNODE. Then, link the DNODE and URLNODE pair into the dictionary
correctly.
<!--l. 203--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>Set a break point after before and after this function is called and inspect the
dictionary data structure. For the seed webpage you should get approximately 30 URLs (could be
more or less). You should be able to run down the list and inspect pointers to DNODEs and
URLNODEs and study their contents: is the structure intact? are all the pointers correct
including start and end of the deictionary, and next prev for the DNODE? are all the elements in
the datastructures that are not pointers correct (DNODE&#8217;s key, URLNODE&#8217;s url, visited,
depth). If not you have a bug. Note, the debugger is very powerful. You can follow pointers
and print out data structures with ease. Much better than using cumbersome printfs in your
                                                                                  
                                                                                  
code.
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict</span><br /><span 
class="cmtt-10">$54</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;708</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081ec00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;287</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081f000,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;262</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100815200,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;1508</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081d800,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;2446</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081d400,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;47</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081f400,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;518</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081f800,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;456</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081e000,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;201</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081e400,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;811</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081dc00,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;302</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100815600,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;1332</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100814a00,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;29</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081d000,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;240</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081e800,</span><br /><span 
class="cmtt-10">0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;389</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100814e00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;47</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081cc00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;401</span><span 
class="cmtt-10">&#x00A0;times&#x003E;},</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814a00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081f800</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;start,</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict-&#x003E;start</span><br /><span 
class="cmtt-10">$56</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814e00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001072f0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;972</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">$57</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081f400,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001037e0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/site/</span><br /><span 
class="cmtt-10">contact-dartmouth-computer-science.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;915</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict-&#x003E;end</span><br /><span 
class="cmtt-10">$57</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081f400,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001037e0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/site/</span><br /><span 
class="cmtt-10">contact-dartmouth-computer-science.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;915</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;Print</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;start-&#x003E;data</span><br /><span 
class="cmtt-10">$58</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)</span><span 
class="cmtt-10">&#x00A0;0x1001072f0</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;Print</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;first</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;last</span><span 
class="cmtt-10">&#x00A0;URLNODEs</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;Dictionary.</span><span 
class="cmtt-10">&#x00A0;Because</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;cast</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;get</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;work</span><span 
class="cmtt-10">&#x00A0;properly</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start-&#x003E;data)</span><br /><span 
class="cmtt-10">$59</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;972</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;end-&#x003E;data)</span><br /><span 
class="cmtt-10">$60</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/site/</span><br /><span 
class="cmtt-10">contact-dartmouth-computer-science.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;915</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;Importantly,</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;traverse</span><span 
class="cmtt-10">&#x00A0;down</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;double-linked</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;make</span><span 
class="cmtt-10">&#x00A0;sure</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;correct</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;start-&#x003E;next</span><br /><span 
class="cmtt-10">$63</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;*)</span><span 
class="cmtt-10">&#x00A0;0x100814e00</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict-&#x003E;start-&#x003E;next</span><br /><span 
class="cmtt-10">$64</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100815200,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814a00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001000c0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/internal/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;940</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict-&#x003E;start-&#x003E;next-&#x003E;next</span><br /><span 
class="cmtt-10">$65</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100815600,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814e00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001004b0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/connector/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;939</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*dict-&#x003E;start-&#x003E;next-&#x003E;prev</span><br /><span 
class="cmtt-10">$66</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814e00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x1001072f0,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;972</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URLNODEs</span><span 
class="cmtt-10">&#x00A0;hanging</span><span 
class="cmtt-10">&#x00A0;off</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;these</span><span 
class="cmtt-10">&#x00A0;DNODES</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start-&#x003E;next-&#x003E;data)</span><br /><span 
class="cmtt-10">$68</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/internal/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;940</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start-&#x003E;next-&#x003E;next-&#x003E;data)</span><br /><span 
class="cmtt-10">$69</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/connector/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;939</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;anypoint</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;explit</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;dict</span><br /><span 
class="cmtt-10">1:</span><span 
class="cmtt-10">&#x00A0;dict</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*)</span><span 
class="cmtt-10">&#x00A0;0x100801000</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;*dict</span><br /><span 
class="cmtt-10">2:</span><span 
class="cmtt-10">&#x00A0;*dict</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;708</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081ec00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;287</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081f000,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;262</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100815200,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;1508</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081d800,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;2446</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081d400,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;47</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081f400,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;518</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081f800,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;456</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081e000,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;201</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081e400,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;811</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081dc00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;302</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100815600,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;1332</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x100814a00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;29</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x10081d000,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;240</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081e800,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;389</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><span 
class="cmtt-10">&#x00A0;0x100814e00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;47</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">0x10081cc00,</span><span 
class="cmtt-10">&#x00A0;0x0</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;401</span><span 
class="cmtt-10">&#x00A0;times&#x003E;},</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100814a00,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081f800</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((DNODE</span><span 
class="cmtt-10">&#x00A0;*)0x10081d400)</span><br /><span 
class="cmtt-10">$71</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081d800,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x10081d000,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0x100101470,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/</span><br /><span 
class="cmtt-10">staff-technical/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;933</span><span 
class="cmtt-10">&#x00A0;times&#x003E;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)0x100101470)</span><br /><span 
class="cmtt-10">$73</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/</span><br /><span 
class="cmtt-10">staff-technical/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;933</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><br /><br /></div></div>
<!--l. 360--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-9000"></a>Step 6: Code and check *setURLasVisited(SEED&#x02D9;URL)*</h3>
<!--l. 362--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>*setURLasVisited(SEED&#x02D9;URL)* Mark the current URL visited in the
URLNODE.
<!--l. 365--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>Simply set the current URL as visited.
<!--l. 368--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>Simply use gdb to inspect the DNODE data structure before and after this function is
called.
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start-&#x003E;data)</span><br /><span 
class="cmtt-10">$87</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;972</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">}</span><br /><br /><br /></div></div>
<!--l. 391--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-10000"></a> Step 7: Code and check *getAddressFromTheLinksToBeVisited(current&#x02D9;depth)*. </h3>
<!--l. 394--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>*getAddressFromTheLinksToBeVisited(current&#x02D9;depth)*. Get the next URL to be
visited from the dictionary list (first one not visited from <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">dict-&#x003E;start</span></span></span>.
<!--l. 397--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>Simply traverse the dictionary&#8217;s DNODEs searching for a URLNODE not visited. If there
aren&#8217;t any (all URLNODEs have been visited - we are done!) we return NULL and the crawler drops out
of its &#8220;while loop&#8221; (see pseudo code) and cleans up.
<!--l. 400--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>Simply check after the function is called that the URLNODE has not been visited. Also,
find the URLNODE on the dictionary and make sure that the prev DNODE&#8217;s URLNODE has been
visited, and that the next DNODE&#8217;s URLNODE is &#8220;not visited&#8221; (assuming that the current DNODE&#8217;s
URLNODE is not the last item on the dictionary).
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><br /><span 
class="cmtt-10">(gdb)</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;*((URLNODE</span><span 
class="cmtt-10">&#x00A0;*)0x100101470)</span><br /><span 
class="cmtt-10">$73</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;url</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;http://www.cs.dartmouth.edu/site-content/</span><br /><span 
class="cmtt-10">staff-technical/index.php&#8217;&#8217;,</span><span 
class="cmtt-10">&#x00A0;&#8217;\0&#8217;</span><span 
class="cmtt-10">&#x00A0;&#x003C;repeats</span><span 
class="cmtt-10">&#x00A0;933</span><span 
class="cmtt-10">&#x00A0;times&#x003E;,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0</span><br /><span 
class="cmtt-10">}</span><br /><span 
class="cmtt-10">(gdb)</span><br /><br /></div></div>
<!--l. 424--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-11000"></a> Step 8: Code and check *cleanup* </h3>
<!--l. 426--><p class="noindent" ><span 
class="cmbx-10">Function to code: </span>*cleanup* Clean up data structures and make sure all files are closed, resources
deallocated.
<!--l. 429--><p class="noindent" ><span 
class="cmbx-10">Tips to code: </span>Simply breakdown all the data structures malloced by freeing them.
                                                                                  
                                                                                  
<!--l. 432--><p class="noindent" ><span 
class="cmbx-10">Tips to debug: </span>Because free a chunk of memory still leaves pointers in data structures this is hard to
check. But we will use a tool valgrind to check for memory leaks.
<!--l. 435--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-12000"></a>Debugging tricky bugs: valgrind and gdb are your friends, printf your enemy</h3>
<!--l. 437--><p class="noindent" >This is your first real encounter with dynamic memory management for data strcutures and pointers
which drive the management and operation of the data structures. Many tricky bugs lead to
segfaults that can be easily debugged &#8211; a pointer that is NULL when you expect an address to a
malloced data structure. But bugs may manifest all sorts of edge cases leading to unstable
code, infinite loops, fewer crawled files than expected. You might have a beautiful operational
crawler at depth 2 but segfaults at depth 3; or you might crawl at level 3 but if you change the
size of the hash table (MAX_HASH_SLOTS) from 10000 entries (which means the crawler
nearly always finds a NULL pointer in the hash table) to 10 entries (which means your code is
executing collision processing nearly all the time) then you might (or will likely ;-) segafult &#8211; these
are edge cases. By changing a system parameter (i.e., MAX_HASH_SLOTS) we radically
change the operation of the system forcing the program control through code not probably
executed often. These edge case tests force pesky bugs out into the light so we can swat them &#8211;
splat!.
<!--l. 439--><p class="noindent" >Once you have coded each of the steps above and used the debugger to verify that the code functionally
works you can go on to complete the crawler cycle which is just a while loop for all URLs to visit. You will
likely experiennce some of the bugs mentioned above &#8211; many associated with your codes interaction with
memory &#8211; that is data strcutures.
<!--l. 441--><p class="noindent" >What do you do if you have a really non-obvious bug &#8211; that is, a tricky one?
<!--l. 443--><p class="noindent" ><span 
class="cmbx-10">1) run your program through valgrind, and note the line numbers of any errors.</span>
<span 
class="cmbx-10">Examine the code around these lines and see if I can figure out what the problem</span>
<span 
class="cmbx-10">is</span>.
<!--l. 445--><p class="noindent" >We haven&#8217;t covered valgrind yet other than the quick demo in class. Run this command on the command
line once you have a clean make &#8211; on a single command line (it looks like it&#8217;s on two lines below but has to
be one:
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;valgrind</span><span 
class="cmtt-10">&#x00A0;--leak-check=yes</span><span 
class="cmtt-10">&#x00A0;--track-origins=yes</span><span 
class="cmtt-10">&#x00A0;--log-file=valout</span><span 
class="cmtt-10">&#x00A0;-v</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;http://www.cs.dartmouth.edu/~campbell/cs50/</span><span 
class="cmtt-10">&#x00A0;../../data</span><span 
class="cmtt-10">&#x00A0;0</span><br /><br /></div></div>
<!--l. 460--><p class="noindent" >We will discuss valgrind more in class this week along with other techniques for testing and debugging.
But here is a quick introduction to valgrind:
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;http://valgrind.org/docs/manual/quick-start.html</span><br /><br /></div>                                 </div>
<!--l. 473--><p class="noindent" ><span 
class="cmbx-10">2) If you can&#8217;t simply figure out the problem by eyeballing your code (i.e., desk checking it),</span>
<span 
class="cmbx-10">then start gdb and set breakpoints at some nearby lines &#8211; that is before and/or after the</span>
<span 
class="cmbx-10">source code line numbers given by the valgrind error indicated in valout. Step through</span>
<span 
class="cmbx-10">(potentially multiple times), examining variables (e.g., DNODEs) and the code until you</span>
<span 
class="cmbx-10">understand &#8220;the problem&#8221; (always a good place to start) &#8211; and what valgrind is</span>
                                                                                  
                                                                                  
<span 
class="cmbx-10">complaining about, such as, mememory leaks, writing/reading beyond malloced</span>
<span 
class="cmbx-10">memory</span>.
<!--l. 475--><p class="noindent" >Start by looking at the valout file &#8211; this is the output of valgrind (see the command line). Note, valgrind
runs much more slowly that non valgrind code. In addition, we set the verbose flag in the command.
Ideally you should have no errors but if you do (which you will for sure) then clear all the illegal read and
writes and memory leaks.
<!--l. 477--><p class="noindent" >I would not continue with any further code development until you clear all the valgrind errors; your
CLEAN (no errors) valout file should look like this for example:
<div 
class="colorbox" id="colorbox9"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;78==15102==</span><span 
class="cmtt-10">&#x00A0;HEAP</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;79==15102==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;exit:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;blocks</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;80==15102==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;heap</span><span 
class="cmtt-10">&#x00A0;usage:</span><span 
class="cmtt-10">&#x00A0;37</span><span 
class="cmtt-10">&#x00A0;allocs,</span><span 
class="cmtt-10">&#x00A0;37</span><span 
class="cmtt-10">&#x00A0;frees,</span><span 
class="cmtt-10">&#x00A0;114,513</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;allocated</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;81==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;82==15102==</span><span 
class="cmtt-10">&#x00A0;All</span><span 
class="cmtt-10">&#x00A0;heap</span><span 
class="cmtt-10">&#x00A0;blocks</span><span 
class="cmtt-10">&#x00A0;were</span><span 
class="cmtt-10">&#x00A0;freed</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;no</span><span 
class="cmtt-10">&#x00A0;leaks</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;possible</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;83==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;84==15102==</span><span 
class="cmtt-10">&#x00A0;ERROR</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;85--15102--</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;86--15102--</span><span 
class="cmtt-10">&#x00A0;used_suppression:</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;glibc-2.5.x-on-SUSE-10.2-(PPC)-2a</span><span 
class="cmtt-10">&#x00A0;/usr/lib64/valgrind/default.\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;supp:1286</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;87==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;88==15102==</span><span 
class="cmtt-10">&#x00A0;ERROR</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2)</span><br /><br /></div></div>
<!--l. 501--><p class="noindent" ><span 
class="cmbx-10">3) Of course, there could always be edge cases where something completely unrelated to the</span>
<span 
class="cmbx-10">code is at fault, but these are pretty rare</span>
<!--l. 503--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-13000"></a>Final comment</h3>
<!--l. 505--><p class="noindent" >Once you have done 1-8 for the seed URL you will be in good shape to run in the &#8220;while loop&#8221; doing steps
3, 4, 5, 6 and 7 until no more URLNODE&#8217;s need to be visited. This is not to say there will not be bugs
running more deeply in the list but you will now have a good sense of the &#8220;excuting data strcutures&#8221; and
valgrind and gdb skills to attack those pesky bugs if lurking. Remember, printf is not your friend. Dump
him now.
 
</body></html> 

                                                                                  



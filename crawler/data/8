http://www.cs.dartmouth.edu/~campbell/cs50/shell.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="shell.tex"> 
<meta name="date" content="2014-01-09 20:10:00"> 
<link rel="stylesheet" type="text/css" href="shell.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 2</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>The Linux Shell and Commands</h1>
<!--l. 20--><p class="noindent" >From the last lecture we learnt to write our first C program and looked at the compiler (gcc)
code chain. In this lecture, we will discuss the Linux <span 
class="cmti-10">shell </span>and its commands. The shell is a
command line interpreter and invokes kernel level commands. It also can be used as a scripting
language to design your own utilities. We will discuss scripting as part a future lecture on shell
programming.
<!--l. 22--><p class="noindent" >Since we do not recommend you buy a Linux book here are some very good references and free access
online books - see <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/resources.html" > resources. </a>
<!--l. 24--><p class="noindent" >If you need help on the meaning or syntax of any unix shell command you can use the manual (man)
pages or the <a 
href="http://www.computerhope.com/unix.htm#04" > web unix commands. </a>
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 35--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">The shell
     </li>
     <li class="itemize">The file system</li></ul>
<!--l. 42--><p class="noindent" >OK. Let&#8217;s get started.
<!--l. 44--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>The shell</h3>
                                                                                  
                                                                                  
<!--l. 46--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-6000"></a>Commands, switches, arguments</h4>
<!--l. 48--><p class="noindent" >The shell is the Linux command line interpreter. It provides an interface between the user and the kernel
and executes programs called commands. For example, if a user enters <span 
class="cmti-10">ls </span>then the shell executes the <span 
class="cmti-10">ls</span>
command. The shell can also execute other programs such as applications, scripts, and user programs
(e.g., written in c or the shell programming language).
<!--l. 50--><p class="noindent" >You will get by in the course by becoming familiar with a subset of the Linux commands.
<!--l. 52--><p class="noindent" >Linux has often been criticized for being very terse (it&#8217;s rumored that its designers were bad typists).
Many commands have short, cryptic names - vowels are a rarity:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-1">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;awk,&#x00A0;cat,&#x00A0;cp,&#x00A0;cd,&#x00A0;chmod,&#x00A0;grep,&#x00A0;find,&#x00A0;ls,&#x00A0;mv,&#x00A0;ps,&#x00A0;rm</div>
<!--l. 56--><p class="nopar" >
<!--l. 58--><p class="noindent" >We will learn to use all of these commands and more.
<!--l. 60--><p class="noindent" >Linux command output is also very terse - the default action on success is silence. Only errors are
reported. Linux strongly supports the philosophy of one and only one way to perform each task. Linux
commands are often termed tools or utilities - familiarity with the &#8220;top 20&#8221; will be a great
help.
<!--l. 62--><p class="noindent" >Instructions entered in response to the shell prompt have the following syntax:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-2">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;command&#x00A0;[arg1]&#x00A0;[arg2]&#x00A0;..&#x00A0;[argn]</div>
<!--l. 65--><p class="nopar" >
<!--l. 67--><p class="noindent" >The brackets [] indicate that the arguments are optional. Many commands can be executed with or
without arguments. Others require arguments (e.g., cp sort.c anothersort.c) to work correctly, if not, they
will provide some error status message in return. But to avoid an explosion in the number
of commands most commands support switches (i.e., options) to modify the actions of the
commands.
<!--l. 69--><p class="noindent" >For example, lets use the ls command and the -l option switch to list in long format the file c.tex. Switches
are often single characters preceded by a hyphen (e.g., -l). Most commands accept switches in any order
though they must appear before all &#8220;true&#8221; arguments (usually filenames). In the case of the ls example
below the command arguments represent [options] filenames[s], as shown below. Options therefore modify
the operation of the command and are operated on by the program called by the shell and not the shell
itself.
<!--l. 71--><p class="noindent" >In fact, the command is argument 0 (ls), -l switch or option is argument 1 and the filename is argument 2.
Some commands also accept their switches grouped together. For example, the following switches to ls are
identical:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-3">
[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-rtl
&#x00A0;<br />...
&#x00A0;<br />[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;-r&#x00A0;-&#x00A0;t</div>
<!--l. 77--><p class="nopar" >
<!--l. 79--><p class="noindent" >The shell parses the words or tokens (commandname , options, filesnames[s]) and gets the kernel to
execute the commands assuming the syntax is good.
<!--l. 81--><p class="noindent" >Typically, the shell processes the complete line after a carriage return (cr) (carriage return) is entered and
finds the program that the command line wants executing. The shell looks for the command to execute
either in the specified directory if given (./mycommnd) or it searches through a list of directories
depending on your $PATH variable.
<!--l. 83--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-7000"></a>Path environment</h4>
<!--l. 85--><p class="noindent" >You will need to look at your $PATH variable and update it from time to time to make sure the path to
the code you want to execute is there. Typically, your login files that execute when you log in
(.bash&#x02D9;profile) or each time to execute a command (.bashrc) are the place to set up these environment
variables such as $PATH.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-4">
echo&#x00A0;$PATH
&#x00A0;<br />/sw/bin:/sw/sbin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/texbin:/sw/bin:/usr/X11R6/bin</div>
<!--l. 89--><p class="nopar" >
<!--l. 91--><p class="noindent" >So where does the ls command executed above reside in the Linux directory hierarchy. Let&#8217;s use another
command to find out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-5">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$&#x00A0;whereis&#x00A0;ls
&#x00A0;<br />/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$</div>
<!--l. 99--><p class="nopar" >
<!--l. 101--><p class="noindent" >The <span 
class="cmti-10">whereis </span>or <span 
class="cmti-10">which </span>commands are a useful sanity check if you want to know for sure which ls command
is executed. For example, I could have written a program called ls and placed it in my working directory -
probably not a good idea but could happen. In that case, if I entered ls - which command would the shell
execute?
<!--l. 103--><p class="noindent" >So we can see from the $PATH variable that /bin is in the path. Hence the shell can track down the ls
binary to execute. The fact that the ls command is in /bin assumes that the filename /bin/ls has the
correct permission set to be an executable by all. We can check this.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-6">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;ls&#x00A0;-l&#x00A0;/bin/ls
&#x00A0;<br />-r-xr-xr-x&#x00A0;&#x00A0;&#x00A0;1&#x00A0;root&#x00A0;&#x00A0;wheel&#x00A0;&#x00A0;60972&#x00A0;Oct&#x00A0;17&#x00A0;&#x00A0;2006&#x00A0;/bin/ls</div>
<!--l. 108--><p class="nopar" >
<!--l. 110--><p class="noindent" >Indeed it is. The file is owned by &#8220;root&#8221; and is executable by all.
<!--l. 112--><p class="noindent" >If I set my $PATH variable to &#8220;.&#8221; only the current working directory and execute ls (this would be akin to
not having my path name set up correctly) then the shell would not be able to find the correct program to
execute (assuming I don&#8217;t have an ls binary with the correct permissions in my current directory). Here is
what would happen.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-7">
[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;PATH=.
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;ls:&#x00A0;command&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;type:&#x00A0;ls:&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$</div>
<!--l. 123--><p class="nopar" >
<!--l. 125--><p class="noindent" >You may come across this error (&#8220;-bash: ls: command not found&#8221; or variants thereof) when you install
code or try and execute new programs you want to use or have written.
<!--l. 127--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-8000"></a>There are shells, shells and more shells</h4>
<!--l. 129--><p class="noindent" >There are a number of shells available to a Linux user - so which one do you select? These
are:
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">sh </span>- This is known as the Borne Shell and is the original shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">csh, tcsh </span>- These are well-known and widely used derivatives of the Borne shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">ksh </span>- The popular Korn shell; and
     </li>
     <li class="itemize"><span 
class="cmti-10">bash </span>- The Borne Again SHell is the most popular shell used for linux and developed by GNU.</li></ul>
<!--l. 138--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-9000"></a>Changing the Shell to bash</h4>
<!--l. 140--><p class="noindent" >We will be using the bash shell in this course since it is standard fare with Linux machines. Let&#8217;s check
what shell has been configured for your login account. If it&#8217;s not the bash shell then let&#8217;s change the shell
using the change shell <span 
class="cmti-10">chsh </span>command. To find out what shell is running, log in and look at the $SHELL
environment variable. We will use the <span 
class="cmti-10">echo </span>command which is akin to the print (e.g., printf in C)
                                                                                  
                                                                                  
statement in many languages.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-8">
[campbell@spruce&#x00A0;~]$&#x00A0;echo&#x00A0;$SHELL
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;chsh
&#x00A0;<br />please&#x00A0;login&#x00A0;to&#x00A0;galehead&#x00A0;and&#x00A0;run&#x00A0;/usr/bin/chsh&#x00A0;from&#x00A0;there.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;ssh&#x00A0;galehead
&#x00A0;<br />campbell@galehead&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Sun&#x00A0;Dec&#x00A0;23&#x00A0;22:58:58&#x00A0;2007&#x00A0;from&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-l
&#x00A0;<br />/bin/bash
&#x00A0;<br />/bin/sh
&#x00A0;<br />/bin/ash
&#x00A0;<br />/bin/bsh
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />/bin/csh
&#x00A0;<br />/usr/local/bin/bash
&#x00A0;<br />/usr/local/bin/tcsh
&#x00A0;<br />/bin/bash2
&#x00A0;<br />/bin/zsh</div>
<!--l. 164--><p class="nopar" >
<!--l. 166--><p class="noindent" >The tcsh shell is set. So we need to change the shell to bash. Note, that galehead is the only machine that
you can change user configuration information on such as passwords and shells. So we ssh to
galehead and list all permissible shells supported by our local Linux machines using the &#8220;chsh -l&#8221;
switch.
<!--l. 168--><p class="noindent" >Now, let&#8217;s change the shell to bash. Note, that our first attempt fails because the shell wants the full path
name. We will discuss full and relative path names later in this lecture. Our second attempt using the full
path name from above is successful.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-9">
[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />chsh:&#x00A0;shell&#x00A0;must&#x00A0;be&#x00A0;a&#x00A0;full&#x00A0;path&#x00A0;name.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;/bin/bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />Shell&#x00A0;changed.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;ps
&#x00A0;<br />&#x00A0;&#x00A0;PID&#x00A0;TTY&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;TIME&#x00A0;CMD
&#x00A0;<br />22271&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;bash
&#x00A0;<br />22345&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;ps</div>
<!--l. 185--><p class="nopar" >
<!--l. 187--><p class="noindent" >Another way to see what shell is running is to use the process status (ps) command. We can see
that the bash shell is running. The process ID and other status information of the process is
displayed.
<!--l. 189--><p class="noindent" >Note, that most commands executed by the shell starts a new &#8220;process&#8221;. (There is an exception to for
what are called <span 
class="cmti-10">builtins</span>). We will discuss processes in a future lecture.
<!--l. 191--><p class="noindent" >The basic shell operation is as follows. The shell parses the command line and finds the program to
execute. It passes any options and arguments to the program as part of a new process for
the command such as ps above. While the process is running ps above the shell waits for
the process to complete. The shell is in a sleep state. When the program completes it passes
its exit status back to the shell. At this point the shell wakes up and prompts the user for
another command. Note, that it is the program that is executed, for example, ps in this case,
that checks to see if the arguments passed to it by the shell are correct or not. It is not the
job of the shell to do that level of parsing or error checking. If there are problems with the
syntax (e.g., wrong switch) then it is the program itself that informs the user via an error
message.
<!--l. 193--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-10000"></a>A note on shell builtins</h3>
<!--l. 194--><p class="noindent" >The term command and utility are used synonymous in these notes. The shell has a number of utilities
built into the shell called <span 
class="cmti-10">builtins</span>. When a builtin runs the shell does not fork a process; that is, it does not
create a process specifically to execute the command. Therefore, the builtins run more efficiently in the
                                                                                  
                                                                                  
context of the existing process rather than having the cost of creating new processes to run the command.
Typically, users are not aware if a command runs as a builtin or a standard forked command.
The echo command exists as a builtin to the shell and as a separate utility in /bin/echo. As
a rule the shell will always execute a builtin before trying to find a command of the same
name to fork. Bash supports a number of builtins including bg, fg, cd, kill, pwd, read among
others.
<!--l. 196--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-11000"></a>Linux file system</h3>
<!--l. 198--><p class="noindent" >The Linux file system is a <span 
class="cmti-10">hierarchical file system</span>. The file system consists of a very small number of
different file types. These include text files, directories, character special files (e.g., terminals) and block
special files (e.g., disks and tapes).
<!--l. 200--><p class="noindent" >A directory is just a special type of file. A directory (akin to a Macintosh folder) contains the names and
locations of all files and directories below it. A directory always contains two special files &#8217;.&#8217; (dot) and &#8217;..&#8217;
(dot dot). Every file has a filename of up to 1024 characters typically from &#8217;A-Z a-z 0-9 &#x02D9; .&#8217; and an inode
which uniquely identifies the file in the file system.
<!--l. 202--><p class="noindent" >Directory names are separated by a slash &#8217;/&#8217;, forming pathnames.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-10">
/usr/bin/emacs
&#x00A0;<br />/etc/passwd</div>
<!--l. 207--><p class="nopar" >
<!--l. 209--><p class="noindent" >Files are accessed by referring to their relative or absolute pathnames.
<!--l. 211--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-12000"></a>Home directory</h4>
<!--l. 213--><p class="noindent" >Each account has a home directory. After you have logged in your shell will be executing in your home
directory. So let&#8217;s log in and use the <span 
class="cmti-10">pwd </span>command to find out where we are - we will be in the home
directory of course.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-11">
[atc@Macintosh-7&#x00A0;l2]$&#x00A0;ssh&#x00A0;-Y&#x00A0;-l&#x00A0;campbell&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />campbell@spruce.cs.dartmouth.edu&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Mon&#x00A0;Dec&#x00A0;24&#x00A0;11:37:01&#x00A0;2007&#x00A0;from&#x00A0;c-75-69-130-98.hsd1.nh.comcast.net
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 222--><p class="nopar" >
<!--l. 224--><p class="noindent" >Let&#8217;s list the contents of the home directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-12">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;434
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs23
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1368&#x00A0;Dec&#x00A0;24&#x00A0;11:25&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;104&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;12:01&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;4&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;728&#x00A0;Oct&#x00A0;26&#x00A0;&#x00A0;2006&#x00A0;public_html
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;435438&#x00A0;Dec&#x00A0;14&#x00A0;&#x00A0;2006&#x00A0;Sent
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Dec&#x00A0;11&#x00A0;15:14&#x00A0;teaching</div>
<!--l. 238--><p class="nopar" >
<!--l. 240--><p class="noindent" >Recall the &#8220;d&#8221; in &#8220;drwx&#8212;&#8212;&#8221; indicates that this file is in fact a directory. So we can move to that
directory assuming we have the relevant permission - which we do in all cases. So lets move
around.
<!--l. 242--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-13000"></a>File and directory permission</h4>
<!--l. 244--><p class="noindent" >All files and directories have certain access permissions which constrain access to only those users having
the correct permission. Let&#8217;s consider a couple of typical examples from above:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-13">
drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages</div>
<!--l. 251--><p class="nopar" >
<!--l. 253--><p class="noindent" >The first character of the access permissions indicate what &#8220;type of file&#8221; is being displayed.
     <ul class="itemize1">
     <li class="itemize">- plain files (such as C programs or text files)
     </li>
     <li class="itemize">d directories
     </li>
     <li class="itemize">c character special files (such as terminals)
     </li>
     <li class="itemize">b block special files (such as disk drives)</li></ul>
<!--l. 262--><p class="noindent" >Following the first type of file character the next 3 triples (i.e., groups of three characters) from left to
right represent file permissions: the <span 
class="cmti-10">read</span>, <span 
class="cmti-10">write</span>, and <span 
class="cmti-10">execute </span>permissions, for (respectively) the owner
(campbell in this case), the files&#8217;s group (faculty in this case), and the &#8220;rest-of-the-world&#8221;. To determine
that group particular files are in enter the &#8220;ls -lg&#8221; command.
<!--l. 264--><p class="noindent" >What do these permissions mean?
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">Read </span>permission means that the file may be displayed on the screen, copied to another file or
     printed on the printer - any operation that requires reading the contents of the file. Having
     read permission on a directory means that its contents can be read; for example, ls could
     read the names and attributes of the files in the directory. Could the contents of those files
     be read?
     </li>
     <li class="itemize"><span 
class="cmti-10">Write </span>permission means that the file of directory may be modified, changed or overwritten.
     Most importantly, write permission means that a file may be deleted. Write permission on a
     directory gives permission to delete a file from within a directory.
     </li>
     <li class="itemize"><span 
class="cmti-10">Execute </span>permission on a file indicates that the file may be executed (i.e., run). Since a directory
     cannot be executed its meaning is redefined. Execute permission on a directory means that
     the user can change into that directory (e.g., using cd) and examine files (e.g., using ls) that it
     has permission to read. If it does not have permission to read then permission will be denied
     when using the ls command.</li></ul>
                                                                                  
                                                                                  
<!--l. 272--><p class="noindent" >After the file permission comes the number of links to the file (e.g., 5), followed b the owner (campbell),
group (faculty), size (e.g., 128) which represents the size of the file in bytes, date and time of modification
(e.g., Dec 24 14:33), and the filename (e.g., cs50).
<!--l. 274--><p class="noindent" >Note, that shellscripts (which we will discuss in a future lecture) must have both read and execute
permission - bash or any of the shells must both be able to read the shellscript and execute it. Program
binaries on the other hand do not need to be read and only need execution permission since they are not
read but executed (recall when we tried to more a.out we could not view it because it was an executable in
machine code).
<!--l. 276--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-14000"></a>Changing permission</h4>
<!--l. 278--><p class="noindent" >The permissions on files and directories may be changed with the <span 
class="cmti-10">chmod </span>(change mode) command. When
you own a file or directory you can use chmod to change the access permissions to the file or
directory.
<!--l. 280--><p class="noindent" >Only the three permission triplets may be changed - a directory cannot be changed into a plain file nor
vice-versa.
<!--l. 282--><p class="noindent" >Permissions given to chmod are either absolute or relative (i.e., symbolic).
<!--l. 284--><p class="noindent" >Each triplet is the sum of the octal digits 4, 2, 1, and read from left to right. For example rwx is
represented by 7, rw- by 6, and r&#8211; by 4 and so on. The absolute octal values used with chmod are as
follows:
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">Octal</span><span 
class="cmtt-10">&#x00A0;Value</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Protection</span><span 
class="cmtt-10">&#x00A0;mechanism</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;400</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;200</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;directory)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;040</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;020</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;010</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;004</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;rest</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;world)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;002</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(dangerous!)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;001</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><br /><br /></div></div>
<!--l. 306--><p class="noindent" >The complete permission on any file is the sum of the values. For example, home directories are typically
700 which provides the owner with read, write, and execute permission but denies all access to
others.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">drwxr-xr-x</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">[campbell@galehead</span><span 
class="cmtt-10">&#x00A0;~]$</span><span 
class="cmtt-10">&#x00A0;chmod</span><span 
class="cmtt-10">&#x00A0;700</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">drwx------</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span></div></div>
<!--l. 321--><p class="noindent" >If you wish others to read your files set - in this case a file funny - then the command would
be:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-14">
[campbell@galehead&#x00A0;~]$&#x00A0;chmod&#x00A0;664&#x00A0;funny
&#x00A0;<br />...
&#x00A0;<br />-rw-rw-r--&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;1&#x00A0;15:50&#x00A0;funny</div>
<!--l. 327--><p class="nopar" >
<!--l. 329--><p class="noindent" >Because the file is only to be read, not written too, and the fact that it&#8217;s a file with no execution (not a
binary or shellscript) 644 makes good sense.
<!--l. 331--><p class="noindent" >Use the manual pages to read how chmod can be used in a relative or symbolic mode; for example, what
would
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-15">
[atc@Macintosh-7&#x00A0;notes]$&#x00A0;chmod&#x00A0;u=wrx,og-rwx&#x00A0;cs50</div>
<!--l. 335--><p class="nopar" >
<!--l. 337--><p class="noindent" >These symbolic arguments need to be used carefully. Here &#8220;o&#8221; means others and &#8220;u&#8221; means owner or
user.
<!--l. 339--><p class="noindent" >&#8220;chmod o+wrx cs50&#8221; do?
<!--l. 341--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-15000"></a>Moving around the file system</h4>
<!--l. 343--><p class="noindent" >The change directory command (cd) allows us to move around the Linux directory hierarchy.
Let&#8217;s combine pwd, ls, and cd to move around the my local directories that are rooted at
/net/nusers/campbell
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-16">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;lectures/
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;ls
&#x00A0;<br />bash-programming.tex&#x00A0;&#x00A0;design.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;se.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;start.tex
&#x00A0;<br />c.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;linux-advance.tex&#x00A0;&#x00A0;shell.tex
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 363--><p class="nopar" >
<!--l. 365--><p class="noindent" >There are also a number of special characters that can be used with cd for short hand.
<!--l. 367--><p class="noindent" >Moving to the parent directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-17">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50</div>
<!--l. 373--><p class="nopar" >
<!--l. 375--><p class="noindent" >Moving back to where we came from:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-18">
[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 382--><p class="nopar" >
<!--l. 384--><p class="noindent" >Moving to our home directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-19">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 390--><p class="nopar" >
<!--l. 392--><p class="noindent" >and back:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-20">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 396--><p class="nopar" >
<!--l. 398--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-16000"></a>Listing and globbing files</h4>
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-21">
campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;0
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 411--><p class="nopar" >
<!--l. 413--><p class="noindent" >Here are a popular set of switches you can use with ls:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-22">
-l list&#x00A0;in&#x00A0;long&#x00A0;format&#x00A0;(as&#x00A0;above)
&#x00A0;<br />-t sort&#x00A0;by&#x00A0;modification&#x00A0;time&#x00A0;(latest&#x00A0;first)
&#x00A0;<br />-a list&#x00A0;all&#x00A0;entries&#x00A0;(including&#x00A0;&#8217;dot&#8217;&#x00A0;files)
&#x00A0;<br />-r list&#x00A0;in&#x00A0;reverse&#x00A0;order&#x00A0;(alphabetical&#x00A0;or&#x00A0;time)
&#x00A0;<br />-R list&#x00A0;the&#x00A0;directory&#x00A0;and&#x00A0;its&#x00A0;subdirectories&#x00A0;recursively</div>
<!--l. 421--><p class="nopar" >
<!--l. 423--><p class="noindent" >We can use a number of special characters to look at the files in a smart and efficient manner:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-23">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 431--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-24">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 441--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-25">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$
&#x00A0;<br /></div>
<!--l. 454--><p class="nopar" >
<!--l. 456--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-17000"></a>Some cool tricks - an example</h4>
<!--l. 458--><p class="noindent" >If I wanted to list just the directories or just plain files (i.e., non directory files) in a directory how would I
do that? Use ls, right. Sorry, ls does not have an option to list only directories or just plain files. But we
can use a combination of commands to do this!
<!--l. 462--><p class="noindent" >We can write our own commands to do this job - we can use a combination of ls and grep to list directory
names only or plain file names only.
<!--l. 465--><p class="noindent" >First let&#8217;s just list all the files in the home directory - it includes one plain file and the rest are
directories.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-26">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 483--><p class="nopar" >
<!--l. 485--><p class="noindent" >Now we use a combination of ls and grep and the pipe command. More on this is in a later lecture but
now we begin to see the power of the shell.
<!--l. 488--><p class="noindent" >Let&#8217;s just list plain files:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-27">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;-v&#x00A0;^d
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br /></div>
<!--l. 496--><p class="nopar" >
<!--l. 498--><p class="noindent" >Now, let&#8217;s use a modification on the above to just list directories:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-28">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;^d
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 513--><p class="nopar" >
<!--l. 515--><p class="noindent" >If you don&#8217;t know any of the above swicthes then use the man command. We can also use the -F switch to
show which file is a directory or not. Check it out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-29">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-lF
&#x00A0;<br />total&#x00A0;140
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;bin/
&#x00A0;<br />drwx------&#x00A0;31&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;16&#x00A0;&#x00A0;2013&#x00A0;cs50/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Apr&#x00A0;19&#x00A0;&#x00A0;2012&#x00A0;cs60/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;532&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Drafts
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;lib/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;May&#x00A0;19&#x00A0;&#x00A0;2013&#x00A0;mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jun&#x00A0;23&#x00A0;&#x00A0;2009&#x00A0;Mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;2&#x00A0;&#x00A0;2012&#x00A0;misc/
&#x00A0;<br />-rwxrwxrwx&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:32&#x00A0;myls*
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;24&#x00A0;&#x00A0;2007&#x00A0;papers/
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;8&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;12288&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;16:55&#x00A0;public_html/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;81979&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:55&#x00A0;solutions/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;11&#x00A0;&#x00A0;2007&#x00A0;teaching/
&#x00A0;<br /></div>
<!--l. 535--><p class="nopar" >
<!--l. 537--><p class="noindent" >It is handy to be able to list just the directories when moving around the file system. So we&#8217;ll add these
commands to our bash files in the next lecture - we&#8217;ll create aliases of these commands so we can use them
any time.
<!--l. 541--><p class="noindent" >We&#8217;ll there is a ls option to list directories and indeed there are many ways to do this; for
example:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-30">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-d&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;&#x00A0;cs50/&#x00A0;&#x00A0;cs60/&#x00A0;&#x00A0;lib/&#x00A0;&#x00A0;mail/&#x00A0;&#x00A0;Mail/&#x00A0;&#x00A0;papers/&#x00A0;&#x00A0;public_html/&#x00A0;&#x00A0;teaching/&#x00A0;&#x00A0;trash/
&#x00A0;<br />
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;echo&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;cs50/&#x00A0;cs60/&#x00A0;lib/&#x00A0;mail/&#x00A0;Mail/&#x00A0;papers/&#x00A0;public_html/&#x00A0;teaching/&#x00A0;trash/
&#x00A0;<br /></div>
<!--l. 551--><p class="nopar" >
<!--l. 553--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-18000"></a>Creating and deleting directories and files</h4>
<!--l. 555--><p class="noindent" >In the following sequence we will create a new directory, create two new files (using touch), move one file
to another directory, delete the other file and remove the directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-31">
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;mkdir&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;touch&#x00A0;socket.c&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />socket.c&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;mv&#x00A0;transport.c&#x00A0;~/.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;alias&#x00A0;rm
&#x00A0;<br />alias&#x00A0;rm=&#8217;rm&#x00A0;-i&#8217;
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;alias&#x00A0;rm=rm
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;socket.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures&#x00A0;&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;rmdir&#x00A0;project</div>
<!--l. 588--><p class="nopar" >
<!--l. 590--><p class="noindent" >In the sequence above we reset the <span 
class="cmti-10">alias </span>for rm which is set up in .bashrc. When you use the &#8220;rm -i&#8221;
option the shell will ask you to confirm if you really want to delete files. This is worth doing by setting up
the alias in your .bashrc file. It is easy to type &#8220;rm&#8221; and accidently delete files. Therefore, the &#8220;-i&#8221;
(interactive) option is a life saver. For example,
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-32">
[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;-i&#x00A0;socket.c
&#x00A0;<br />rm:&#x00A0;remove&#x00A0;regular&#x00A0;empty&#x00A0;file&#x00A0;&#8216;socket.c&#8217;?&#x00A0;y</div>
<!--l. 595--><p class="nopar" >
<!--l. 597--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-19000"></a>Hidden files</h4>
<!--l. 599--><p class="noindent" >In the home directory there are a number of interesting &#8220;hidden&#8221; files. Using the &#8220;-a&#8221; lists all files
including those that begin with a dot (aka the hidden files).
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-33">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-al
&#x00A0;<br />total&#x00A0;899
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;21&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1448&#x00A0;Dec&#x00A0;24&#x00A0;14:58&#x00A0;.
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;25&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;624&#x00A0;May&#x00A0;31&#x00A0;&#x00A0;2007&#x00A0;..
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;2285&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook.lu
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;22:57&#x00A0;.adobe
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;4978&#x00A0;Dec&#x00A0;24&#x00A0;13:39&#x00A0;.bash_history
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;882&#x00A0;Jun&#x00A0;24&#x00A0;&#x00A0;1997&#x00A0;.bash_logout
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1707&#x00A0;Dec&#x00A0;22&#x00A0;18:52&#x00A0;.bash_profile
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1411&#x00A0;Dec&#x00A0;22&#x00A0;19:18&#x00A0;.bashrc
&#x00A0;<br />...&#x00A0;(snip)
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;864&#x00A0;Dec&#x00A0;23&#x00A0;22:42&#x00A0;.Xauthority
&#x00A0;<br />drwx------&#x00A0;&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;136&#x00A0;Nov&#x00A0;&#x00A0;5&#x00A0;21:04&#x00A0;.xemacs</div>
<!--l. 616--><p class="nopar" >
<!--l. 618--><p class="noindent" >But a simple ls will only show:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-34">
[campbell@spruce&#x00A0;~]$&#x00A0;ls
&#x00A0;<br />bin&#x00A0;&#x00A0;cs50&#x00A0;&#x00A0;lib&#x00A0;&#x00A0;mail&#x00A0;&#x00A0;papers&#x00A0;&#x00A0;public_html&#x00A0;&#x00A0;Sent&#x00A0;&#x00A0;Sent&#x00A0;Messages&#x00A0;&#x00A0;teaching</div>
<!--l. 623--><p class="nopar" >
<!--l. 625--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-20000"></a>Reading material for the next class</h3>
<!--l. 627--><p class="noindent" >Make sure you do the <a 
href="http://www.cs.dartmouth.edu/~campbell/c50/reading.html" > reading for the next class </a>Typically we have reading for Wednesday and Friday
classes.
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/shell.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="shell.tex"> 
<meta name="date" content="2014-01-09 20:10:00"> 
<link rel="stylesheet" type="text/css" href="shell.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 2</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>The Linux Shell and Commands</h1>
<!--l. 20--><p class="noindent" >From the last lecture we learnt to write our first C program and looked at the compiler (gcc)
code chain. In this lecture, we will discuss the Linux <span 
class="cmti-10">shell </span>and its commands. The shell is a
command line interpreter and invokes kernel level commands. It also can be used as a scripting
language to design your own utilities. We will discuss scripting as part a future lecture on shell
programming.
<!--l. 22--><p class="noindent" >Since we do not recommend you buy a Linux book here are some very good references and free access
online books - see <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/resources.html" > resources. </a>
<!--l. 24--><p class="noindent" >If you need help on the meaning or syntax of any unix shell command you can use the manual (man)
pages or the <a 
href="http://www.computerhope.com/unix.htm#04" > web unix commands. </a>
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 35--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">The shell
     </li>
     <li class="itemize">The file system</li></ul>
<!--l. 42--><p class="noindent" >OK. Let&#8217;s get started.
<!--l. 44--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>The shell</h3>
                                                                                  
                                                                                  
<!--l. 46--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-6000"></a>Commands, switches, arguments</h4>
<!--l. 48--><p class="noindent" >The shell is the Linux command line interpreter. It provides an interface between the user and the kernel
and executes programs called commands. For example, if a user enters <span 
class="cmti-10">ls </span>then the shell executes the <span 
class="cmti-10">ls</span>
command. The shell can also execute other programs such as applications, scripts, and user programs
(e.g., written in c or the shell programming language).
<!--l. 50--><p class="noindent" >You will get by in the course by becoming familiar with a subset of the Linux commands.
<!--l. 52--><p class="noindent" >Linux has often been criticized for being very terse (it&#8217;s rumored that its designers were bad typists).
Many commands have short, cryptic names - vowels are a rarity:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-1">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;awk,&#x00A0;cat,&#x00A0;cp,&#x00A0;cd,&#x00A0;chmod,&#x00A0;grep,&#x00A0;find,&#x00A0;ls,&#x00A0;mv,&#x00A0;ps,&#x00A0;rm</div>
<!--l. 56--><p class="nopar" >
<!--l. 58--><p class="noindent" >We will learn to use all of these commands and more.
<!--l. 60--><p class="noindent" >Linux command output is also very terse - the default action on success is silence. Only errors are
reported. Linux strongly supports the philosophy of one and only one way to perform each task. Linux
commands are often termed tools or utilities - familiarity with the &#8220;top 20&#8221; will be a great
help.
<!--l. 62--><p class="noindent" >Instructions entered in response to the shell prompt have the following syntax:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-2">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;command&#x00A0;[arg1]&#x00A0;[arg2]&#x00A0;..&#x00A0;[argn]</div>
<!--l. 65--><p class="nopar" >
<!--l. 67--><p class="noindent" >The brackets [] indicate that the arguments are optional. Many commands can be executed with or
without arguments. Others require arguments (e.g., cp sort.c anothersort.c) to work correctly, if not, they
will provide some error status message in return. But to avoid an explosion in the number
of commands most commands support switches (i.e., options) to modify the actions of the
commands.
<!--l. 69--><p class="noindent" >For example, lets use the ls command and the -l option switch to list in long format the file c.tex. Switches
are often single characters preceded by a hyphen (e.g., -l). Most commands accept switches in any order
though they must appear before all &#8220;true&#8221; arguments (usually filenames). In the case of the ls example
below the command arguments represent [options] filenames[s], as shown below. Options therefore modify
the operation of the command and are operated on by the program called by the shell and not the shell
itself.
<!--l. 71--><p class="noindent" >In fact, the command is argument 0 (ls), -l switch or option is argument 1 and the filename is argument 2.
Some commands also accept their switches grouped together. For example, the following switches to ls are
identical:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-3">
[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-rtl
&#x00A0;<br />...
&#x00A0;<br />[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;-r&#x00A0;-&#x00A0;t</div>
<!--l. 77--><p class="nopar" >
<!--l. 79--><p class="noindent" >The shell parses the words or tokens (commandname , options, filesnames[s]) and gets the kernel to
execute the commands assuming the syntax is good.
<!--l. 81--><p class="noindent" >Typically, the shell processes the complete line after a carriage return (cr) (carriage return) is entered and
finds the program that the command line wants executing. The shell looks for the command to execute
either in the specified directory if given (./mycommnd) or it searches through a list of directories
depending on your $PATH variable.
<!--l. 83--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-7000"></a>Path environment</h4>
<!--l. 85--><p class="noindent" >You will need to look at your $PATH variable and update it from time to time to make sure the path to
the code you want to execute is there. Typically, your login files that execute when you log in
(.bash&#x02D9;profile) or each time to execute a command (.bashrc) are the place to set up these environment
variables such as $PATH.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-4">
echo&#x00A0;$PATH
&#x00A0;<br />/sw/bin:/sw/sbin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/texbin:/sw/bin:/usr/X11R6/bin</div>
<!--l. 89--><p class="nopar" >
<!--l. 91--><p class="noindent" >So where does the ls command executed above reside in the Linux directory hierarchy. Let&#8217;s use another
command to find out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-5">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$&#x00A0;whereis&#x00A0;ls
&#x00A0;<br />/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$</div>
<!--l. 99--><p class="nopar" >
<!--l. 101--><p class="noindent" >The <span 
class="cmti-10">whereis </span>or <span 
class="cmti-10">which </span>commands are a useful sanity check if you want to know for sure which ls command
is executed. For example, I could have written a program called ls and placed it in my working directory -
probably not a good idea but could happen. In that case, if I entered ls - which command would the shell
execute?
<!--l. 103--><p class="noindent" >So we can see from the $PATH variable that /bin is in the path. Hence the shell can track down the ls
binary to execute. The fact that the ls command is in /bin assumes that the filename /bin/ls has the
correct permission set to be an executable by all. We can check this.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-6">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;ls&#x00A0;-l&#x00A0;/bin/ls
&#x00A0;<br />-r-xr-xr-x&#x00A0;&#x00A0;&#x00A0;1&#x00A0;root&#x00A0;&#x00A0;wheel&#x00A0;&#x00A0;60972&#x00A0;Oct&#x00A0;17&#x00A0;&#x00A0;2006&#x00A0;/bin/ls</div>
<!--l. 108--><p class="nopar" >
<!--l. 110--><p class="noindent" >Indeed it is. The file is owned by &#8220;root&#8221; and is executable by all.
<!--l. 112--><p class="noindent" >If I set my $PATH variable to &#8220;.&#8221; only the current working directory and execute ls (this would be akin to
not having my path name set up correctly) then the shell would not be able to find the correct program to
execute (assuming I don&#8217;t have an ls binary with the correct permissions in my current directory). Here is
what would happen.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-7">
[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;PATH=.
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;ls:&#x00A0;command&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;type:&#x00A0;ls:&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$</div>
<!--l. 123--><p class="nopar" >
<!--l. 125--><p class="noindent" >You may come across this error (&#8220;-bash: ls: command not found&#8221; or variants thereof) when you install
code or try and execute new programs you want to use or have written.
<!--l. 127--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-8000"></a>There are shells, shells and more shells</h4>
<!--l. 129--><p class="noindent" >There are a number of shells available to a Linux user - so which one do you select? These
are:
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">sh </span>- This is known as the Borne Shell and is the original shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">csh, tcsh </span>- These are well-known and widely used derivatives of the Borne shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">ksh </span>- The popular Korn shell; and
     </li>
     <li class="itemize"><span 
class="cmti-10">bash </span>- The Borne Again SHell is the most popular shell used for linux and developed by GNU.</li></ul>
<!--l. 138--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-9000"></a>Changing the Shell to bash</h4>
<!--l. 140--><p class="noindent" >We will be using the bash shell in this course since it is standard fare with Linux machines. Let&#8217;s check
what shell has been configured for your login account. If it&#8217;s not the bash shell then let&#8217;s change the shell
using the change shell <span 
class="cmti-10">chsh </span>command. To find out what shell is running, log in and look at the $SHELL
environment variable. We will use the <span 
class="cmti-10">echo </span>command which is akin to the print (e.g., printf in C)
                                                                                  
                                                                                  
statement in many languages.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-8">
[campbell@spruce&#x00A0;~]$&#x00A0;echo&#x00A0;$SHELL
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;chsh
&#x00A0;<br />please&#x00A0;login&#x00A0;to&#x00A0;galehead&#x00A0;and&#x00A0;run&#x00A0;/usr/bin/chsh&#x00A0;from&#x00A0;there.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;ssh&#x00A0;galehead
&#x00A0;<br />campbell@galehead&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Sun&#x00A0;Dec&#x00A0;23&#x00A0;22:58:58&#x00A0;2007&#x00A0;from&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-l
&#x00A0;<br />/bin/bash
&#x00A0;<br />/bin/sh
&#x00A0;<br />/bin/ash
&#x00A0;<br />/bin/bsh
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />/bin/csh
&#x00A0;<br />/usr/local/bin/bash
&#x00A0;<br />/usr/local/bin/tcsh
&#x00A0;<br />/bin/bash2
&#x00A0;<br />/bin/zsh</div>
<!--l. 164--><p class="nopar" >
<!--l. 166--><p class="noindent" >The tcsh shell is set. So we need to change the shell to bash. Note, that galehead is the only machine that
you can change user configuration information on such as passwords and shells. So we ssh to
galehead and list all permissible shells supported by our local Linux machines using the &#8220;chsh -l&#8221;
switch.
<!--l. 168--><p class="noindent" >Now, let&#8217;s change the shell to bash. Note, that our first attempt fails because the shell wants the full path
name. We will discuss full and relative path names later in this lecture. Our second attempt using the full
path name from above is successful.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-9">
[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />chsh:&#x00A0;shell&#x00A0;must&#x00A0;be&#x00A0;a&#x00A0;full&#x00A0;path&#x00A0;name.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;/bin/bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />Shell&#x00A0;changed.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;ps
&#x00A0;<br />&#x00A0;&#x00A0;PID&#x00A0;TTY&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;TIME&#x00A0;CMD
&#x00A0;<br />22271&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;bash
&#x00A0;<br />22345&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;ps</div>
<!--l. 185--><p class="nopar" >
<!--l. 187--><p class="noindent" >Another way to see what shell is running is to use the process status (ps) command. We can see
that the bash shell is running. The process ID and other status information of the process is
displayed.
<!--l. 189--><p class="noindent" >Note, that most commands executed by the shell starts a new &#8220;process&#8221;. (There is an exception to for
what are called <span 
class="cmti-10">builtins</span>). We will discuss processes in a future lecture.
<!--l. 191--><p class="noindent" >The basic shell operation is as follows. The shell parses the command line and finds the program to
execute. It passes any options and arguments to the program as part of a new process for
the command such as ps above. While the process is running ps above the shell waits for
the process to complete. The shell is in a sleep state. When the program completes it passes
its exit status back to the shell. At this point the shell wakes up and prompts the user for
another command. Note, that it is the program that is executed, for example, ps in this case,
that checks to see if the arguments passed to it by the shell are correct or not. It is not the
job of the shell to do that level of parsing or error checking. If there are problems with the
syntax (e.g., wrong switch) then it is the program itself that informs the user via an error
message.
<!--l. 193--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-10000"></a>A note on shell builtins</h3>
<!--l. 194--><p class="noindent" >The term command and utility are used synonymous in these notes. The shell has a number of utilities
built into the shell called <span 
class="cmti-10">builtins</span>. When a builtin runs the shell does not fork a process; that is, it does not
create a process specifically to execute the command. Therefore, the builtins run more efficiently in the
                                                                                  
                                                                                  
context of the existing process rather than having the cost of creating new processes to run the command.
Typically, users are not aware if a command runs as a builtin or a standard forked command.
The echo command exists as a builtin to the shell and as a separate utility in /bin/echo. As
a rule the shell will always execute a builtin before trying to find a command of the same
name to fork. Bash supports a number of builtins including bg, fg, cd, kill, pwd, read among
others.
<!--l. 196--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-11000"></a>Linux file system</h3>
<!--l. 198--><p class="noindent" >The Linux file system is a <span 
class="cmti-10">hierarchical file system</span>. The file system consists of a very small number of
different file types. These include text files, directories, character special files (e.g., terminals) and block
special files (e.g., disks and tapes).
<!--l. 200--><p class="noindent" >A directory is just a special type of file. A directory (akin to a Macintosh folder) contains the names and
locations of all files and directories below it. A directory always contains two special files &#8217;.&#8217; (dot) and &#8217;..&#8217;
(dot dot). Every file has a filename of up to 1024 characters typically from &#8217;A-Z a-z 0-9 &#x02D9; .&#8217; and an inode
which uniquely identifies the file in the file system.
<!--l. 202--><p class="noindent" >Directory names are separated by a slash &#8217;/&#8217;, forming pathnames.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-10">
/usr/bin/emacs
&#x00A0;<br />/etc/passwd</div>
<!--l. 207--><p class="nopar" >
<!--l. 209--><p class="noindent" >Files are accessed by referring to their relative or absolute pathnames.
<!--l. 211--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-12000"></a>Home directory</h4>
<!--l. 213--><p class="noindent" >Each account has a home directory. After you have logged in your shell will be executing in your home
directory. So let&#8217;s log in and use the <span 
class="cmti-10">pwd </span>command to find out where we are - we will be in the home
directory of course.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-11">
[atc@Macintosh-7&#x00A0;l2]$&#x00A0;ssh&#x00A0;-Y&#x00A0;-l&#x00A0;campbell&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />campbell@spruce.cs.dartmouth.edu&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Mon&#x00A0;Dec&#x00A0;24&#x00A0;11:37:01&#x00A0;2007&#x00A0;from&#x00A0;c-75-69-130-98.hsd1.nh.comcast.net
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 222--><p class="nopar" >
<!--l. 224--><p class="noindent" >Let&#8217;s list the contents of the home directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-12">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;434
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs23
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1368&#x00A0;Dec&#x00A0;24&#x00A0;11:25&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;104&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;12:01&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;4&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;728&#x00A0;Oct&#x00A0;26&#x00A0;&#x00A0;2006&#x00A0;public_html
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;435438&#x00A0;Dec&#x00A0;14&#x00A0;&#x00A0;2006&#x00A0;Sent
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Dec&#x00A0;11&#x00A0;15:14&#x00A0;teaching</div>
<!--l. 238--><p class="nopar" >
<!--l. 240--><p class="noindent" >Recall the &#8220;d&#8221; in &#8220;drwx&#8212;&#8212;&#8221; indicates that this file is in fact a directory. So we can move to that
directory assuming we have the relevant permission - which we do in all cases. So lets move
around.
<!--l. 242--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-13000"></a>File and directory permission</h4>
<!--l. 244--><p class="noindent" >All files and directories have certain access permissions which constrain access to only those users having
the correct permission. Let&#8217;s consider a couple of typical examples from above:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-13">
drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages</div>
<!--l. 251--><p class="nopar" >
<!--l. 253--><p class="noindent" >The first character of the access permissions indicate what &#8220;type of file&#8221; is being displayed.
     <ul class="itemize1">
     <li class="itemize">- plain files (such as C programs or text files)
     </li>
     <li class="itemize">d directories
     </li>
     <li class="itemize">c character special files (such as terminals)
     </li>
     <li class="itemize">b block special files (such as disk drives)</li></ul>
<!--l. 262--><p class="noindent" >Following the first type of file character the next 3 triples (i.e., groups of three characters) from left to
right represent file permissions: the <span 
class="cmti-10">read</span>, <span 
class="cmti-10">write</span>, and <span 
class="cmti-10">execute </span>permissions, for (respectively) the owner
(campbell in this case), the files&#8217;s group (faculty in this case), and the &#8220;rest-of-the-world&#8221;. To determine
that group particular files are in enter the &#8220;ls -lg&#8221; command.
<!--l. 264--><p class="noindent" >What do these permissions mean?
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">Read </span>permission means that the file may be displayed on the screen, copied to another file or
     printed on the printer - any operation that requires reading the contents of the file. Having
     read permission on a directory means that its contents can be read; for example, ls could
     read the names and attributes of the files in the directory. Could the contents of those files
     be read?
     </li>
     <li class="itemize"><span 
class="cmti-10">Write </span>permission means that the file of directory may be modified, changed or overwritten.
     Most importantly, write permission means that a file may be deleted. Write permission on a
     directory gives permission to delete a file from within a directory.
     </li>
     <li class="itemize"><span 
class="cmti-10">Execute </span>permission on a file indicates that the file may be executed (i.e., run). Since a directory
     cannot be executed its meaning is redefined. Execute permission on a directory means that
     the user can change into that directory (e.g., using cd) and examine files (e.g., using ls) that it
     has permission to read. If it does not have permission to read then permission will be denied
     when using the ls command.</li></ul>
                                                                                  
                                                                                  
<!--l. 272--><p class="noindent" >After the file permission comes the number of links to the file (e.g., 5), followed b the owner (campbell),
group (faculty), size (e.g., 128) which represents the size of the file in bytes, date and time of modification
(e.g., Dec 24 14:33), and the filename (e.g., cs50).
<!--l. 274--><p class="noindent" >Note, that shellscripts (which we will discuss in a future lecture) must have both read and execute
permission - bash or any of the shells must both be able to read the shellscript and execute it. Program
binaries on the other hand do not need to be read and only need execution permission since they are not
read but executed (recall when we tried to more a.out we could not view it because it was an executable in
machine code).
<!--l. 276--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-14000"></a>Changing permission</h4>
<!--l. 278--><p class="noindent" >The permissions on files and directories may be changed with the <span 
class="cmti-10">chmod </span>(change mode) command. When
you own a file or directory you can use chmod to change the access permissions to the file or
directory.
<!--l. 280--><p class="noindent" >Only the three permission triplets may be changed - a directory cannot be changed into a plain file nor
vice-versa.
<!--l. 282--><p class="noindent" >Permissions given to chmod are either absolute or relative (i.e., symbolic).
<!--l. 284--><p class="noindent" >Each triplet is the sum of the octal digits 4, 2, 1, and read from left to right. For example rwx is
represented by 7, rw- by 6, and r&#8211; by 4 and so on. The absolute octal values used with chmod are as
follows:
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">Octal</span><span 
class="cmtt-10">&#x00A0;Value</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Protection</span><span 
class="cmtt-10">&#x00A0;mechanism</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;400</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;200</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;directory)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;040</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;020</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;010</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;004</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;rest</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;world)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;002</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(dangerous!)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;001</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><br /><br /></div></div>
<!--l. 306--><p class="noindent" >The complete permission on any file is the sum of the values. For example, home directories are typically
700 which provides the owner with read, write, and execute permission but denies all access to
others.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">drwxr-xr-x</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">[campbell@galehead</span><span 
class="cmtt-10">&#x00A0;~]$</span><span 
class="cmtt-10">&#x00A0;chmod</span><span 
class="cmtt-10">&#x00A0;700</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">drwx------</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span></div></div>
<!--l. 321--><p class="noindent" >If you wish others to read your files set - in this case a file funny - then the command would
be:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-14">
[campbell@galehead&#x00A0;~]$&#x00A0;chmod&#x00A0;664&#x00A0;funny
&#x00A0;<br />...
&#x00A0;<br />-rw-rw-r--&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;1&#x00A0;15:50&#x00A0;funny</div>
<!--l. 327--><p class="nopar" >
<!--l. 329--><p class="noindent" >Because the file is only to be read, not written too, and the fact that it&#8217;s a file with no execution (not a
binary or shellscript) 644 makes good sense.
<!--l. 331--><p class="noindent" >Use the manual pages to read how chmod can be used in a relative or symbolic mode; for example, what
would
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-15">
[atc@Macintosh-7&#x00A0;notes]$&#x00A0;chmod&#x00A0;u=wrx,og-rwx&#x00A0;cs50</div>
<!--l. 335--><p class="nopar" >
<!--l. 337--><p class="noindent" >These symbolic arguments need to be used carefully. Here &#8220;o&#8221; means others and &#8220;u&#8221; means owner or
user.
<!--l. 339--><p class="noindent" >&#8220;chmod o+wrx cs50&#8221; do?
<!--l. 341--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-15000"></a>Moving around the file system</h4>
<!--l. 343--><p class="noindent" >The change directory command (cd) allows us to move around the Linux directory hierarchy.
Let&#8217;s combine pwd, ls, and cd to move around the my local directories that are rooted at
/net/nusers/campbell
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-16">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;lectures/
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;ls
&#x00A0;<br />bash-programming.tex&#x00A0;&#x00A0;design.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;se.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;start.tex
&#x00A0;<br />c.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;linux-advance.tex&#x00A0;&#x00A0;shell.tex
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 363--><p class="nopar" >
<!--l. 365--><p class="noindent" >There are also a number of special characters that can be used with cd for short hand.
<!--l. 367--><p class="noindent" >Moving to the parent directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-17">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50</div>
<!--l. 373--><p class="nopar" >
<!--l. 375--><p class="noindent" >Moving back to where we came from:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-18">
[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 382--><p class="nopar" >
<!--l. 384--><p class="noindent" >Moving to our home directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-19">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 390--><p class="nopar" >
<!--l. 392--><p class="noindent" >and back:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-20">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 396--><p class="nopar" >
<!--l. 398--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-16000"></a>Listing and globbing files</h4>
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-21">
campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;0
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 411--><p class="nopar" >
<!--l. 413--><p class="noindent" >Here are a popular set of switches you can use with ls:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-22">
-l list&#x00A0;in&#x00A0;long&#x00A0;format&#x00A0;(as&#x00A0;above)
&#x00A0;<br />-t sort&#x00A0;by&#x00A0;modification&#x00A0;time&#x00A0;(latest&#x00A0;first)
&#x00A0;<br />-a list&#x00A0;all&#x00A0;entries&#x00A0;(including&#x00A0;&#8217;dot&#8217;&#x00A0;files)
&#x00A0;<br />-r list&#x00A0;in&#x00A0;reverse&#x00A0;order&#x00A0;(alphabetical&#x00A0;or&#x00A0;time)
&#x00A0;<br />-R list&#x00A0;the&#x00A0;directory&#x00A0;and&#x00A0;its&#x00A0;subdirectories&#x00A0;recursively</div>
<!--l. 421--><p class="nopar" >
<!--l. 423--><p class="noindent" >We can use a number of special characters to look at the files in a smart and efficient manner:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-23">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 431--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-24">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 441--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-25">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$
&#x00A0;<br /></div>
<!--l. 454--><p class="nopar" >
<!--l. 456--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-17000"></a>Some cool tricks - an example</h4>
<!--l. 458--><p class="noindent" >If I wanted to list just the directories or just plain files (i.e., non directory files) in a directory how would I
do that? Use ls, right. Sorry, ls does not have an option to list only directories or just plain files. But we
can use a combination of commands to do this!
<!--l. 462--><p class="noindent" >We can write our own commands to do this job - we can use a combination of ls and grep to list directory
names only or plain file names only.
<!--l. 465--><p class="noindent" >First let&#8217;s just list all the files in the home directory - it includes one plain file and the rest are
directories.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-26">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 483--><p class="nopar" >
<!--l. 485--><p class="noindent" >Now we use a combination of ls and grep and the pipe command. More on this is in a later lecture but
now we begin to see the power of the shell.
<!--l. 488--><p class="noindent" >Let&#8217;s just list plain files:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-27">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;-v&#x00A0;^d
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br /></div>
<!--l. 496--><p class="nopar" >
<!--l. 498--><p class="noindent" >Now, let&#8217;s use a modification on the above to just list directories:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-28">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;^d
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 513--><p class="nopar" >
<!--l. 515--><p class="noindent" >If you don&#8217;t know any of the above swicthes then use the man command. We can also use the -F switch to
show which file is a directory or not. Check it out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-29">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-lF
&#x00A0;<br />total&#x00A0;140
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;bin/
&#x00A0;<br />drwx------&#x00A0;31&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;16&#x00A0;&#x00A0;2013&#x00A0;cs50/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Apr&#x00A0;19&#x00A0;&#x00A0;2012&#x00A0;cs60/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;532&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Drafts
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;lib/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;May&#x00A0;19&#x00A0;&#x00A0;2013&#x00A0;mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jun&#x00A0;23&#x00A0;&#x00A0;2009&#x00A0;Mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;2&#x00A0;&#x00A0;2012&#x00A0;misc/
&#x00A0;<br />-rwxrwxrwx&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:32&#x00A0;myls*
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;24&#x00A0;&#x00A0;2007&#x00A0;papers/
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;8&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;12288&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;16:55&#x00A0;public_html/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;81979&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:55&#x00A0;solutions/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;11&#x00A0;&#x00A0;2007&#x00A0;teaching/
&#x00A0;<br /></div>
<!--l. 535--><p class="nopar" >
<!--l. 537--><p class="noindent" >It is handy to be able to list just the directories when moving around the file system. So we&#8217;ll add these
commands to our bash files in the next lecture - we&#8217;ll create aliases of these commands so we can use them
any time.
<!--l. 541--><p class="noindent" >We&#8217;ll there is a ls option to list directories and indeed there are many ways to do this; for
example:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-30">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-d&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;&#x00A0;cs50/&#x00A0;&#x00A0;cs60/&#x00A0;&#x00A0;lib/&#x00A0;&#x00A0;mail/&#x00A0;&#x00A0;Mail/&#x00A0;&#x00A0;papers/&#x00A0;&#x00A0;public_html/&#x00A0;&#x00A0;teaching/&#x00A0;&#x00A0;trash/
&#x00A0;<br />
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;echo&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;cs50/&#x00A0;cs60/&#x00A0;lib/&#x00A0;mail/&#x00A0;Mail/&#x00A0;papers/&#x00A0;public_html/&#x00A0;teaching/&#x00A0;trash/
&#x00A0;<br /></div>
<!--l. 551--><p class="nopar" >
<!--l. 553--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-18000"></a>Creating and deleting directories and files</h4>
<!--l. 555--><p class="noindent" >In the following sequence we will create a new directory, create two new files (using touch), move one file
to another directory, delete the other file and remove the directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-31">
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;mkdir&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;touch&#x00A0;socket.c&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />socket.c&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;mv&#x00A0;transport.c&#x00A0;~/.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;alias&#x00A0;rm
&#x00A0;<br />alias&#x00A0;rm=&#8217;rm&#x00A0;-i&#8217;
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;alias&#x00A0;rm=rm
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;socket.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures&#x00A0;&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;rmdir&#x00A0;project</div>
<!--l. 588--><p class="nopar" >
<!--l. 590--><p class="noindent" >In the sequence above we reset the <span 
class="cmti-10">alias </span>for rm which is set up in .bashrc. When you use the &#8220;rm -i&#8221;
option the shell will ask you to confirm if you really want to delete files. This is worth doing by setting up
the alias in your .bashrc file. It is easy to type &#8220;rm&#8221; and accidently delete files. Therefore, the &#8220;-i&#8221;
(interactive) option is a life saver. For example,
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-32">
[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;-i&#x00A0;socket.c
&#x00A0;<br />rm:&#x00A0;remove&#x00A0;regular&#x00A0;empty&#x00A0;file&#x00A0;&#8216;socket.c&#8217;?&#x00A0;y</div>
<!--l. 595--><p class="nopar" >
<!--l. 597--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-19000"></a>Hidden files</h4>
<!--l. 599--><p class="noindent" >In the home directory there are a number of interesting &#8220;hidden&#8221; files. Using the &#8220;-a&#8221; lists all files
including those that begin with a dot (aka the hidden files).
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-33">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-al
&#x00A0;<br />total&#x00A0;899
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;21&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1448&#x00A0;Dec&#x00A0;24&#x00A0;14:58&#x00A0;.
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;25&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;624&#x00A0;May&#x00A0;31&#x00A0;&#x00A0;2007&#x00A0;..
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;2285&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook.lu
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;22:57&#x00A0;.adobe
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;4978&#x00A0;Dec&#x00A0;24&#x00A0;13:39&#x00A0;.bash_history
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;882&#x00A0;Jun&#x00A0;24&#x00A0;&#x00A0;1997&#x00A0;.bash_logout
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1707&#x00A0;Dec&#x00A0;22&#x00A0;18:52&#x00A0;.bash_profile
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1411&#x00A0;Dec&#x00A0;22&#x00A0;19:18&#x00A0;.bashrc
&#x00A0;<br />...&#x00A0;(snip)
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;864&#x00A0;Dec&#x00A0;23&#x00A0;22:42&#x00A0;.Xauthority
&#x00A0;<br />drwx------&#x00A0;&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;136&#x00A0;Nov&#x00A0;&#x00A0;5&#x00A0;21:04&#x00A0;.xemacs</div>
<!--l. 616--><p class="nopar" >
<!--l. 618--><p class="noindent" >But a simple ls will only show:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-34">
[campbell@spruce&#x00A0;~]$&#x00A0;ls
&#x00A0;<br />bin&#x00A0;&#x00A0;cs50&#x00A0;&#x00A0;lib&#x00A0;&#x00A0;mail&#x00A0;&#x00A0;papers&#x00A0;&#x00A0;public_html&#x00A0;&#x00A0;Sent&#x00A0;&#x00A0;Sent&#x00A0;Messages&#x00A0;&#x00A0;teaching</div>
<!--l. 623--><p class="nopar" >
<!--l. 625--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-20000"></a>Reading material for the next class</h3>
<!--l. 627--><p class="noindent" >Make sure you do the <a 
href="http://www.cs.dartmouth.edu/~campbell/c50/reading.html" > reading for the next class </a>Typically we have reading for Wednesday and Friday
classes.
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/shell.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="shell.tex"> 
<meta name="date" content="2014-01-09 20:10:00"> 
<link rel="stylesheet" type="text/css" href="shell.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 2</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>The Linux Shell and Commands</h1>
<!--l. 20--><p class="noindent" >From the last lecture we learnt to write our first C program and looked at the compiler (gcc)
code chain. In this lecture, we will discuss the Linux <span 
class="cmti-10">shell </span>and its commands. The shell is a
command line interpreter and invokes kernel level commands. It also can be used as a scripting
language to design your own utilities. We will discuss scripting as part a future lecture on shell
programming.
<!--l. 22--><p class="noindent" >Since we do not recommend you buy a Linux book here are some very good references and free access
online books - see <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/resources.html" > resources. </a>
<!--l. 24--><p class="noindent" >If you need help on the meaning or syntax of any unix shell command you can use the manual (man)
pages or the <a 
href="http://www.computerhope.com/unix.htm#04" > web unix commands. </a>
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 35--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">The shell
     </li>
     <li class="itemize">The file system</li></ul>
<!--l. 42--><p class="noindent" >OK. Let&#8217;s get started.
<!--l. 44--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>The shell</h3>
                                                                                  
                                                                                  
<!--l. 46--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-6000"></a>Commands, switches, arguments</h4>
<!--l. 48--><p class="noindent" >The shell is the Linux command line interpreter. It provides an interface between the user and the kernel
and executes programs called commands. For example, if a user enters <span 
class="cmti-10">ls </span>then the shell executes the <span 
class="cmti-10">ls</span>
command. The shell can also execute other programs such as applications, scripts, and user programs
(e.g., written in c or the shell programming language).
<!--l. 50--><p class="noindent" >You will get by in the course by becoming familiar with a subset of the Linux commands.
<!--l. 52--><p class="noindent" >Linux has often been criticized for being very terse (it&#8217;s rumored that its designers were bad typists).
Many commands have short, cryptic names - vowels are a rarity:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-1">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;awk,&#x00A0;cat,&#x00A0;cp,&#x00A0;cd,&#x00A0;chmod,&#x00A0;grep,&#x00A0;find,&#x00A0;ls,&#x00A0;mv,&#x00A0;ps,&#x00A0;rm</div>
<!--l. 56--><p class="nopar" >
<!--l. 58--><p class="noindent" >We will learn to use all of these commands and more.
<!--l. 60--><p class="noindent" >Linux command output is also very terse - the default action on success is silence. Only errors are
reported. Linux strongly supports the philosophy of one and only one way to perform each task. Linux
commands are often termed tools or utilities - familiarity with the &#8220;top 20&#8221; will be a great
help.
<!--l. 62--><p class="noindent" >Instructions entered in response to the shell prompt have the following syntax:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-2">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;command&#x00A0;[arg1]&#x00A0;[arg2]&#x00A0;..&#x00A0;[argn]</div>
<!--l. 65--><p class="nopar" >
<!--l. 67--><p class="noindent" >The brackets [] indicate that the arguments are optional. Many commands can be executed with or
without arguments. Others require arguments (e.g., cp sort.c anothersort.c) to work correctly, if not, they
will provide some error status message in return. But to avoid an explosion in the number
of commands most commands support switches (i.e., options) to modify the actions of the
commands.
<!--l. 69--><p class="noindent" >For example, lets use the ls command and the -l option switch to list in long format the file c.tex. Switches
are often single characters preceded by a hyphen (e.g., -l). Most commands accept switches in any order
though they must appear before all &#8220;true&#8221; arguments (usually filenames). In the case of the ls example
below the command arguments represent [options] filenames[s], as shown below. Options therefore modify
the operation of the command and are operated on by the program called by the shell and not the shell
itself.
<!--l. 71--><p class="noindent" >In fact, the command is argument 0 (ls), -l switch or option is argument 1 and the filename is argument 2.
Some commands also accept their switches grouped together. For example, the following switches to ls are
identical:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-3">
[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-rtl
&#x00A0;<br />...
&#x00A0;<br />[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;-r&#x00A0;-&#x00A0;t</div>
<!--l. 77--><p class="nopar" >
<!--l. 79--><p class="noindent" >The shell parses the words or tokens (commandname , options, filesnames[s]) and gets the kernel to
execute the commands assuming the syntax is good.
<!--l. 81--><p class="noindent" >Typically, the shell processes the complete line after a carriage return (cr) (carriage return) is entered and
finds the program that the command line wants executing. The shell looks for the command to execute
either in the specified directory if given (./mycommnd) or it searches through a list of directories
depending on your $PATH variable.
<!--l. 83--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-7000"></a>Path environment</h4>
<!--l. 85--><p class="noindent" >You will need to look at your $PATH variable and update it from time to time to make sure the path to
the code you want to execute is there. Typically, your login files that execute when you log in
(.bash&#x02D9;profile) or each time to execute a command (.bashrc) are the place to set up these environment
variables such as $PATH.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-4">
echo&#x00A0;$PATH
&#x00A0;<br />/sw/bin:/sw/sbin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/texbin:/sw/bin:/usr/X11R6/bin</div>
<!--l. 89--><p class="nopar" >
<!--l. 91--><p class="noindent" >So where does the ls command executed above reside in the Linux directory hierarchy. Let&#8217;s use another
command to find out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-5">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$&#x00A0;whereis&#x00A0;ls
&#x00A0;<br />/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$</div>
<!--l. 99--><p class="nopar" >
<!--l. 101--><p class="noindent" >The <span 
class="cmti-10">whereis </span>or <span 
class="cmti-10">which </span>commands are a useful sanity check if you want to know for sure which ls command
is executed. For example, I could have written a program called ls and placed it in my working directory -
probably not a good idea but could happen. In that case, if I entered ls - which command would the shell
execute?
<!--l. 103--><p class="noindent" >So we can see from the $PATH variable that /bin is in the path. Hence the shell can track down the ls
binary to execute. The fact that the ls command is in /bin assumes that the filename /bin/ls has the
correct permission set to be an executable by all. We can check this.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-6">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;ls&#x00A0;-l&#x00A0;/bin/ls
&#x00A0;<br />-r-xr-xr-x&#x00A0;&#x00A0;&#x00A0;1&#x00A0;root&#x00A0;&#x00A0;wheel&#x00A0;&#x00A0;60972&#x00A0;Oct&#x00A0;17&#x00A0;&#x00A0;2006&#x00A0;/bin/ls</div>
<!--l. 108--><p class="nopar" >
<!--l. 110--><p class="noindent" >Indeed it is. The file is owned by &#8220;root&#8221; and is executable by all.
<!--l. 112--><p class="noindent" >If I set my $PATH variable to &#8220;.&#8221; only the current working directory and execute ls (this would be akin to
not having my path name set up correctly) then the shell would not be able to find the correct program to
execute (assuming I don&#8217;t have an ls binary with the correct permissions in my current directory). Here is
what would happen.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-7">
[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;PATH=.
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;ls:&#x00A0;command&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;type:&#x00A0;ls:&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$</div>
<!--l. 123--><p class="nopar" >
<!--l. 125--><p class="noindent" >You may come across this error (&#8220;-bash: ls: command not found&#8221; or variants thereof) when you install
code or try and execute new programs you want to use or have written.
<!--l. 127--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-8000"></a>There are shells, shells and more shells</h4>
<!--l. 129--><p class="noindent" >There are a number of shells available to a Linux user - so which one do you select? These
are:
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">sh </span>- This is known as the Borne Shell and is the original shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">csh, tcsh </span>- These are well-known and widely used derivatives of the Borne shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">ksh </span>- The popular Korn shell; and
     </li>
     <li class="itemize"><span 
class="cmti-10">bash </span>- The Borne Again SHell is the most popular shell used for linux and developed by GNU.</li></ul>
<!--l. 138--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-9000"></a>Changing the Shell to bash</h4>
<!--l. 140--><p class="noindent" >We will be using the bash shell in this course since it is standard fare with Linux machines. Let&#8217;s check
what shell has been configured for your login account. If it&#8217;s not the bash shell then let&#8217;s change the shell
using the change shell <span 
class="cmti-10">chsh </span>command. To find out what shell is running, log in and look at the $SHELL
environment variable. We will use the <span 
class="cmti-10">echo </span>command which is akin to the print (e.g., printf in C)
                                                                                  
                                                                                  
statement in many languages.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-8">
[campbell@spruce&#x00A0;~]$&#x00A0;echo&#x00A0;$SHELL
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;chsh
&#x00A0;<br />please&#x00A0;login&#x00A0;to&#x00A0;galehead&#x00A0;and&#x00A0;run&#x00A0;/usr/bin/chsh&#x00A0;from&#x00A0;there.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;ssh&#x00A0;galehead
&#x00A0;<br />campbell@galehead&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Sun&#x00A0;Dec&#x00A0;23&#x00A0;22:58:58&#x00A0;2007&#x00A0;from&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-l
&#x00A0;<br />/bin/bash
&#x00A0;<br />/bin/sh
&#x00A0;<br />/bin/ash
&#x00A0;<br />/bin/bsh
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />/bin/csh
&#x00A0;<br />/usr/local/bin/bash
&#x00A0;<br />/usr/local/bin/tcsh
&#x00A0;<br />/bin/bash2
&#x00A0;<br />/bin/zsh</div>
<!--l. 164--><p class="nopar" >
<!--l. 166--><p class="noindent" >The tcsh shell is set. So we need to change the shell to bash. Note, that galehead is the only machine that
you can change user configuration information on such as passwords and shells. So we ssh to
galehead and list all permissible shells supported by our local Linux machines using the &#8220;chsh -l&#8221;
switch.
<!--l. 168--><p class="noindent" >Now, let&#8217;s change the shell to bash. Note, that our first attempt fails because the shell wants the full path
name. We will discuss full and relative path names later in this lecture. Our second attempt using the full
path name from above is successful.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-9">
[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />chsh:&#x00A0;shell&#x00A0;must&#x00A0;be&#x00A0;a&#x00A0;full&#x00A0;path&#x00A0;name.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;/bin/bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />Shell&#x00A0;changed.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;ps
&#x00A0;<br />&#x00A0;&#x00A0;PID&#x00A0;TTY&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;TIME&#x00A0;CMD
&#x00A0;<br />22271&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;bash
&#x00A0;<br />22345&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;ps</div>
<!--l. 185--><p class="nopar" >
<!--l. 187--><p class="noindent" >Another way to see what shell is running is to use the process status (ps) command. We can see
that the bash shell is running. The process ID and other status information of the process is
displayed.
<!--l. 189--><p class="noindent" >Note, that most commands executed by the shell starts a new &#8220;process&#8221;. (There is an exception to for
what are called <span 
class="cmti-10">builtins</span>). We will discuss processes in a future lecture.
<!--l. 191--><p class="noindent" >The basic shell operation is as follows. The shell parses the command line and finds the program to
execute. It passes any options and arguments to the program as part of a new process for
the command such as ps above. While the process is running ps above the shell waits for
the process to complete. The shell is in a sleep state. When the program completes it passes
its exit status back to the shell. At this point the shell wakes up and prompts the user for
another command. Note, that it is the program that is executed, for example, ps in this case,
that checks to see if the arguments passed to it by the shell are correct or not. It is not the
job of the shell to do that level of parsing or error checking. If there are problems with the
syntax (e.g., wrong switch) then it is the program itself that informs the user via an error
message.
<!--l. 193--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-10000"></a>A note on shell builtins</h3>
<!--l. 194--><p class="noindent" >The term command and utility are used synonymous in these notes. The shell has a number of utilities
built into the shell called <span 
class="cmti-10">builtins</span>. When a builtin runs the shell does not fork a process; that is, it does not
create a process specifically to execute the command. Therefore, the builtins run more efficiently in the
                                                                                  
                                                                                  
context of the existing process rather than having the cost of creating new processes to run the command.
Typically, users are not aware if a command runs as a builtin or a standard forked command.
The echo command exists as a builtin to the shell and as a separate utility in /bin/echo. As
a rule the shell will always execute a builtin before trying to find a command of the same
name to fork. Bash supports a number of builtins including bg, fg, cd, kill, pwd, read among
others.
<!--l. 196--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-11000"></a>Linux file system</h3>
<!--l. 198--><p class="noindent" >The Linux file system is a <span 
class="cmti-10">hierarchical file system</span>. The file system consists of a very small number of
different file types. These include text files, directories, character special files (e.g., terminals) and block
special files (e.g., disks and tapes).
<!--l. 200--><p class="noindent" >A directory is just a special type of file. A directory (akin to a Macintosh folder) contains the names and
locations of all files and directories below it. A directory always contains two special files &#8217;.&#8217; (dot) and &#8217;..&#8217;
(dot dot). Every file has a filename of up to 1024 characters typically from &#8217;A-Z a-z 0-9 &#x02D9; .&#8217; and an inode
which uniquely identifies the file in the file system.
<!--l. 202--><p class="noindent" >Directory names are separated by a slash &#8217;/&#8217;, forming pathnames.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-10">
/usr/bin/emacs
&#x00A0;<br />/etc/passwd</div>
<!--l. 207--><p class="nopar" >
<!--l. 209--><p class="noindent" >Files are accessed by referring to their relative or absolute pathnames.
<!--l. 211--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-12000"></a>Home directory</h4>
<!--l. 213--><p class="noindent" >Each account has a home directory. After you have logged in your shell will be executing in your home
directory. So let&#8217;s log in and use the <span 
class="cmti-10">pwd </span>command to find out where we are - we will be in the home
directory of course.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-11">
[atc@Macintosh-7&#x00A0;l2]$&#x00A0;ssh&#x00A0;-Y&#x00A0;-l&#x00A0;campbell&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />campbell@spruce.cs.dartmouth.edu&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Mon&#x00A0;Dec&#x00A0;24&#x00A0;11:37:01&#x00A0;2007&#x00A0;from&#x00A0;c-75-69-130-98.hsd1.nh.comcast.net
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 222--><p class="nopar" >
<!--l. 224--><p class="noindent" >Let&#8217;s list the contents of the home directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-12">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;434
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs23
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1368&#x00A0;Dec&#x00A0;24&#x00A0;11:25&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;104&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;12:01&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;4&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;728&#x00A0;Oct&#x00A0;26&#x00A0;&#x00A0;2006&#x00A0;public_html
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;435438&#x00A0;Dec&#x00A0;14&#x00A0;&#x00A0;2006&#x00A0;Sent
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Dec&#x00A0;11&#x00A0;15:14&#x00A0;teaching</div>
<!--l. 238--><p class="nopar" >
<!--l. 240--><p class="noindent" >Recall the &#8220;d&#8221; in &#8220;drwx&#8212;&#8212;&#8221; indicates that this file is in fact a directory. So we can move to that
directory assuming we have the relevant permission - which we do in all cases. So lets move
around.
<!--l. 242--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-13000"></a>File and directory permission</h4>
<!--l. 244--><p class="noindent" >All files and directories have certain access permissions which constrain access to only those users having
the correct permission. Let&#8217;s consider a couple of typical examples from above:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-13">
drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages</div>
<!--l. 251--><p class="nopar" >
<!--l. 253--><p class="noindent" >The first character of the access permissions indicate what &#8220;type of file&#8221; is being displayed.
     <ul class="itemize1">
     <li class="itemize">- plain files (such as C programs or text files)
     </li>
     <li class="itemize">d directories
     </li>
     <li class="itemize">c character special files (such as terminals)
     </li>
     <li class="itemize">b block special files (such as disk drives)</li></ul>
<!--l. 262--><p class="noindent" >Following the first type of file character the next 3 triples (i.e., groups of three characters) from left to
right represent file permissions: the <span 
class="cmti-10">read</span>, <span 
class="cmti-10">write</span>, and <span 
class="cmti-10">execute </span>permissions, for (respectively) the owner
(campbell in this case), the files&#8217;s group (faculty in this case), and the &#8220;rest-of-the-world&#8221;. To determine
that group particular files are in enter the &#8220;ls -lg&#8221; command.
<!--l. 264--><p class="noindent" >What do these permissions mean?
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">Read </span>permission means that the file may be displayed on the screen, copied to another file or
     printed on the printer - any operation that requires reading the contents of the file. Having
     read permission on a directory means that its contents can be read; for example, ls could
     read the names and attributes of the files in the directory. Could the contents of those files
     be read?
     </li>
     <li class="itemize"><span 
class="cmti-10">Write </span>permission means that the file of directory may be modified, changed or overwritten.
     Most importantly, write permission means that a file may be deleted. Write permission on a
     directory gives permission to delete a file from within a directory.
     </li>
     <li class="itemize"><span 
class="cmti-10">Execute </span>permission on a file indicates that the file may be executed (i.e., run). Since a directory
     cannot be executed its meaning is redefined. Execute permission on a directory means that
     the user can change into that directory (e.g., using cd) and examine files (e.g., using ls) that it
     has permission to read. If it does not have permission to read then permission will be denied
     when using the ls command.</li></ul>
                                                                                  
                                                                                  
<!--l. 272--><p class="noindent" >After the file permission comes the number of links to the file (e.g., 5), followed b the owner (campbell),
group (faculty), size (e.g., 128) which represents the size of the file in bytes, date and time of modification
(e.g., Dec 24 14:33), and the filename (e.g., cs50).
<!--l. 274--><p class="noindent" >Note, that shellscripts (which we will discuss in a future lecture) must have both read and execute
permission - bash or any of the shells must both be able to read the shellscript and execute it. Program
binaries on the other hand do not need to be read and only need execution permission since they are not
read but executed (recall when we tried to more a.out we could not view it because it was an executable in
machine code).
<!--l. 276--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-14000"></a>Changing permission</h4>
<!--l. 278--><p class="noindent" >The permissions on files and directories may be changed with the <span 
class="cmti-10">chmod </span>(change mode) command. When
you own a file or directory you can use chmod to change the access permissions to the file or
directory.
<!--l. 280--><p class="noindent" >Only the three permission triplets may be changed - a directory cannot be changed into a plain file nor
vice-versa.
<!--l. 282--><p class="noindent" >Permissions given to chmod are either absolute or relative (i.e., symbolic).
<!--l. 284--><p class="noindent" >Each triplet is the sum of the octal digits 4, 2, 1, and read from left to right. For example rwx is
represented by 7, rw- by 6, and r&#8211; by 4 and so on. The absolute octal values used with chmod are as
follows:
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">Octal</span><span 
class="cmtt-10">&#x00A0;Value</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Protection</span><span 
class="cmtt-10">&#x00A0;mechanism</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;400</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;200</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;directory)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;040</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;020</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;010</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;004</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;rest</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;world)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;002</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(dangerous!)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;001</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><br /><br /></div></div>
<!--l. 306--><p class="noindent" >The complete permission on any file is the sum of the values. For example, home directories are typically
700 which provides the owner with read, write, and execute permission but denies all access to
others.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">drwxr-xr-x</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">[campbell@galehead</span><span 
class="cmtt-10">&#x00A0;~]$</span><span 
class="cmtt-10">&#x00A0;chmod</span><span 
class="cmtt-10">&#x00A0;700</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">drwx------</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span></div></div>
<!--l. 321--><p class="noindent" >If you wish others to read your files set - in this case a file funny - then the command would
be:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-14">
[campbell@galehead&#x00A0;~]$&#x00A0;chmod&#x00A0;664&#x00A0;funny
&#x00A0;<br />...
&#x00A0;<br />-rw-rw-r--&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;1&#x00A0;15:50&#x00A0;funny</div>
<!--l. 327--><p class="nopar" >
<!--l. 329--><p class="noindent" >Because the file is only to be read, not written too, and the fact that it&#8217;s a file with no execution (not a
binary or shellscript) 644 makes good sense.
<!--l. 331--><p class="noindent" >Use the manual pages to read how chmod can be used in a relative or symbolic mode; for example, what
would
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-15">
[atc@Macintosh-7&#x00A0;notes]$&#x00A0;chmod&#x00A0;u=wrx,og-rwx&#x00A0;cs50</div>
<!--l. 335--><p class="nopar" >
<!--l. 337--><p class="noindent" >These symbolic arguments need to be used carefully. Here &#8220;o&#8221; means others and &#8220;u&#8221; means owner or
user.
<!--l. 339--><p class="noindent" >&#8220;chmod o+wrx cs50&#8221; do?
<!--l. 341--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-15000"></a>Moving around the file system</h4>
<!--l. 343--><p class="noindent" >The change directory command (cd) allows us to move around the Linux directory hierarchy.
Let&#8217;s combine pwd, ls, and cd to move around the my local directories that are rooted at
/net/nusers/campbell
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-16">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;lectures/
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;ls
&#x00A0;<br />bash-programming.tex&#x00A0;&#x00A0;design.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;se.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;start.tex
&#x00A0;<br />c.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;linux-advance.tex&#x00A0;&#x00A0;shell.tex
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 363--><p class="nopar" >
<!--l. 365--><p class="noindent" >There are also a number of special characters that can be used with cd for short hand.
<!--l. 367--><p class="noindent" >Moving to the parent directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-17">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50</div>
<!--l. 373--><p class="nopar" >
<!--l. 375--><p class="noindent" >Moving back to where we came from:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-18">
[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 382--><p class="nopar" >
<!--l. 384--><p class="noindent" >Moving to our home directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-19">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 390--><p class="nopar" >
<!--l. 392--><p class="noindent" >and back:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-20">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 396--><p class="nopar" >
<!--l. 398--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-16000"></a>Listing and globbing files</h4>
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-21">
campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;0
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 411--><p class="nopar" >
<!--l. 413--><p class="noindent" >Here are a popular set of switches you can use with ls:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-22">
-l list&#x00A0;in&#x00A0;long&#x00A0;format&#x00A0;(as&#x00A0;above)
&#x00A0;<br />-t sort&#x00A0;by&#x00A0;modification&#x00A0;time&#x00A0;(latest&#x00A0;first)
&#x00A0;<br />-a list&#x00A0;all&#x00A0;entries&#x00A0;(including&#x00A0;&#8217;dot&#8217;&#x00A0;files)
&#x00A0;<br />-r list&#x00A0;in&#x00A0;reverse&#x00A0;order&#x00A0;(alphabetical&#x00A0;or&#x00A0;time)
&#x00A0;<br />-R list&#x00A0;the&#x00A0;directory&#x00A0;and&#x00A0;its&#x00A0;subdirectories&#x00A0;recursively</div>
<!--l. 421--><p class="nopar" >
<!--l. 423--><p class="noindent" >We can use a number of special characters to look at the files in a smart and efficient manner:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-23">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 431--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-24">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 441--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-25">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$
&#x00A0;<br /></div>
<!--l. 454--><p class="nopar" >
<!--l. 456--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-17000"></a>Some cool tricks - an example</h4>
<!--l. 458--><p class="noindent" >If I wanted to list just the directories or just plain files (i.e., non directory files) in a directory how would I
do that? Use ls, right. Sorry, ls does not have an option to list only directories or just plain files. But we
can use a combination of commands to do this!
<!--l. 462--><p class="noindent" >We can write our own commands to do this job - we can use a combination of ls and grep to list directory
names only or plain file names only.
<!--l. 465--><p class="noindent" >First let&#8217;s just list all the files in the home directory - it includes one plain file and the rest are
directories.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-26">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 483--><p class="nopar" >
<!--l. 485--><p class="noindent" >Now we use a combination of ls and grep and the pipe command. More on this is in a later lecture but
now we begin to see the power of the shell.
<!--l. 488--><p class="noindent" >Let&#8217;s just list plain files:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-27">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;-v&#x00A0;^d
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br /></div>
<!--l. 496--><p class="nopar" >
<!--l. 498--><p class="noindent" >Now, let&#8217;s use a modification on the above to just list directories:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-28">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;^d
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 513--><p class="nopar" >
<!--l. 515--><p class="noindent" >If you don&#8217;t know any of the above swicthes then use the man command. We can also use the -F switch to
show which file is a directory or not. Check it out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-29">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-lF
&#x00A0;<br />total&#x00A0;140
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;bin/
&#x00A0;<br />drwx------&#x00A0;31&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;16&#x00A0;&#x00A0;2013&#x00A0;cs50/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Apr&#x00A0;19&#x00A0;&#x00A0;2012&#x00A0;cs60/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;532&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Drafts
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;lib/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;May&#x00A0;19&#x00A0;&#x00A0;2013&#x00A0;mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jun&#x00A0;23&#x00A0;&#x00A0;2009&#x00A0;Mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;2&#x00A0;&#x00A0;2012&#x00A0;misc/
&#x00A0;<br />-rwxrwxrwx&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:32&#x00A0;myls*
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;24&#x00A0;&#x00A0;2007&#x00A0;papers/
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;8&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;12288&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;16:55&#x00A0;public_html/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;81979&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:55&#x00A0;solutions/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;11&#x00A0;&#x00A0;2007&#x00A0;teaching/
&#x00A0;<br /></div>
<!--l. 535--><p class="nopar" >
<!--l. 537--><p class="noindent" >It is handy to be able to list just the directories when moving around the file system. So we&#8217;ll add these
commands to our bash files in the next lecture - we&#8217;ll create aliases of these commands so we can use them
any time.
<!--l. 541--><p class="noindent" >We&#8217;ll there is a ls option to list directories and indeed there are many ways to do this; for
example:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-30">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-d&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;&#x00A0;cs50/&#x00A0;&#x00A0;cs60/&#x00A0;&#x00A0;lib/&#x00A0;&#x00A0;mail/&#x00A0;&#x00A0;Mail/&#x00A0;&#x00A0;papers/&#x00A0;&#x00A0;public_html/&#x00A0;&#x00A0;teaching/&#x00A0;&#x00A0;trash/
&#x00A0;<br />
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;echo&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;cs50/&#x00A0;cs60/&#x00A0;lib/&#x00A0;mail/&#x00A0;Mail/&#x00A0;papers/&#x00A0;public_html/&#x00A0;teaching/&#x00A0;trash/
&#x00A0;<br /></div>
<!--l. 551--><p class="nopar" >
<!--l. 553--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-18000"></a>Creating and deleting directories and files</h4>
<!--l. 555--><p class="noindent" >In the following sequence we will create a new directory, create two new files (using touch), move one file
to another directory, delete the other file and remove the directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-31">
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;mkdir&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;touch&#x00A0;socket.c&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />socket.c&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;mv&#x00A0;transport.c&#x00A0;~/.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;alias&#x00A0;rm
&#x00A0;<br />alias&#x00A0;rm=&#8217;rm&#x00A0;-i&#8217;
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;alias&#x00A0;rm=rm
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;socket.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures&#x00A0;&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;rmdir&#x00A0;project</div>
<!--l. 588--><p class="nopar" >
<!--l. 590--><p class="noindent" >In the sequence above we reset the <span 
class="cmti-10">alias </span>for rm which is set up in .bashrc. When you use the &#8220;rm -i&#8221;
option the shell will ask you to confirm if you really want to delete files. This is worth doing by setting up
the alias in your .bashrc file. It is easy to type &#8220;rm&#8221; and accidently delete files. Therefore, the &#8220;-i&#8221;
(interactive) option is a life saver. For example,
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-32">
[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;-i&#x00A0;socket.c
&#x00A0;<br />rm:&#x00A0;remove&#x00A0;regular&#x00A0;empty&#x00A0;file&#x00A0;&#8216;socket.c&#8217;?&#x00A0;y</div>
<!--l. 595--><p class="nopar" >
<!--l. 597--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-19000"></a>Hidden files</h4>
<!--l. 599--><p class="noindent" >In the home directory there are a number of interesting &#8220;hidden&#8221; files. Using the &#8220;-a&#8221; lists all files
including those that begin with a dot (aka the hidden files).
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-33">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-al
&#x00A0;<br />total&#x00A0;899
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;21&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1448&#x00A0;Dec&#x00A0;24&#x00A0;14:58&#x00A0;.
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;25&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;624&#x00A0;May&#x00A0;31&#x00A0;&#x00A0;2007&#x00A0;..
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;2285&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook.lu
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;22:57&#x00A0;.adobe
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;4978&#x00A0;Dec&#x00A0;24&#x00A0;13:39&#x00A0;.bash_history
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;882&#x00A0;Jun&#x00A0;24&#x00A0;&#x00A0;1997&#x00A0;.bash_logout
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1707&#x00A0;Dec&#x00A0;22&#x00A0;18:52&#x00A0;.bash_profile
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1411&#x00A0;Dec&#x00A0;22&#x00A0;19:18&#x00A0;.bashrc
&#x00A0;<br />...&#x00A0;(snip)
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;864&#x00A0;Dec&#x00A0;23&#x00A0;22:42&#x00A0;.Xauthority
&#x00A0;<br />drwx------&#x00A0;&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;136&#x00A0;Nov&#x00A0;&#x00A0;5&#x00A0;21:04&#x00A0;.xemacs</div>
<!--l. 616--><p class="nopar" >
<!--l. 618--><p class="noindent" >But a simple ls will only show:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-34">
[campbell@spruce&#x00A0;~]$&#x00A0;ls
&#x00A0;<br />bin&#x00A0;&#x00A0;cs50&#x00A0;&#x00A0;lib&#x00A0;&#x00A0;mail&#x00A0;&#x00A0;papers&#x00A0;&#x00A0;public_html&#x00A0;&#x00A0;Sent&#x00A0;&#x00A0;Sent&#x00A0;Messages&#x00A0;&#x00A0;teaching</div>
<!--l. 623--><p class="nopar" >
<!--l. 625--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-20000"></a>Reading material for the next class</h3>
<!--l. 627--><p class="noindent" >Make sure you do the <a 
href="http://www.cs.dartmouth.edu/~campbell/c50/reading.html" > reading for the next class </a>Typically we have reading for Wednesday and Friday
classes.
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/shell.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="shell.tex"> 
<meta name="date" content="2014-01-09 20:10:00"> 
<link rel="stylesheet" type="text/css" href="shell.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 2</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>The Linux Shell and Commands</h1>
<!--l. 20--><p class="noindent" >From the last lecture we learnt to write our first C program and looked at the compiler (gcc)
code chain. In this lecture, we will discuss the Linux <span 
class="cmti-10">shell </span>and its commands. The shell is a
command line interpreter and invokes kernel level commands. It also can be used as a scripting
language to design your own utilities. We will discuss scripting as part a future lecture on shell
programming.
<!--l. 22--><p class="noindent" >Since we do not recommend you buy a Linux book here are some very good references and free access
online books - see <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/resources.html" > resources. </a>
<!--l. 24--><p class="noindent" >If you need help on the meaning or syntax of any unix shell command you can use the manual (man)
pages or the <a 
href="http://www.computerhope.com/unix.htm#04" > web unix commands. </a>
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 35--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">The shell
     </li>
     <li class="itemize">The file system</li></ul>
<!--l. 42--><p class="noindent" >OK. Let&#8217;s get started.
<!--l. 44--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>The shell</h3>
                                                                                  
                                                                                  
<!--l. 46--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-6000"></a>Commands, switches, arguments</h4>
<!--l. 48--><p class="noindent" >The shell is the Linux command line interpreter. It provides an interface between the user and the kernel
and executes programs called commands. For example, if a user enters <span 
class="cmti-10">ls </span>then the shell executes the <span 
class="cmti-10">ls</span>
command. The shell can also execute other programs such as applications, scripts, and user programs
(e.g., written in c or the shell programming language).
<!--l. 50--><p class="noindent" >You will get by in the course by becoming familiar with a subset of the Linux commands.
<!--l. 52--><p class="noindent" >Linux has often been criticized for being very terse (it&#8217;s rumored that its designers were bad typists).
Many commands have short, cryptic names - vowels are a rarity:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-1">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;awk,&#x00A0;cat,&#x00A0;cp,&#x00A0;cd,&#x00A0;chmod,&#x00A0;grep,&#x00A0;find,&#x00A0;ls,&#x00A0;mv,&#x00A0;ps,&#x00A0;rm</div>
<!--l. 56--><p class="nopar" >
<!--l. 58--><p class="noindent" >We will learn to use all of these commands and more.
<!--l. 60--><p class="noindent" >Linux command output is also very terse - the default action on success is silence. Only errors are
reported. Linux strongly supports the philosophy of one and only one way to perform each task. Linux
commands are often termed tools or utilities - familiarity with the &#8220;top 20&#8221; will be a great
help.
<!--l. 62--><p class="noindent" >Instructions entered in response to the shell prompt have the following syntax:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-2">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;command&#x00A0;[arg1]&#x00A0;[arg2]&#x00A0;..&#x00A0;[argn]</div>
<!--l. 65--><p class="nopar" >
<!--l. 67--><p class="noindent" >The brackets [] indicate that the arguments are optional. Many commands can be executed with or
without arguments. Others require arguments (e.g., cp sort.c anothersort.c) to work correctly, if not, they
will provide some error status message in return. But to avoid an explosion in the number
of commands most commands support switches (i.e., options) to modify the actions of the
commands.
<!--l. 69--><p class="noindent" >For example, lets use the ls command and the -l option switch to list in long format the file c.tex. Switches
are often single characters preceded by a hyphen (e.g., -l). Most commands accept switches in any order
though they must appear before all &#8220;true&#8221; arguments (usually filenames). In the case of the ls example
below the command arguments represent [options] filenames[s], as shown below. Options therefore modify
the operation of the command and are operated on by the program called by the shell and not the shell
itself.
<!--l. 71--><p class="noindent" >In fact, the command is argument 0 (ls), -l switch or option is argument 1 and the filename is argument 2.
Some commands also accept their switches grouped together. For example, the following switches to ls are
identical:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-3">
[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-rtl
&#x00A0;<br />...
&#x00A0;<br />[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;-r&#x00A0;-&#x00A0;t</div>
<!--l. 77--><p class="nopar" >
<!--l. 79--><p class="noindent" >The shell parses the words or tokens (commandname , options, filesnames[s]) and gets the kernel to
execute the commands assuming the syntax is good.
<!--l. 81--><p class="noindent" >Typically, the shell processes the complete line after a carriage return (cr) (carriage return) is entered and
finds the program that the command line wants executing. The shell looks for the command to execute
either in the specified directory if given (./mycommnd) or it searches through a list of directories
depending on your $PATH variable.
<!--l. 83--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-7000"></a>Path environment</h4>
<!--l. 85--><p class="noindent" >You will need to look at your $PATH variable and update it from time to time to make sure the path to
the code you want to execute is there. Typically, your login files that execute when you log in
(.bash&#x02D9;profile) or each time to execute a command (.bashrc) are the place to set up these environment
variables such as $PATH.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-4">
echo&#x00A0;$PATH
&#x00A0;<br />/sw/bin:/sw/sbin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/texbin:/sw/bin:/usr/X11R6/bin</div>
<!--l. 89--><p class="nopar" >
<!--l. 91--><p class="noindent" >So where does the ls command executed above reside in the Linux directory hierarchy. Let&#8217;s use another
command to find out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-5">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$&#x00A0;whereis&#x00A0;ls
&#x00A0;<br />/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$</div>
<!--l. 99--><p class="nopar" >
<!--l. 101--><p class="noindent" >The <span 
class="cmti-10">whereis </span>or <span 
class="cmti-10">which </span>commands are a useful sanity check if you want to know for sure which ls command
is executed. For example, I could have written a program called ls and placed it in my working directory -
probably not a good idea but could happen. In that case, if I entered ls - which command would the shell
execute?
<!--l. 103--><p class="noindent" >So we can see from the $PATH variable that /bin is in the path. Hence the shell can track down the ls
binary to execute. The fact that the ls command is in /bin assumes that the filename /bin/ls has the
correct permission set to be an executable by all. We can check this.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-6">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;ls&#x00A0;-l&#x00A0;/bin/ls
&#x00A0;<br />-r-xr-xr-x&#x00A0;&#x00A0;&#x00A0;1&#x00A0;root&#x00A0;&#x00A0;wheel&#x00A0;&#x00A0;60972&#x00A0;Oct&#x00A0;17&#x00A0;&#x00A0;2006&#x00A0;/bin/ls</div>
<!--l. 108--><p class="nopar" >
<!--l. 110--><p class="noindent" >Indeed it is. The file is owned by &#8220;root&#8221; and is executable by all.
<!--l. 112--><p class="noindent" >If I set my $PATH variable to &#8220;.&#8221; only the current working directory and execute ls (this would be akin to
not having my path name set up correctly) then the shell would not be able to find the correct program to
execute (assuming I don&#8217;t have an ls binary with the correct permissions in my current directory). Here is
what would happen.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-7">
[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;PATH=.
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;ls:&#x00A0;command&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;type:&#x00A0;ls:&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$</div>
<!--l. 123--><p class="nopar" >
<!--l. 125--><p class="noindent" >You may come across this error (&#8220;-bash: ls: command not found&#8221; or variants thereof) when you install
code or try and execute new programs you want to use or have written.
<!--l. 127--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-8000"></a>There are shells, shells and more shells</h4>
<!--l. 129--><p class="noindent" >There are a number of shells available to a Linux user - so which one do you select? These
are:
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">sh </span>- This is known as the Borne Shell and is the original shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">csh, tcsh </span>- These are well-known and widely used derivatives of the Borne shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">ksh </span>- The popular Korn shell; and
     </li>
     <li class="itemize"><span 
class="cmti-10">bash </span>- The Borne Again SHell is the most popular shell used for linux and developed by GNU.</li></ul>
<!--l. 138--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-9000"></a>Changing the Shell to bash</h4>
<!--l. 140--><p class="noindent" >We will be using the bash shell in this course since it is standard fare with Linux machines. Let&#8217;s check
what shell has been configured for your login account. If it&#8217;s not the bash shell then let&#8217;s change the shell
using the change shell <span 
class="cmti-10">chsh </span>command. To find out what shell is running, log in and look at the $SHELL
environment variable. We will use the <span 
class="cmti-10">echo </span>command which is akin to the print (e.g., printf in C)
                                                                                  
                                                                                  
statement in many languages.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-8">
[campbell@spruce&#x00A0;~]$&#x00A0;echo&#x00A0;$SHELL
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;chsh
&#x00A0;<br />please&#x00A0;login&#x00A0;to&#x00A0;galehead&#x00A0;and&#x00A0;run&#x00A0;/usr/bin/chsh&#x00A0;from&#x00A0;there.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;ssh&#x00A0;galehead
&#x00A0;<br />campbell@galehead&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Sun&#x00A0;Dec&#x00A0;23&#x00A0;22:58:58&#x00A0;2007&#x00A0;from&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-l
&#x00A0;<br />/bin/bash
&#x00A0;<br />/bin/sh
&#x00A0;<br />/bin/ash
&#x00A0;<br />/bin/bsh
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />/bin/csh
&#x00A0;<br />/usr/local/bin/bash
&#x00A0;<br />/usr/local/bin/tcsh
&#x00A0;<br />/bin/bash2
&#x00A0;<br />/bin/zsh</div>
<!--l. 164--><p class="nopar" >
<!--l. 166--><p class="noindent" >The tcsh shell is set. So we need to change the shell to bash. Note, that galehead is the only machine that
you can change user configuration information on such as passwords and shells. So we ssh to
galehead and list all permissible shells supported by our local Linux machines using the &#8220;chsh -l&#8221;
switch.
<!--l. 168--><p class="noindent" >Now, let&#8217;s change the shell to bash. Note, that our first attempt fails because the shell wants the full path
name. We will discuss full and relative path names later in this lecture. Our second attempt using the full
path name from above is successful.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-9">
[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />chsh:&#x00A0;shell&#x00A0;must&#x00A0;be&#x00A0;a&#x00A0;full&#x00A0;path&#x00A0;name.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;/bin/bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />Shell&#x00A0;changed.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;ps
&#x00A0;<br />&#x00A0;&#x00A0;PID&#x00A0;TTY&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;TIME&#x00A0;CMD
&#x00A0;<br />22271&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;bash
&#x00A0;<br />22345&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;ps</div>
<!--l. 185--><p class="nopar" >
<!--l. 187--><p class="noindent" >Another way to see what shell is running is to use the process status (ps) command. We can see
that the bash shell is running. The process ID and other status information of the process is
displayed.
<!--l. 189--><p class="noindent" >Note, that most commands executed by the shell starts a new &#8220;process&#8221;. (There is an exception to for
what are called <span 
class="cmti-10">builtins</span>). We will discuss processes in a future lecture.
<!--l. 191--><p class="noindent" >The basic shell operation is as follows. The shell parses the command line and finds the program to
execute. It passes any options and arguments to the program as part of a new process for
the command such as ps above. While the process is running ps above the shell waits for
the process to complete. The shell is in a sleep state. When the program completes it passes
its exit status back to the shell. At this point the shell wakes up and prompts the user for
another command. Note, that it is the program that is executed, for example, ps in this case,
that checks to see if the arguments passed to it by the shell are correct or not. It is not the
job of the shell to do that level of parsing or error checking. If there are problems with the
syntax (e.g., wrong switch) then it is the program itself that informs the user via an error
message.
<!--l. 193--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-10000"></a>A note on shell builtins</h3>
<!--l. 194--><p class="noindent" >The term command and utility are used synonymous in these notes. The shell has a number of utilities
built into the shell called <span 
class="cmti-10">builtins</span>. When a builtin runs the shell does not fork a process; that is, it does not
create a process specifically to execute the command. Therefore, the builtins run more efficiently in the
                                                                                  
                                                                                  
context of the existing process rather than having the cost of creating new processes to run the command.
Typically, users are not aware if a command runs as a builtin or a standard forked command.
The echo command exists as a builtin to the shell and as a separate utility in /bin/echo. As
a rule the shell will always execute a builtin before trying to find a command of the same
name to fork. Bash supports a number of builtins including bg, fg, cd, kill, pwd, read among
others.
<!--l. 196--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-11000"></a>Linux file system</h3>
<!--l. 198--><p class="noindent" >The Linux file system is a <span 
class="cmti-10">hierarchical file system</span>. The file system consists of a very small number of
different file types. These include text files, directories, character special files (e.g., terminals) and block
special files (e.g., disks and tapes).
<!--l. 200--><p class="noindent" >A directory is just a special type of file. A directory (akin to a Macintosh folder) contains the names and
locations of all files and directories below it. A directory always contains two special files &#8217;.&#8217; (dot) and &#8217;..&#8217;
(dot dot). Every file has a filename of up to 1024 characters typically from &#8217;A-Z a-z 0-9 &#x02D9; .&#8217; and an inode
which uniquely identifies the file in the file system.
<!--l. 202--><p class="noindent" >Directory names are separated by a slash &#8217;/&#8217;, forming pathnames.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-10">
/usr/bin/emacs
&#x00A0;<br />/etc/passwd</div>
<!--l. 207--><p class="nopar" >
<!--l. 209--><p class="noindent" >Files are accessed by referring to their relative or absolute pathnames.
<!--l. 211--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-12000"></a>Home directory</h4>
<!--l. 213--><p class="noindent" >Each account has a home directory. After you have logged in your shell will be executing in your home
directory. So let&#8217;s log in and use the <span 
class="cmti-10">pwd </span>command to find out where we are - we will be in the home
directory of course.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-11">
[atc@Macintosh-7&#x00A0;l2]$&#x00A0;ssh&#x00A0;-Y&#x00A0;-l&#x00A0;campbell&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />campbell@spruce.cs.dartmouth.edu&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Mon&#x00A0;Dec&#x00A0;24&#x00A0;11:37:01&#x00A0;2007&#x00A0;from&#x00A0;c-75-69-130-98.hsd1.nh.comcast.net
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 222--><p class="nopar" >
<!--l. 224--><p class="noindent" >Let&#8217;s list the contents of the home directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-12">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;434
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs23
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1368&#x00A0;Dec&#x00A0;24&#x00A0;11:25&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;104&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;12:01&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;4&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;728&#x00A0;Oct&#x00A0;26&#x00A0;&#x00A0;2006&#x00A0;public_html
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;435438&#x00A0;Dec&#x00A0;14&#x00A0;&#x00A0;2006&#x00A0;Sent
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Dec&#x00A0;11&#x00A0;15:14&#x00A0;teaching</div>
<!--l. 238--><p class="nopar" >
<!--l. 240--><p class="noindent" >Recall the &#8220;d&#8221; in &#8220;drwx&#8212;&#8212;&#8221; indicates that this file is in fact a directory. So we can move to that
directory assuming we have the relevant permission - which we do in all cases. So lets move
around.
<!--l. 242--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-13000"></a>File and directory permission</h4>
<!--l. 244--><p class="noindent" >All files and directories have certain access permissions which constrain access to only those users having
the correct permission. Let&#8217;s consider a couple of typical examples from above:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-13">
drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages</div>
<!--l. 251--><p class="nopar" >
<!--l. 253--><p class="noindent" >The first character of the access permissions indicate what &#8220;type of file&#8221; is being displayed.
     <ul class="itemize1">
     <li class="itemize">- plain files (such as C programs or text files)
     </li>
     <li class="itemize">d directories
     </li>
     <li class="itemize">c character special files (such as terminals)
     </li>
     <li class="itemize">b block special files (such as disk drives)</li></ul>
<!--l. 262--><p class="noindent" >Following the first type of file character the next 3 triples (i.e., groups of three characters) from left to
right represent file permissions: the <span 
class="cmti-10">read</span>, <span 
class="cmti-10">write</span>, and <span 
class="cmti-10">execute </span>permissions, for (respectively) the owner
(campbell in this case), the files&#8217;s group (faculty in this case), and the &#8220;rest-of-the-world&#8221;. To determine
that group particular files are in enter the &#8220;ls -lg&#8221; command.
<!--l. 264--><p class="noindent" >What do these permissions mean?
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">Read </span>permission means that the file may be displayed on the screen, copied to another file or
     printed on the printer - any operation that requires reading the contents of the file. Having
     read permission on a directory means that its contents can be read; for example, ls could
     read the names and attributes of the files in the directory. Could the contents of those files
     be read?
     </li>
     <li class="itemize"><span 
class="cmti-10">Write </span>permission means that the file of directory may be modified, changed or overwritten.
     Most importantly, write permission means that a file may be deleted. Write permission on a
     directory gives permission to delete a file from within a directory.
     </li>
     <li class="itemize"><span 
class="cmti-10">Execute </span>permission on a file indicates that the file may be executed (i.e., run). Since a directory
     cannot be executed its meaning is redefined. Execute permission on a directory means that
     the user can change into that directory (e.g., using cd) and examine files (e.g., using ls) that it
     has permission to read. If it does not have permission to read then permission will be denied
     when using the ls command.</li></ul>
                                                                                  
                                                                                  
<!--l. 272--><p class="noindent" >After the file permission comes the number of links to the file (e.g., 5), followed b the owner (campbell),
group (faculty), size (e.g., 128) which represents the size of the file in bytes, date and time of modification
(e.g., Dec 24 14:33), and the filename (e.g., cs50).
<!--l. 274--><p class="noindent" >Note, that shellscripts (which we will discuss in a future lecture) must have both read and execute
permission - bash or any of the shells must both be able to read the shellscript and execute it. Program
binaries on the other hand do not need to be read and only need execution permission since they are not
read but executed (recall when we tried to more a.out we could not view it because it was an executable in
machine code).
<!--l. 276--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-14000"></a>Changing permission</h4>
<!--l. 278--><p class="noindent" >The permissions on files and directories may be changed with the <span 
class="cmti-10">chmod </span>(change mode) command. When
you own a file or directory you can use chmod to change the access permissions to the file or
directory.
<!--l. 280--><p class="noindent" >Only the three permission triplets may be changed - a directory cannot be changed into a plain file nor
vice-versa.
<!--l. 282--><p class="noindent" >Permissions given to chmod are either absolute or relative (i.e., symbolic).
<!--l. 284--><p class="noindent" >Each triplet is the sum of the octal digits 4, 2, 1, and read from left to right. For example rwx is
represented by 7, rw- by 6, and r&#8211; by 4 and so on. The absolute octal values used with chmod are as
follows:
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">Octal</span><span 
class="cmtt-10">&#x00A0;Value</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Protection</span><span 
class="cmtt-10">&#x00A0;mechanism</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;400</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;200</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;directory)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;040</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;020</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;010</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;004</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;rest</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;world)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;002</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(dangerous!)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;001</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><br /><br /></div></div>
<!--l. 306--><p class="noindent" >The complete permission on any file is the sum of the values. For example, home directories are typically
700 which provides the owner with read, write, and execute permission but denies all access to
others.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">drwxr-xr-x</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">[campbell@galehead</span><span 
class="cmtt-10">&#x00A0;~]$</span><span 
class="cmtt-10">&#x00A0;chmod</span><span 
class="cmtt-10">&#x00A0;700</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">drwx------</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span></div></div>
<!--l. 321--><p class="noindent" >If you wish others to read your files set - in this case a file funny - then the command would
be:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-14">
[campbell@galehead&#x00A0;~]$&#x00A0;chmod&#x00A0;664&#x00A0;funny
&#x00A0;<br />...
&#x00A0;<br />-rw-rw-r--&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;1&#x00A0;15:50&#x00A0;funny</div>
<!--l. 327--><p class="nopar" >
<!--l. 329--><p class="noindent" >Because the file is only to be read, not written too, and the fact that it&#8217;s a file with no execution (not a
binary or shellscript) 644 makes good sense.
<!--l. 331--><p class="noindent" >Use the manual pages to read how chmod can be used in a relative or symbolic mode; for example, what
would
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-15">
[atc@Macintosh-7&#x00A0;notes]$&#x00A0;chmod&#x00A0;u=wrx,og-rwx&#x00A0;cs50</div>
<!--l. 335--><p class="nopar" >
<!--l. 337--><p class="noindent" >These symbolic arguments need to be used carefully. Here &#8220;o&#8221; means others and &#8220;u&#8221; means owner or
user.
<!--l. 339--><p class="noindent" >&#8220;chmod o+wrx cs50&#8221; do?
<!--l. 341--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-15000"></a>Moving around the file system</h4>
<!--l. 343--><p class="noindent" >The change directory command (cd) allows us to move around the Linux directory hierarchy.
Let&#8217;s combine pwd, ls, and cd to move around the my local directories that are rooted at
/net/nusers/campbell
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-16">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;lectures/
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;ls
&#x00A0;<br />bash-programming.tex&#x00A0;&#x00A0;design.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;se.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;start.tex
&#x00A0;<br />c.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;linux-advance.tex&#x00A0;&#x00A0;shell.tex
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 363--><p class="nopar" >
<!--l. 365--><p class="noindent" >There are also a number of special characters that can be used with cd for short hand.
<!--l. 367--><p class="noindent" >Moving to the parent directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-17">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50</div>
<!--l. 373--><p class="nopar" >
<!--l. 375--><p class="noindent" >Moving back to where we came from:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-18">
[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 382--><p class="nopar" >
<!--l. 384--><p class="noindent" >Moving to our home directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-19">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 390--><p class="nopar" >
<!--l. 392--><p class="noindent" >and back:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-20">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 396--><p class="nopar" >
<!--l. 398--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-16000"></a>Listing and globbing files</h4>
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-21">
campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;0
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 411--><p class="nopar" >
<!--l. 413--><p class="noindent" >Here are a popular set of switches you can use with ls:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-22">
-l list&#x00A0;in&#x00A0;long&#x00A0;format&#x00A0;(as&#x00A0;above)
&#x00A0;<br />-t sort&#x00A0;by&#x00A0;modification&#x00A0;time&#x00A0;(latest&#x00A0;first)
&#x00A0;<br />-a list&#x00A0;all&#x00A0;entries&#x00A0;(including&#x00A0;&#8217;dot&#8217;&#x00A0;files)
&#x00A0;<br />-r list&#x00A0;in&#x00A0;reverse&#x00A0;order&#x00A0;(alphabetical&#x00A0;or&#x00A0;time)
&#x00A0;<br />-R list&#x00A0;the&#x00A0;directory&#x00A0;and&#x00A0;its&#x00A0;subdirectories&#x00A0;recursively</div>
<!--l. 421--><p class="nopar" >
<!--l. 423--><p class="noindent" >We can use a number of special characters to look at the files in a smart and efficient manner:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-23">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 431--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-24">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 441--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-25">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$
&#x00A0;<br /></div>
<!--l. 454--><p class="nopar" >
<!--l. 456--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-17000"></a>Some cool tricks - an example</h4>
<!--l. 458--><p class="noindent" >If I wanted to list just the directories or just plain files (i.e., non directory files) in a directory how would I
do that? Use ls, right. Sorry, ls does not have an option to list only directories or just plain files. But we
can use a combination of commands to do this!
<!--l. 462--><p class="noindent" >We can write our own commands to do this job - we can use a combination of ls and grep to list directory
names only or plain file names only.
<!--l. 465--><p class="noindent" >First let&#8217;s just list all the files in the home directory - it includes one plain file and the rest are
directories.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-26">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 483--><p class="nopar" >
<!--l. 485--><p class="noindent" >Now we use a combination of ls and grep and the pipe command. More on this is in a later lecture but
now we begin to see the power of the shell.
<!--l. 488--><p class="noindent" >Let&#8217;s just list plain files:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-27">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;-v&#x00A0;^d
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br /></div>
<!--l. 496--><p class="nopar" >
<!--l. 498--><p class="noindent" >Now, let&#8217;s use a modification on the above to just list directories:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-28">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;^d
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 513--><p class="nopar" >
<!--l. 515--><p class="noindent" >If you don&#8217;t know any of the above swicthes then use the man command. We can also use the -F switch to
show which file is a directory or not. Check it out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-29">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-lF
&#x00A0;<br />total&#x00A0;140
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;bin/
&#x00A0;<br />drwx------&#x00A0;31&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;16&#x00A0;&#x00A0;2013&#x00A0;cs50/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Apr&#x00A0;19&#x00A0;&#x00A0;2012&#x00A0;cs60/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;532&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Drafts
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;lib/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;May&#x00A0;19&#x00A0;&#x00A0;2013&#x00A0;mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jun&#x00A0;23&#x00A0;&#x00A0;2009&#x00A0;Mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;2&#x00A0;&#x00A0;2012&#x00A0;misc/
&#x00A0;<br />-rwxrwxrwx&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:32&#x00A0;myls*
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;24&#x00A0;&#x00A0;2007&#x00A0;papers/
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;8&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;12288&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;16:55&#x00A0;public_html/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;81979&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:55&#x00A0;solutions/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;11&#x00A0;&#x00A0;2007&#x00A0;teaching/
&#x00A0;<br /></div>
<!--l. 535--><p class="nopar" >
<!--l. 537--><p class="noindent" >It is handy to be able to list just the directories when moving around the file system. So we&#8217;ll add these
commands to our bash files in the next lecture - we&#8217;ll create aliases of these commands so we can use them
any time.
<!--l. 541--><p class="noindent" >We&#8217;ll there is a ls option to list directories and indeed there are many ways to do this; for
example:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-30">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-d&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;&#x00A0;cs50/&#x00A0;&#x00A0;cs60/&#x00A0;&#x00A0;lib/&#x00A0;&#x00A0;mail/&#x00A0;&#x00A0;Mail/&#x00A0;&#x00A0;papers/&#x00A0;&#x00A0;public_html/&#x00A0;&#x00A0;teaching/&#x00A0;&#x00A0;trash/
&#x00A0;<br />
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;echo&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;cs50/&#x00A0;cs60/&#x00A0;lib/&#x00A0;mail/&#x00A0;Mail/&#x00A0;papers/&#x00A0;public_html/&#x00A0;teaching/&#x00A0;trash/
&#x00A0;<br /></div>
<!--l. 551--><p class="nopar" >
<!--l. 553--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-18000"></a>Creating and deleting directories and files</h4>
<!--l. 555--><p class="noindent" >In the following sequence we will create a new directory, create two new files (using touch), move one file
to another directory, delete the other file and remove the directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-31">
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;mkdir&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;touch&#x00A0;socket.c&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />socket.c&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;mv&#x00A0;transport.c&#x00A0;~/.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;alias&#x00A0;rm
&#x00A0;<br />alias&#x00A0;rm=&#8217;rm&#x00A0;-i&#8217;
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;alias&#x00A0;rm=rm
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;socket.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures&#x00A0;&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;rmdir&#x00A0;project</div>
<!--l. 588--><p class="nopar" >
<!--l. 590--><p class="noindent" >In the sequence above we reset the <span 
class="cmti-10">alias </span>for rm which is set up in .bashrc. When you use the &#8220;rm -i&#8221;
option the shell will ask you to confirm if you really want to delete files. This is worth doing by setting up
the alias in your .bashrc file. It is easy to type &#8220;rm&#8221; and accidently delete files. Therefore, the &#8220;-i&#8221;
(interactive) option is a life saver. For example,
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-32">
[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;-i&#x00A0;socket.c
&#x00A0;<br />rm:&#x00A0;remove&#x00A0;regular&#x00A0;empty&#x00A0;file&#x00A0;&#8216;socket.c&#8217;?&#x00A0;y</div>
<!--l. 595--><p class="nopar" >
<!--l. 597--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-19000"></a>Hidden files</h4>
<!--l. 599--><p class="noindent" >In the home directory there are a number of interesting &#8220;hidden&#8221; files. Using the &#8220;-a&#8221; lists all files
including those that begin with a dot (aka the hidden files).
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-33">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-al
&#x00A0;<br />total&#x00A0;899
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;21&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1448&#x00A0;Dec&#x00A0;24&#x00A0;14:58&#x00A0;.
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;25&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;624&#x00A0;May&#x00A0;31&#x00A0;&#x00A0;2007&#x00A0;..
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;2285&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook.lu
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;22:57&#x00A0;.adobe
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;4978&#x00A0;Dec&#x00A0;24&#x00A0;13:39&#x00A0;.bash_history
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;882&#x00A0;Jun&#x00A0;24&#x00A0;&#x00A0;1997&#x00A0;.bash_logout
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1707&#x00A0;Dec&#x00A0;22&#x00A0;18:52&#x00A0;.bash_profile
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1411&#x00A0;Dec&#x00A0;22&#x00A0;19:18&#x00A0;.bashrc
&#x00A0;<br />...&#x00A0;(snip)
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;864&#x00A0;Dec&#x00A0;23&#x00A0;22:42&#x00A0;.Xauthority
&#x00A0;<br />drwx------&#x00A0;&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;136&#x00A0;Nov&#x00A0;&#x00A0;5&#x00A0;21:04&#x00A0;.xemacs</div>
<!--l. 616--><p class="nopar" >
<!--l. 618--><p class="noindent" >But a simple ls will only show:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-34">
[campbell@spruce&#x00A0;~]$&#x00A0;ls
&#x00A0;<br />bin&#x00A0;&#x00A0;cs50&#x00A0;&#x00A0;lib&#x00A0;&#x00A0;mail&#x00A0;&#x00A0;papers&#x00A0;&#x00A0;public_html&#x00A0;&#x00A0;Sent&#x00A0;&#x00A0;Sent&#x00A0;Messages&#x00A0;&#x00A0;teaching</div>
<!--l. 623--><p class="nopar" >
<!--l. 625--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-20000"></a>Reading material for the next class</h3>
<!--l. 627--><p class="noindent" >Make sure you do the <a 
href="http://www.cs.dartmouth.edu/~campbell/c50/reading.html" > reading for the next class </a>Typically we have reading for Wednesday and Friday
classes.
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/shell.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="shell.tex"> 
<meta name="date" content="2014-01-09 20:10:00"> 
<link rel="stylesheet" type="text/css" href="shell.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 2</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>The Linux Shell and Commands</h1>
<!--l. 20--><p class="noindent" >From the last lecture we learnt to write our first C program and looked at the compiler (gcc)
code chain. In this lecture, we will discuss the Linux <span 
class="cmti-10">shell </span>and its commands. The shell is a
command line interpreter and invokes kernel level commands. It also can be used as a scripting
language to design your own utilities. We will discuss scripting as part a future lecture on shell
programming.
<!--l. 22--><p class="noindent" >Since we do not recommend you buy a Linux book here are some very good references and free access
online books - see <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/resources.html" > resources. </a>
<!--l. 24--><p class="noindent" >If you need help on the meaning or syntax of any unix shell command you can use the manual (man)
pages or the <a 
href="http://www.computerhope.com/unix.htm#04" > web unix commands. </a>
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 35--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">The shell
     </li>
     <li class="itemize">The file system</li></ul>
<!--l. 42--><p class="noindent" >OK. Let&#8217;s get started.
<!--l. 44--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>The shell</h3>
                                                                                  
                                                                                  
<!--l. 46--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-6000"></a>Commands, switches, arguments</h4>
<!--l. 48--><p class="noindent" >The shell is the Linux command line interpreter. It provides an interface between the user and the kernel
and executes programs called commands. For example, if a user enters <span 
class="cmti-10">ls </span>then the shell executes the <span 
class="cmti-10">ls</span>
command. The shell can also execute other programs such as applications, scripts, and user programs
(e.g., written in c or the shell programming language).
<!--l. 50--><p class="noindent" >You will get by in the course by becoming familiar with a subset of the Linux commands.
<!--l. 52--><p class="noindent" >Linux has often been criticized for being very terse (it&#8217;s rumored that its designers were bad typists).
Many commands have short, cryptic names - vowels are a rarity:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-1">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;awk,&#x00A0;cat,&#x00A0;cp,&#x00A0;cd,&#x00A0;chmod,&#x00A0;grep,&#x00A0;find,&#x00A0;ls,&#x00A0;mv,&#x00A0;ps,&#x00A0;rm</div>
<!--l. 56--><p class="nopar" >
<!--l. 58--><p class="noindent" >We will learn to use all of these commands and more.
<!--l. 60--><p class="noindent" >Linux command output is also very terse - the default action on success is silence. Only errors are
reported. Linux strongly supports the philosophy of one and only one way to perform each task. Linux
commands are often termed tools or utilities - familiarity with the &#8220;top 20&#8221; will be a great
help.
<!--l. 62--><p class="noindent" >Instructions entered in response to the shell prompt have the following syntax:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-2">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;command&#x00A0;[arg1]&#x00A0;[arg2]&#x00A0;..&#x00A0;[argn]</div>
<!--l. 65--><p class="nopar" >
<!--l. 67--><p class="noindent" >The brackets [] indicate that the arguments are optional. Many commands can be executed with or
without arguments. Others require arguments (e.g., cp sort.c anothersort.c) to work correctly, if not, they
will provide some error status message in return. But to avoid an explosion in the number
of commands most commands support switches (i.e., options) to modify the actions of the
commands.
<!--l. 69--><p class="noindent" >For example, lets use the ls command and the -l option switch to list in long format the file c.tex. Switches
are often single characters preceded by a hyphen (e.g., -l). Most commands accept switches in any order
though they must appear before all &#8220;true&#8221; arguments (usually filenames). In the case of the ls example
below the command arguments represent [options] filenames[s], as shown below. Options therefore modify
the operation of the command and are operated on by the program called by the shell and not the shell
itself.
<!--l. 71--><p class="noindent" >In fact, the command is argument 0 (ls), -l switch or option is argument 1 and the filename is argument 2.
Some commands also accept their switches grouped together. For example, the following switches to ls are
identical:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-3">
[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-rtl
&#x00A0;<br />...
&#x00A0;<br />[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;-r&#x00A0;-&#x00A0;t</div>
<!--l. 77--><p class="nopar" >
<!--l. 79--><p class="noindent" >The shell parses the words or tokens (commandname , options, filesnames[s]) and gets the kernel to
execute the commands assuming the syntax is good.
<!--l. 81--><p class="noindent" >Typically, the shell processes the complete line after a carriage return (cr) (carriage return) is entered and
finds the program that the command line wants executing. The shell looks for the command to execute
either in the specified directory if given (./mycommnd) or it searches through a list of directories
depending on your $PATH variable.
<!--l. 83--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-7000"></a>Path environment</h4>
<!--l. 85--><p class="noindent" >You will need to look at your $PATH variable and update it from time to time to make sure the path to
the code you want to execute is there. Typically, your login files that execute when you log in
(.bash&#x02D9;profile) or each time to execute a command (.bashrc) are the place to set up these environment
variables such as $PATH.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-4">
echo&#x00A0;$PATH
&#x00A0;<br />/sw/bin:/sw/sbin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/texbin:/sw/bin:/usr/X11R6/bin</div>
<!--l. 89--><p class="nopar" >
<!--l. 91--><p class="noindent" >So where does the ls command executed above reside in the Linux directory hierarchy. Let&#8217;s use another
command to find out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-5">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$&#x00A0;whereis&#x00A0;ls
&#x00A0;<br />/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$</div>
<!--l. 99--><p class="nopar" >
<!--l. 101--><p class="noindent" >The <span 
class="cmti-10">whereis </span>or <span 
class="cmti-10">which </span>commands are a useful sanity check if you want to know for sure which ls command
is executed. For example, I could have written a program called ls and placed it in my working directory -
probably not a good idea but could happen. In that case, if I entered ls - which command would the shell
execute?
<!--l. 103--><p class="noindent" >So we can see from the $PATH variable that /bin is in the path. Hence the shell can track down the ls
binary to execute. The fact that the ls command is in /bin assumes that the filename /bin/ls has the
correct permission set to be an executable by all. We can check this.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-6">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;ls&#x00A0;-l&#x00A0;/bin/ls
&#x00A0;<br />-r-xr-xr-x&#x00A0;&#x00A0;&#x00A0;1&#x00A0;root&#x00A0;&#x00A0;wheel&#x00A0;&#x00A0;60972&#x00A0;Oct&#x00A0;17&#x00A0;&#x00A0;2006&#x00A0;/bin/ls</div>
<!--l. 108--><p class="nopar" >
<!--l. 110--><p class="noindent" >Indeed it is. The file is owned by &#8220;root&#8221; and is executable by all.
<!--l. 112--><p class="noindent" >If I set my $PATH variable to &#8220;.&#8221; only the current working directory and execute ls (this would be akin to
not having my path name set up correctly) then the shell would not be able to find the correct program to
execute (assuming I don&#8217;t have an ls binary with the correct permissions in my current directory). Here is
what would happen.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-7">
[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;PATH=.
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;ls:&#x00A0;command&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;type:&#x00A0;ls:&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$</div>
<!--l. 123--><p class="nopar" >
<!--l. 125--><p class="noindent" >You may come across this error (&#8220;-bash: ls: command not found&#8221; or variants thereof) when you install
code or try and execute new programs you want to use or have written.
<!--l. 127--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-8000"></a>There are shells, shells and more shells</h4>
<!--l. 129--><p class="noindent" >There are a number of shells available to a Linux user - so which one do you select? These
are:
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">sh </span>- This is known as the Borne Shell and is the original shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">csh, tcsh </span>- These are well-known and widely used derivatives of the Borne shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">ksh </span>- The popular Korn shell; and
     </li>
     <li class="itemize"><span 
class="cmti-10">bash </span>- The Borne Again SHell is the most popular shell used for linux and developed by GNU.</li></ul>
<!--l. 138--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-9000"></a>Changing the Shell to bash</h4>
<!--l. 140--><p class="noindent" >We will be using the bash shell in this course since it is standard fare with Linux machines. Let&#8217;s check
what shell has been configured for your login account. If it&#8217;s not the bash shell then let&#8217;s change the shell
using the change shell <span 
class="cmti-10">chsh </span>command. To find out what shell is running, log in and look at the $SHELL
environment variable. We will use the <span 
class="cmti-10">echo </span>command which is akin to the print (e.g., printf in C)
                                                                                  
                                                                                  
statement in many languages.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-8">
[campbell@spruce&#x00A0;~]$&#x00A0;echo&#x00A0;$SHELL
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;chsh
&#x00A0;<br />please&#x00A0;login&#x00A0;to&#x00A0;galehead&#x00A0;and&#x00A0;run&#x00A0;/usr/bin/chsh&#x00A0;from&#x00A0;there.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;ssh&#x00A0;galehead
&#x00A0;<br />campbell@galehead&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Sun&#x00A0;Dec&#x00A0;23&#x00A0;22:58:58&#x00A0;2007&#x00A0;from&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-l
&#x00A0;<br />/bin/bash
&#x00A0;<br />/bin/sh
&#x00A0;<br />/bin/ash
&#x00A0;<br />/bin/bsh
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />/bin/csh
&#x00A0;<br />/usr/local/bin/bash
&#x00A0;<br />/usr/local/bin/tcsh
&#x00A0;<br />/bin/bash2
&#x00A0;<br />/bin/zsh</div>
<!--l. 164--><p class="nopar" >
<!--l. 166--><p class="noindent" >The tcsh shell is set. So we need to change the shell to bash. Note, that galehead is the only machine that
you can change user configuration information on such as passwords and shells. So we ssh to
galehead and list all permissible shells supported by our local Linux machines using the &#8220;chsh -l&#8221;
switch.
<!--l. 168--><p class="noindent" >Now, let&#8217;s change the shell to bash. Note, that our first attempt fails because the shell wants the full path
name. We will discuss full and relative path names later in this lecture. Our second attempt using the full
path name from above is successful.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-9">
[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />chsh:&#x00A0;shell&#x00A0;must&#x00A0;be&#x00A0;a&#x00A0;full&#x00A0;path&#x00A0;name.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;/bin/bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />Shell&#x00A0;changed.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;ps
&#x00A0;<br />&#x00A0;&#x00A0;PID&#x00A0;TTY&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;TIME&#x00A0;CMD
&#x00A0;<br />22271&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;bash
&#x00A0;<br />22345&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;ps</div>
<!--l. 185--><p class="nopar" >
<!--l. 187--><p class="noindent" >Another way to see what shell is running is to use the process status (ps) command. We can see
that the bash shell is running. The process ID and other status information of the process is
displayed.
<!--l. 189--><p class="noindent" >Note, that most commands executed by the shell starts a new &#8220;process&#8221;. (There is an exception to for
what are called <span 
class="cmti-10">builtins</span>). We will discuss processes in a future lecture.
<!--l. 191--><p class="noindent" >The basic shell operation is as follows. The shell parses the command line and finds the program to
execute. It passes any options and arguments to the program as part of a new process for
the command such as ps above. While the process is running ps above the shell waits for
the process to complete. The shell is in a sleep state. When the program completes it passes
its exit status back to the shell. At this point the shell wakes up and prompts the user for
another command. Note, that it is the program that is executed, for example, ps in this case,
that checks to see if the arguments passed to it by the shell are correct or not. It is not the
job of the shell to do that level of parsing or error checking. If there are problems with the
syntax (e.g., wrong switch) then it is the program itself that informs the user via an error
message.
<!--l. 193--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-10000"></a>A note on shell builtins</h3>
<!--l. 194--><p class="noindent" >The term command and utility are used synonymous in these notes. The shell has a number of utilities
built into the shell called <span 
class="cmti-10">builtins</span>. When a builtin runs the shell does not fork a process; that is, it does not
create a process specifically to execute the command. Therefore, the builtins run more efficiently in the
                                                                                  
                                                                                  
context of the existing process rather than having the cost of creating new processes to run the command.
Typically, users are not aware if a command runs as a builtin or a standard forked command.
The echo command exists as a builtin to the shell and as a separate utility in /bin/echo. As
a rule the shell will always execute a builtin before trying to find a command of the same
name to fork. Bash supports a number of builtins including bg, fg, cd, kill, pwd, read among
others.
<!--l. 196--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-11000"></a>Linux file system</h3>
<!--l. 198--><p class="noindent" >The Linux file system is a <span 
class="cmti-10">hierarchical file system</span>. The file system consists of a very small number of
different file types. These include text files, directories, character special files (e.g., terminals) and block
special files (e.g., disks and tapes).
<!--l. 200--><p class="noindent" >A directory is just a special type of file. A directory (akin to a Macintosh folder) contains the names and
locations of all files and directories below it. A directory always contains two special files &#8217;.&#8217; (dot) and &#8217;..&#8217;
(dot dot). Every file has a filename of up to 1024 characters typically from &#8217;A-Z a-z 0-9 &#x02D9; .&#8217; and an inode
which uniquely identifies the file in the file system.
<!--l. 202--><p class="noindent" >Directory names are separated by a slash &#8217;/&#8217;, forming pathnames.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-10">
/usr/bin/emacs
&#x00A0;<br />/etc/passwd</div>
<!--l. 207--><p class="nopar" >
<!--l. 209--><p class="noindent" >Files are accessed by referring to their relative or absolute pathnames.
<!--l. 211--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-12000"></a>Home directory</h4>
<!--l. 213--><p class="noindent" >Each account has a home directory. After you have logged in your shell will be executing in your home
directory. So let&#8217;s log in and use the <span 
class="cmti-10">pwd </span>command to find out where we are - we will be in the home
directory of course.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-11">
[atc@Macintosh-7&#x00A0;l2]$&#x00A0;ssh&#x00A0;-Y&#x00A0;-l&#x00A0;campbell&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />campbell@spruce.cs.dartmouth.edu&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Mon&#x00A0;Dec&#x00A0;24&#x00A0;11:37:01&#x00A0;2007&#x00A0;from&#x00A0;c-75-69-130-98.hsd1.nh.comcast.net
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 222--><p class="nopar" >
<!--l. 224--><p class="noindent" >Let&#8217;s list the contents of the home directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-12">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;434
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs23
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1368&#x00A0;Dec&#x00A0;24&#x00A0;11:25&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;104&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;12:01&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;4&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;728&#x00A0;Oct&#x00A0;26&#x00A0;&#x00A0;2006&#x00A0;public_html
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;435438&#x00A0;Dec&#x00A0;14&#x00A0;&#x00A0;2006&#x00A0;Sent
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Dec&#x00A0;11&#x00A0;15:14&#x00A0;teaching</div>
<!--l. 238--><p class="nopar" >
<!--l. 240--><p class="noindent" >Recall the &#8220;d&#8221; in &#8220;drwx&#8212;&#8212;&#8221; indicates that this file is in fact a directory. So we can move to that
directory assuming we have the relevant permission - which we do in all cases. So lets move
around.
<!--l. 242--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-13000"></a>File and directory permission</h4>
<!--l. 244--><p class="noindent" >All files and directories have certain access permissions which constrain access to only those users having
the correct permission. Let&#8217;s consider a couple of typical examples from above:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-13">
drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages</div>
<!--l. 251--><p class="nopar" >
<!--l. 253--><p class="noindent" >The first character of the access permissions indicate what &#8220;type of file&#8221; is being displayed.
     <ul class="itemize1">
     <li class="itemize">- plain files (such as C programs or text files)
     </li>
     <li class="itemize">d directories
     </li>
     <li class="itemize">c character special files (such as terminals)
     </li>
     <li class="itemize">b block special files (such as disk drives)</li></ul>
<!--l. 262--><p class="noindent" >Following the first type of file character the next 3 triples (i.e., groups of three characters) from left to
right represent file permissions: the <span 
class="cmti-10">read</span>, <span 
class="cmti-10">write</span>, and <span 
class="cmti-10">execute </span>permissions, for (respectively) the owner
(campbell in this case), the files&#8217;s group (faculty in this case), and the &#8220;rest-of-the-world&#8221;. To determine
that group particular files are in enter the &#8220;ls -lg&#8221; command.
<!--l. 264--><p class="noindent" >What do these permissions mean?
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">Read </span>permission means that the file may be displayed on the screen, copied to another file or
     printed on the printer - any operation that requires reading the contents of the file. Having
     read permission on a directory means that its contents can be read; for example, ls could
     read the names and attributes of the files in the directory. Could the contents of those files
     be read?
     </li>
     <li class="itemize"><span 
class="cmti-10">Write </span>permission means that the file of directory may be modified, changed or overwritten.
     Most importantly, write permission means that a file may be deleted. Write permission on a
     directory gives permission to delete a file from within a directory.
     </li>
     <li class="itemize"><span 
class="cmti-10">Execute </span>permission on a file indicates that the file may be executed (i.e., run). Since a directory
     cannot be executed its meaning is redefined. Execute permission on a directory means that
     the user can change into that directory (e.g., using cd) and examine files (e.g., using ls) that it
     has permission to read. If it does not have permission to read then permission will be denied
     when using the ls command.</li></ul>
                                                                                  
                                                                                  
<!--l. 272--><p class="noindent" >After the file permission comes the number of links to the file (e.g., 5), followed b the owner (campbell),
group (faculty), size (e.g., 128) which represents the size of the file in bytes, date and time of modification
(e.g., Dec 24 14:33), and the filename (e.g., cs50).
<!--l. 274--><p class="noindent" >Note, that shellscripts (which we will discuss in a future lecture) must have both read and execute
permission - bash or any of the shells must both be able to read the shellscript and execute it. Program
binaries on the other hand do not need to be read and only need execution permission since they are not
read but executed (recall when we tried to more a.out we could not view it because it was an executable in
machine code).
<!--l. 276--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-14000"></a>Changing permission</h4>
<!--l. 278--><p class="noindent" >The permissions on files and directories may be changed with the <span 
class="cmti-10">chmod </span>(change mode) command. When
you own a file or directory you can use chmod to change the access permissions to the file or
directory.
<!--l. 280--><p class="noindent" >Only the three permission triplets may be changed - a directory cannot be changed into a plain file nor
vice-versa.
<!--l. 282--><p class="noindent" >Permissions given to chmod are either absolute or relative (i.e., symbolic).
<!--l. 284--><p class="noindent" >Each triplet is the sum of the octal digits 4, 2, 1, and read from left to right. For example rwx is
represented by 7, rw- by 6, and r&#8211; by 4 and so on. The absolute octal values used with chmod are as
follows:
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">Octal</span><span 
class="cmtt-10">&#x00A0;Value</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Protection</span><span 
class="cmtt-10">&#x00A0;mechanism</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;400</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;200</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;directory)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;040</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;020</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;010</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;004</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;rest</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;world)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;002</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(dangerous!)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;001</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><br /><br /></div></div>
<!--l. 306--><p class="noindent" >The complete permission on any file is the sum of the values. For example, home directories are typically
700 which provides the owner with read, write, and execute permission but denies all access to
others.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">drwxr-xr-x</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">[campbell@galehead</span><span 
class="cmtt-10">&#x00A0;~]$</span><span 
class="cmtt-10">&#x00A0;chmod</span><span 
class="cmtt-10">&#x00A0;700</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">drwx------</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span></div></div>
<!--l. 321--><p class="noindent" >If you wish others to read your files set - in this case a file funny - then the command would
be:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-14">
[campbell@galehead&#x00A0;~]$&#x00A0;chmod&#x00A0;664&#x00A0;funny
&#x00A0;<br />...
&#x00A0;<br />-rw-rw-r--&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;1&#x00A0;15:50&#x00A0;funny</div>
<!--l. 327--><p class="nopar" >
<!--l. 329--><p class="noindent" >Because the file is only to be read, not written too, and the fact that it&#8217;s a file with no execution (not a
binary or shellscript) 644 makes good sense.
<!--l. 331--><p class="noindent" >Use the manual pages to read how chmod can be used in a relative or symbolic mode; for example, what
would
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-15">
[atc@Macintosh-7&#x00A0;notes]$&#x00A0;chmod&#x00A0;u=wrx,og-rwx&#x00A0;cs50</div>
<!--l. 335--><p class="nopar" >
<!--l. 337--><p class="noindent" >These symbolic arguments need to be used carefully. Here &#8220;o&#8221; means others and &#8220;u&#8221; means owner or
user.
<!--l. 339--><p class="noindent" >&#8220;chmod o+wrx cs50&#8221; do?
<!--l. 341--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-15000"></a>Moving around the file system</h4>
<!--l. 343--><p class="noindent" >The change directory command (cd) allows us to move around the Linux directory hierarchy.
Let&#8217;s combine pwd, ls, and cd to move around the my local directories that are rooted at
/net/nusers/campbell
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-16">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;lectures/
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;ls
&#x00A0;<br />bash-programming.tex&#x00A0;&#x00A0;design.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;se.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;start.tex
&#x00A0;<br />c.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;linux-advance.tex&#x00A0;&#x00A0;shell.tex
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 363--><p class="nopar" >
<!--l. 365--><p class="noindent" >There are also a number of special characters that can be used with cd for short hand.
<!--l. 367--><p class="noindent" >Moving to the parent directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-17">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50</div>
<!--l. 373--><p class="nopar" >
<!--l. 375--><p class="noindent" >Moving back to where we came from:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-18">
[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 382--><p class="nopar" >
<!--l. 384--><p class="noindent" >Moving to our home directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-19">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 390--><p class="nopar" >
<!--l. 392--><p class="noindent" >and back:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-20">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 396--><p class="nopar" >
<!--l. 398--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-16000"></a>Listing and globbing files</h4>
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-21">
campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;0
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 411--><p class="nopar" >
<!--l. 413--><p class="noindent" >Here are a popular set of switches you can use with ls:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-22">
-l list&#x00A0;in&#x00A0;long&#x00A0;format&#x00A0;(as&#x00A0;above)
&#x00A0;<br />-t sort&#x00A0;by&#x00A0;modification&#x00A0;time&#x00A0;(latest&#x00A0;first)
&#x00A0;<br />-a list&#x00A0;all&#x00A0;entries&#x00A0;(including&#x00A0;&#8217;dot&#8217;&#x00A0;files)
&#x00A0;<br />-r list&#x00A0;in&#x00A0;reverse&#x00A0;order&#x00A0;(alphabetical&#x00A0;or&#x00A0;time)
&#x00A0;<br />-R list&#x00A0;the&#x00A0;directory&#x00A0;and&#x00A0;its&#x00A0;subdirectories&#x00A0;recursively</div>
<!--l. 421--><p class="nopar" >
<!--l. 423--><p class="noindent" >We can use a number of special characters to look at the files in a smart and efficient manner:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-23">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 431--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-24">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 441--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-25">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$
&#x00A0;<br /></div>
<!--l. 454--><p class="nopar" >
<!--l. 456--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-17000"></a>Some cool tricks - an example</h4>
<!--l. 458--><p class="noindent" >If I wanted to list just the directories or just plain files (i.e., non directory files) in a directory how would I
do that? Use ls, right. Sorry, ls does not have an option to list only directories or just plain files. But we
can use a combination of commands to do this!
<!--l. 462--><p class="noindent" >We can write our own commands to do this job - we can use a combination of ls and grep to list directory
names only or plain file names only.
<!--l. 465--><p class="noindent" >First let&#8217;s just list all the files in the home directory - it includes one plain file and the rest are
directories.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-26">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 483--><p class="nopar" >
<!--l. 485--><p class="noindent" >Now we use a combination of ls and grep and the pipe command. More on this is in a later lecture but
now we begin to see the power of the shell.
<!--l. 488--><p class="noindent" >Let&#8217;s just list plain files:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-27">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;-v&#x00A0;^d
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br /></div>
<!--l. 496--><p class="nopar" >
<!--l. 498--><p class="noindent" >Now, let&#8217;s use a modification on the above to just list directories:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-28">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;^d
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 513--><p class="nopar" >
<!--l. 515--><p class="noindent" >If you don&#8217;t know any of the above swicthes then use the man command. We can also use the -F switch to
show which file is a directory or not. Check it out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-29">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-lF
&#x00A0;<br />total&#x00A0;140
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;bin/
&#x00A0;<br />drwx------&#x00A0;31&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;16&#x00A0;&#x00A0;2013&#x00A0;cs50/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Apr&#x00A0;19&#x00A0;&#x00A0;2012&#x00A0;cs60/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;532&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Drafts
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;lib/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;May&#x00A0;19&#x00A0;&#x00A0;2013&#x00A0;mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jun&#x00A0;23&#x00A0;&#x00A0;2009&#x00A0;Mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;2&#x00A0;&#x00A0;2012&#x00A0;misc/
&#x00A0;<br />-rwxrwxrwx&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:32&#x00A0;myls*
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;24&#x00A0;&#x00A0;2007&#x00A0;papers/
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;8&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;12288&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;16:55&#x00A0;public_html/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;81979&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:55&#x00A0;solutions/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;11&#x00A0;&#x00A0;2007&#x00A0;teaching/
&#x00A0;<br /></div>
<!--l. 535--><p class="nopar" >
<!--l. 537--><p class="noindent" >It is handy to be able to list just the directories when moving around the file system. So we&#8217;ll add these
commands to our bash files in the next lecture - we&#8217;ll create aliases of these commands so we can use them
any time.
<!--l. 541--><p class="noindent" >We&#8217;ll there is a ls option to list directories and indeed there are many ways to do this; for
example:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-30">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-d&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;&#x00A0;cs50/&#x00A0;&#x00A0;cs60/&#x00A0;&#x00A0;lib/&#x00A0;&#x00A0;mail/&#x00A0;&#x00A0;Mail/&#x00A0;&#x00A0;papers/&#x00A0;&#x00A0;public_html/&#x00A0;&#x00A0;teaching/&#x00A0;&#x00A0;trash/
&#x00A0;<br />
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;echo&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;cs50/&#x00A0;cs60/&#x00A0;lib/&#x00A0;mail/&#x00A0;Mail/&#x00A0;papers/&#x00A0;public_html/&#x00A0;teaching/&#x00A0;trash/
&#x00A0;<br /></div>
<!--l. 551--><p class="nopar" >
<!--l. 553--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-18000"></a>Creating and deleting directories and files</h4>
<!--l. 555--><p class="noindent" >In the following sequence we will create a new directory, create two new files (using touch), move one file
to another directory, delete the other file and remove the directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-31">
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;mkdir&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;touch&#x00A0;socket.c&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />socket.c&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;mv&#x00A0;transport.c&#x00A0;~/.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;alias&#x00A0;rm
&#x00A0;<br />alias&#x00A0;rm=&#8217;rm&#x00A0;-i&#8217;
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;alias&#x00A0;rm=rm
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;socket.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures&#x00A0;&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;rmdir&#x00A0;project</div>
<!--l. 588--><p class="nopar" >
<!--l. 590--><p class="noindent" >In the sequence above we reset the <span 
class="cmti-10">alias </span>for rm which is set up in .bashrc. When you use the &#8220;rm -i&#8221;
option the shell will ask you to confirm if you really want to delete files. This is worth doing by setting up
the alias in your .bashrc file. It is easy to type &#8220;rm&#8221; and accidently delete files. Therefore, the &#8220;-i&#8221;
(interactive) option is a life saver. For example,
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-32">
[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;-i&#x00A0;socket.c
&#x00A0;<br />rm:&#x00A0;remove&#x00A0;regular&#x00A0;empty&#x00A0;file&#x00A0;&#8216;socket.c&#8217;?&#x00A0;y</div>
<!--l. 595--><p class="nopar" >
<!--l. 597--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-19000"></a>Hidden files</h4>
<!--l. 599--><p class="noindent" >In the home directory there are a number of interesting &#8220;hidden&#8221; files. Using the &#8220;-a&#8221; lists all files
including those that begin with a dot (aka the hidden files).
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-33">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-al
&#x00A0;<br />total&#x00A0;899
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;21&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1448&#x00A0;Dec&#x00A0;24&#x00A0;14:58&#x00A0;.
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;25&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;624&#x00A0;May&#x00A0;31&#x00A0;&#x00A0;2007&#x00A0;..
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;2285&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook.lu
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;22:57&#x00A0;.adobe
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;4978&#x00A0;Dec&#x00A0;24&#x00A0;13:39&#x00A0;.bash_history
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;882&#x00A0;Jun&#x00A0;24&#x00A0;&#x00A0;1997&#x00A0;.bash_logout
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1707&#x00A0;Dec&#x00A0;22&#x00A0;18:52&#x00A0;.bash_profile
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1411&#x00A0;Dec&#x00A0;22&#x00A0;19:18&#x00A0;.bashrc
&#x00A0;<br />...&#x00A0;(snip)
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;864&#x00A0;Dec&#x00A0;23&#x00A0;22:42&#x00A0;.Xauthority
&#x00A0;<br />drwx------&#x00A0;&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;136&#x00A0;Nov&#x00A0;&#x00A0;5&#x00A0;21:04&#x00A0;.xemacs</div>
<!--l. 616--><p class="nopar" >
<!--l. 618--><p class="noindent" >But a simple ls will only show:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-34">
[campbell@spruce&#x00A0;~]$&#x00A0;ls
&#x00A0;<br />bin&#x00A0;&#x00A0;cs50&#x00A0;&#x00A0;lib&#x00A0;&#x00A0;mail&#x00A0;&#x00A0;papers&#x00A0;&#x00A0;public_html&#x00A0;&#x00A0;Sent&#x00A0;&#x00A0;Sent&#x00A0;Messages&#x00A0;&#x00A0;teaching</div>
<!--l. 623--><p class="nopar" >
<!--l. 625--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-20000"></a>Reading material for the next class</h3>
<!--l. 627--><p class="noindent" >Make sure you do the <a 
href="http://www.cs.dartmouth.edu/~campbell/c50/reading.html" > reading for the next class </a>Typically we have reading for Wednesday and Friday
classes.
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/shell.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="shell.tex"> 
<meta name="date" content="2014-01-09 20:10:00"> 
<link rel="stylesheet" type="text/css" href="shell.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 2</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>The Linux Shell and Commands</h1>
<!--l. 20--><p class="noindent" >From the last lecture we learnt to write our first C program and looked at the compiler (gcc)
code chain. In this lecture, we will discuss the Linux <span 
class="cmti-10">shell </span>and its commands. The shell is a
command line interpreter and invokes kernel level commands. It also can be used as a scripting
language to design your own utilities. We will discuss scripting as part a future lecture on shell
programming.
<!--l. 22--><p class="noindent" >Since we do not recommend you buy a Linux book here are some very good references and free access
online books - see <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/resources.html" > resources. </a>
<!--l. 24--><p class="noindent" >If you need help on the meaning or syntax of any unix shell command you can use the manual (man)
pages or the <a 
href="http://www.computerhope.com/unix.htm#04" > web unix commands. </a>
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 35--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">The shell
     </li>
     <li class="itemize">The file system</li></ul>
<!--l. 42--><p class="noindent" >OK. Let&#8217;s get started.
<!--l. 44--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>The shell</h3>
                                                                                  
                                                                                  
<!--l. 46--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-6000"></a>Commands, switches, arguments</h4>
<!--l. 48--><p class="noindent" >The shell is the Linux command line interpreter. It provides an interface between the user and the kernel
and executes programs called commands. For example, if a user enters <span 
class="cmti-10">ls </span>then the shell executes the <span 
class="cmti-10">ls</span>
command. The shell can also execute other programs such as applications, scripts, and user programs
(e.g., written in c or the shell programming language).
<!--l. 50--><p class="noindent" >You will get by in the course by becoming familiar with a subset of the Linux commands.
<!--l. 52--><p class="noindent" >Linux has often been criticized for being very terse (it&#8217;s rumored that its designers were bad typists).
Many commands have short, cryptic names - vowels are a rarity:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-1">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;awk,&#x00A0;cat,&#x00A0;cp,&#x00A0;cd,&#x00A0;chmod,&#x00A0;grep,&#x00A0;find,&#x00A0;ls,&#x00A0;mv,&#x00A0;ps,&#x00A0;rm</div>
<!--l. 56--><p class="nopar" >
<!--l. 58--><p class="noindent" >We will learn to use all of these commands and more.
<!--l. 60--><p class="noindent" >Linux command output is also very terse - the default action on success is silence. Only errors are
reported. Linux strongly supports the philosophy of one and only one way to perform each task. Linux
commands are often termed tools or utilities - familiarity with the &#8220;top 20&#8221; will be a great
help.
<!--l. 62--><p class="noindent" >Instructions entered in response to the shell prompt have the following syntax:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-2">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;command&#x00A0;[arg1]&#x00A0;[arg2]&#x00A0;..&#x00A0;[argn]</div>
<!--l. 65--><p class="nopar" >
<!--l. 67--><p class="noindent" >The brackets [] indicate that the arguments are optional. Many commands can be executed with or
without arguments. Others require arguments (e.g., cp sort.c anothersort.c) to work correctly, if not, they
will provide some error status message in return. But to avoid an explosion in the number
of commands most commands support switches (i.e., options) to modify the actions of the
commands.
<!--l. 69--><p class="noindent" >For example, lets use the ls command and the -l option switch to list in long format the file c.tex. Switches
are often single characters preceded by a hyphen (e.g., -l). Most commands accept switches in any order
though they must appear before all &#8220;true&#8221; arguments (usually filenames). In the case of the ls example
below the command arguments represent [options] filenames[s], as shown below. Options therefore modify
the operation of the command and are operated on by the program called by the shell and not the shell
itself.
<!--l. 71--><p class="noindent" >In fact, the command is argument 0 (ls), -l switch or option is argument 1 and the filename is argument 2.
Some commands also accept their switches grouped together. For example, the following switches to ls are
identical:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-3">
[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-rtl
&#x00A0;<br />...
&#x00A0;<br />[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;-r&#x00A0;-&#x00A0;t</div>
<!--l. 77--><p class="nopar" >
<!--l. 79--><p class="noindent" >The shell parses the words or tokens (commandname , options, filesnames[s]) and gets the kernel to
execute the commands assuming the syntax is good.
<!--l. 81--><p class="noindent" >Typically, the shell processes the complete line after a carriage return (cr) (carriage return) is entered and
finds the program that the command line wants executing. The shell looks for the command to execute
either in the specified directory if given (./mycommnd) or it searches through a list of directories
depending on your $PATH variable.
<!--l. 83--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-7000"></a>Path environment</h4>
<!--l. 85--><p class="noindent" >You will need to look at your $PATH variable and update it from time to time to make sure the path to
the code you want to execute is there. Typically, your login files that execute when you log in
(.bash&#x02D9;profile) or each time to execute a command (.bashrc) are the place to set up these environment
variables such as $PATH.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-4">
echo&#x00A0;$PATH
&#x00A0;<br />/sw/bin:/sw/sbin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/texbin:/sw/bin:/usr/X11R6/bin</div>
<!--l. 89--><p class="nopar" >
<!--l. 91--><p class="noindent" >So where does the ls command executed above reside in the Linux directory hierarchy. Let&#8217;s use another
command to find out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-5">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$&#x00A0;whereis&#x00A0;ls
&#x00A0;<br />/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$</div>
<!--l. 99--><p class="nopar" >
<!--l. 101--><p class="noindent" >The <span 
class="cmti-10">whereis </span>or <span 
class="cmti-10">which </span>commands are a useful sanity check if you want to know for sure which ls command
is executed. For example, I could have written a program called ls and placed it in my working directory -
probably not a good idea but could happen. In that case, if I entered ls - which command would the shell
execute?
<!--l. 103--><p class="noindent" >So we can see from the $PATH variable that /bin is in the path. Hence the shell can track down the ls
binary to execute. The fact that the ls command is in /bin assumes that the filename /bin/ls has the
correct permission set to be an executable by all. We can check this.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-6">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;ls&#x00A0;-l&#x00A0;/bin/ls
&#x00A0;<br />-r-xr-xr-x&#x00A0;&#x00A0;&#x00A0;1&#x00A0;root&#x00A0;&#x00A0;wheel&#x00A0;&#x00A0;60972&#x00A0;Oct&#x00A0;17&#x00A0;&#x00A0;2006&#x00A0;/bin/ls</div>
<!--l. 108--><p class="nopar" >
<!--l. 110--><p class="noindent" >Indeed it is. The file is owned by &#8220;root&#8221; and is executable by all.
<!--l. 112--><p class="noindent" >If I set my $PATH variable to &#8220;.&#8221; only the current working directory and execute ls (this would be akin to
not having my path name set up correctly) then the shell would not be able to find the correct program to
execute (assuming I don&#8217;t have an ls binary with the correct permissions in my current directory). Here is
what would happen.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-7">
[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;PATH=.
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;ls:&#x00A0;command&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;type:&#x00A0;ls:&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$</div>
<!--l. 123--><p class="nopar" >
<!--l. 125--><p class="noindent" >You may come across this error (&#8220;-bash: ls: command not found&#8221; or variants thereof) when you install
code or try and execute new programs you want to use or have written.
<!--l. 127--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-8000"></a>There are shells, shells and more shells</h4>
<!--l. 129--><p class="noindent" >There are a number of shells available to a Linux user - so which one do you select? These
are:
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">sh </span>- This is known as the Borne Shell and is the original shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">csh, tcsh </span>- These are well-known and widely used derivatives of the Borne shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">ksh </span>- The popular Korn shell; and
     </li>
     <li class="itemize"><span 
class="cmti-10">bash </span>- The Borne Again SHell is the most popular shell used for linux and developed by GNU.</li></ul>
<!--l. 138--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-9000"></a>Changing the Shell to bash</h4>
<!--l. 140--><p class="noindent" >We will be using the bash shell in this course since it is standard fare with Linux machines. Let&#8217;s check
what shell has been configured for your login account. If it&#8217;s not the bash shell then let&#8217;s change the shell
using the change shell <span 
class="cmti-10">chsh </span>command. To find out what shell is running, log in and look at the $SHELL
environment variable. We will use the <span 
class="cmti-10">echo </span>command which is akin to the print (e.g., printf in C)
                                                                                  
                                                                                  
statement in many languages.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-8">
[campbell@spruce&#x00A0;~]$&#x00A0;echo&#x00A0;$SHELL
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;chsh
&#x00A0;<br />please&#x00A0;login&#x00A0;to&#x00A0;galehead&#x00A0;and&#x00A0;run&#x00A0;/usr/bin/chsh&#x00A0;from&#x00A0;there.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;ssh&#x00A0;galehead
&#x00A0;<br />campbell@galehead&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Sun&#x00A0;Dec&#x00A0;23&#x00A0;22:58:58&#x00A0;2007&#x00A0;from&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-l
&#x00A0;<br />/bin/bash
&#x00A0;<br />/bin/sh
&#x00A0;<br />/bin/ash
&#x00A0;<br />/bin/bsh
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />/bin/csh
&#x00A0;<br />/usr/local/bin/bash
&#x00A0;<br />/usr/local/bin/tcsh
&#x00A0;<br />/bin/bash2
&#x00A0;<br />/bin/zsh</div>
<!--l. 164--><p class="nopar" >
<!--l. 166--><p class="noindent" >The tcsh shell is set. So we need to change the shell to bash. Note, that galehead is the only machine that
you can change user configuration information on such as passwords and shells. So we ssh to
galehead and list all permissible shells supported by our local Linux machines using the &#8220;chsh -l&#8221;
switch.
<!--l. 168--><p class="noindent" >Now, let&#8217;s change the shell to bash. Note, that our first attempt fails because the shell wants the full path
name. We will discuss full and relative path names later in this lecture. Our second attempt using the full
path name from above is successful.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-9">
[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />chsh:&#x00A0;shell&#x00A0;must&#x00A0;be&#x00A0;a&#x00A0;full&#x00A0;path&#x00A0;name.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;/bin/bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />Shell&#x00A0;changed.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;ps
&#x00A0;<br />&#x00A0;&#x00A0;PID&#x00A0;TTY&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;TIME&#x00A0;CMD
&#x00A0;<br />22271&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;bash
&#x00A0;<br />22345&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;ps</div>
<!--l. 185--><p class="nopar" >
<!--l. 187--><p class="noindent" >Another way to see what shell is running is to use the process status (ps) command. We can see
that the bash shell is running. The process ID and other status information of the process is
displayed.
<!--l. 189--><p class="noindent" >Note, that most commands executed by the shell starts a new &#8220;process&#8221;. (There is an exception to for
what are called <span 
class="cmti-10">builtins</span>). We will discuss processes in a future lecture.
<!--l. 191--><p class="noindent" >The basic shell operation is as follows. The shell parses the command line and finds the program to
execute. It passes any options and arguments to the program as part of a new process for
the command such as ps above. While the process is running ps above the shell waits for
the process to complete. The shell is in a sleep state. When the program completes it passes
its exit status back to the shell. At this point the shell wakes up and prompts the user for
another command. Note, that it is the program that is executed, for example, ps in this case,
that checks to see if the arguments passed to it by the shell are correct or not. It is not the
job of the shell to do that level of parsing or error checking. If there are problems with the
syntax (e.g., wrong switch) then it is the program itself that informs the user via an error
message.
<!--l. 193--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-10000"></a>A note on shell builtins</h3>
<!--l. 194--><p class="noindent" >The term command and utility are used synonymous in these notes. The shell has a number of utilities
built into the shell called <span 
class="cmti-10">builtins</span>. When a builtin runs the shell does not fork a process; that is, it does not
create a process specifically to execute the command. Therefore, the builtins run more efficiently in the
                                                                                  
                                                                                  
context of the existing process rather than having the cost of creating new processes to run the command.
Typically, users are not aware if a command runs as a builtin or a standard forked command.
The echo command exists as a builtin to the shell and as a separate utility in /bin/echo. As
a rule the shell will always execute a builtin before trying to find a command of the same
name to fork. Bash supports a number of builtins including bg, fg, cd, kill, pwd, read among
others.
<!--l. 196--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-11000"></a>Linux file system</h3>
<!--l. 198--><p class="noindent" >The Linux file system is a <span 
class="cmti-10">hierarchical file system</span>. The file system consists of a very small number of
different file types. These include text files, directories, character special files (e.g., terminals) and block
special files (e.g., disks and tapes).
<!--l. 200--><p class="noindent" >A directory is just a special type of file. A directory (akin to a Macintosh folder) contains the names and
locations of all files and directories below it. A directory always contains two special files &#8217;.&#8217; (dot) and &#8217;..&#8217;
(dot dot). Every file has a filename of up to 1024 characters typically from &#8217;A-Z a-z 0-9 &#x02D9; .&#8217; and an inode
which uniquely identifies the file in the file system.
<!--l. 202--><p class="noindent" >Directory names are separated by a slash &#8217;/&#8217;, forming pathnames.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-10">
/usr/bin/emacs
&#x00A0;<br />/etc/passwd</div>
<!--l. 207--><p class="nopar" >
<!--l. 209--><p class="noindent" >Files are accessed by referring to their relative or absolute pathnames.
<!--l. 211--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-12000"></a>Home directory</h4>
<!--l. 213--><p class="noindent" >Each account has a home directory. After you have logged in your shell will be executing in your home
directory. So let&#8217;s log in and use the <span 
class="cmti-10">pwd </span>command to find out where we are - we will be in the home
directory of course.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-11">
[atc@Macintosh-7&#x00A0;l2]$&#x00A0;ssh&#x00A0;-Y&#x00A0;-l&#x00A0;campbell&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />campbell@spruce.cs.dartmouth.edu&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Mon&#x00A0;Dec&#x00A0;24&#x00A0;11:37:01&#x00A0;2007&#x00A0;from&#x00A0;c-75-69-130-98.hsd1.nh.comcast.net
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 222--><p class="nopar" >
<!--l. 224--><p class="noindent" >Let&#8217;s list the contents of the home directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-12">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;434
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs23
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1368&#x00A0;Dec&#x00A0;24&#x00A0;11:25&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;104&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;12:01&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;4&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;728&#x00A0;Oct&#x00A0;26&#x00A0;&#x00A0;2006&#x00A0;public_html
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;435438&#x00A0;Dec&#x00A0;14&#x00A0;&#x00A0;2006&#x00A0;Sent
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Dec&#x00A0;11&#x00A0;15:14&#x00A0;teaching</div>
<!--l. 238--><p class="nopar" >
<!--l. 240--><p class="noindent" >Recall the &#8220;d&#8221; in &#8220;drwx&#8212;&#8212;&#8221; indicates that this file is in fact a directory. So we can move to that
directory assuming we have the relevant permission - which we do in all cases. So lets move
around.
<!--l. 242--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-13000"></a>File and directory permission</h4>
<!--l. 244--><p class="noindent" >All files and directories have certain access permissions which constrain access to only those users having
the correct permission. Let&#8217;s consider a couple of typical examples from above:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-13">
drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages</div>
<!--l. 251--><p class="nopar" >
<!--l. 253--><p class="noindent" >The first character of the access permissions indicate what &#8220;type of file&#8221; is being displayed.
     <ul class="itemize1">
     <li class="itemize">- plain files (such as C programs or text files)
     </li>
     <li class="itemize">d directories
     </li>
     <li class="itemize">c character special files (such as terminals)
     </li>
     <li class="itemize">b block special files (such as disk drives)</li></ul>
<!--l. 262--><p class="noindent" >Following the first type of file character the next 3 triples (i.e., groups of three characters) from left to
right represent file permissions: the <span 
class="cmti-10">read</span>, <span 
class="cmti-10">write</span>, and <span 
class="cmti-10">execute </span>permissions, for (respectively) the owner
(campbell in this case), the files&#8217;s group (faculty in this case), and the &#8220;rest-of-the-world&#8221;. To determine
that group particular files are in enter the &#8220;ls -lg&#8221; command.
<!--l. 264--><p class="noindent" >What do these permissions mean?
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">Read </span>permission means that the file may be displayed on the screen, copied to another file or
     printed on the printer - any operation that requires reading the contents of the file. Having
     read permission on a directory means that its contents can be read; for example, ls could
     read the names and attributes of the files in the directory. Could the contents of those files
     be read?
     </li>
     <li class="itemize"><span 
class="cmti-10">Write </span>permission means that the file of directory may be modified, changed or overwritten.
     Most importantly, write permission means that a file may be deleted. Write permission on a
     directory gives permission to delete a file from within a directory.
     </li>
     <li class="itemize"><span 
class="cmti-10">Execute </span>permission on a file indicates that the file may be executed (i.e., run). Since a directory
     cannot be executed its meaning is redefined. Execute permission on a directory means that
     the user can change into that directory (e.g., using cd) and examine files (e.g., using ls) that it
     has permission to read. If it does not have permission to read then permission will be denied
     when using the ls command.</li></ul>
                                                                                  
                                                                                  
<!--l. 272--><p class="noindent" >After the file permission comes the number of links to the file (e.g., 5), followed b the owner (campbell),
group (faculty), size (e.g., 128) which represents the size of the file in bytes, date and time of modification
(e.g., Dec 24 14:33), and the filename (e.g., cs50).
<!--l. 274--><p class="noindent" >Note, that shellscripts (which we will discuss in a future lecture) must have both read and execute
permission - bash or any of the shells must both be able to read the shellscript and execute it. Program
binaries on the other hand do not need to be read and only need execution permission since they are not
read but executed (recall when we tried to more a.out we could not view it because it was an executable in
machine code).
<!--l. 276--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-14000"></a>Changing permission</h4>
<!--l. 278--><p class="noindent" >The permissions on files and directories may be changed with the <span 
class="cmti-10">chmod </span>(change mode) command. When
you own a file or directory you can use chmod to change the access permissions to the file or
directory.
<!--l. 280--><p class="noindent" >Only the three permission triplets may be changed - a directory cannot be changed into a plain file nor
vice-versa.
<!--l. 282--><p class="noindent" >Permissions given to chmod are either absolute or relative (i.e., symbolic).
<!--l. 284--><p class="noindent" >Each triplet is the sum of the octal digits 4, 2, 1, and read from left to right. For example rwx is
represented by 7, rw- by 6, and r&#8211; by 4 and so on. The absolute octal values used with chmod are as
follows:
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">Octal</span><span 
class="cmtt-10">&#x00A0;Value</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Protection</span><span 
class="cmtt-10">&#x00A0;mechanism</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;400</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;200</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;directory)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;040</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;020</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;010</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;004</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;rest</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;world)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;002</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(dangerous!)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;001</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><br /><br /></div></div>
<!--l. 306--><p class="noindent" >The complete permission on any file is the sum of the values. For example, home directories are typically
700 which provides the owner with read, write, and execute permission but denies all access to
others.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">drwxr-xr-x</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">[campbell@galehead</span><span 
class="cmtt-10">&#x00A0;~]$</span><span 
class="cmtt-10">&#x00A0;chmod</span><span 
class="cmtt-10">&#x00A0;700</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">drwx------</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span></div></div>
<!--l. 321--><p class="noindent" >If you wish others to read your files set - in this case a file funny - then the command would
be:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-14">
[campbell@galehead&#x00A0;~]$&#x00A0;chmod&#x00A0;664&#x00A0;funny
&#x00A0;<br />...
&#x00A0;<br />-rw-rw-r--&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;1&#x00A0;15:50&#x00A0;funny</div>
<!--l. 327--><p class="nopar" >
<!--l. 329--><p class="noindent" >Because the file is only to be read, not written too, and the fact that it&#8217;s a file with no execution (not a
binary or shellscript) 644 makes good sense.
<!--l. 331--><p class="noindent" >Use the manual pages to read how chmod can be used in a relative or symbolic mode; for example, what
would
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-15">
[atc@Macintosh-7&#x00A0;notes]$&#x00A0;chmod&#x00A0;u=wrx,og-rwx&#x00A0;cs50</div>
<!--l. 335--><p class="nopar" >
<!--l. 337--><p class="noindent" >These symbolic arguments need to be used carefully. Here &#8220;o&#8221; means others and &#8220;u&#8221; means owner or
user.
<!--l. 339--><p class="noindent" >&#8220;chmod o+wrx cs50&#8221; do?
<!--l. 341--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-15000"></a>Moving around the file system</h4>
<!--l. 343--><p class="noindent" >The change directory command (cd) allows us to move around the Linux directory hierarchy.
Let&#8217;s combine pwd, ls, and cd to move around the my local directories that are rooted at
/net/nusers/campbell
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-16">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;lectures/
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;ls
&#x00A0;<br />bash-programming.tex&#x00A0;&#x00A0;design.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;se.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;start.tex
&#x00A0;<br />c.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;linux-advance.tex&#x00A0;&#x00A0;shell.tex
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 363--><p class="nopar" >
<!--l. 365--><p class="noindent" >There are also a number of special characters that can be used with cd for short hand.
<!--l. 367--><p class="noindent" >Moving to the parent directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-17">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50</div>
<!--l. 373--><p class="nopar" >
<!--l. 375--><p class="noindent" >Moving back to where we came from:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-18">
[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 382--><p class="nopar" >
<!--l. 384--><p class="noindent" >Moving to our home directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-19">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 390--><p class="nopar" >
<!--l. 392--><p class="noindent" >and back:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-20">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 396--><p class="nopar" >
<!--l. 398--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-16000"></a>Listing and globbing files</h4>
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-21">
campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;0
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 411--><p class="nopar" >
<!--l. 413--><p class="noindent" >Here are a popular set of switches you can use with ls:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-22">
-l list&#x00A0;in&#x00A0;long&#x00A0;format&#x00A0;(as&#x00A0;above)
&#x00A0;<br />-t sort&#x00A0;by&#x00A0;modification&#x00A0;time&#x00A0;(latest&#x00A0;first)
&#x00A0;<br />-a list&#x00A0;all&#x00A0;entries&#x00A0;(including&#x00A0;&#8217;dot&#8217;&#x00A0;files)
&#x00A0;<br />-r list&#x00A0;in&#x00A0;reverse&#x00A0;order&#x00A0;(alphabetical&#x00A0;or&#x00A0;time)
&#x00A0;<br />-R list&#x00A0;the&#x00A0;directory&#x00A0;and&#x00A0;its&#x00A0;subdirectories&#x00A0;recursively</div>
<!--l. 421--><p class="nopar" >
<!--l. 423--><p class="noindent" >We can use a number of special characters to look at the files in a smart and efficient manner:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-23">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 431--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-24">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 441--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-25">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$
&#x00A0;<br /></div>
<!--l. 454--><p class="nopar" >
<!--l. 456--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-17000"></a>Some cool tricks - an example</h4>
<!--l. 458--><p class="noindent" >If I wanted to list just the directories or just plain files (i.e., non directory files) in a directory how would I
do that? Use ls, right. Sorry, ls does not have an option to list only directories or just plain files. But we
can use a combination of commands to do this!
<!--l. 462--><p class="noindent" >We can write our own commands to do this job - we can use a combination of ls and grep to list directory
names only or plain file names only.
<!--l. 465--><p class="noindent" >First let&#8217;s just list all the files in the home directory - it includes one plain file and the rest are
directories.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-26">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 483--><p class="nopar" >
<!--l. 485--><p class="noindent" >Now we use a combination of ls and grep and the pipe command. More on this is in a later lecture but
now we begin to see the power of the shell.
<!--l. 488--><p class="noindent" >Let&#8217;s just list plain files:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-27">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;-v&#x00A0;^d
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br /></div>
<!--l. 496--><p class="nopar" >
<!--l. 498--><p class="noindent" >Now, let&#8217;s use a modification on the above to just list directories:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-28">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;^d
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 513--><p class="nopar" >
<!--l. 515--><p class="noindent" >If you don&#8217;t know any of the above swicthes then use the man command. We can also use the -F switch to
show which file is a directory or not. Check it out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-29">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-lF
&#x00A0;<br />total&#x00A0;140
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;bin/
&#x00A0;<br />drwx------&#x00A0;31&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;16&#x00A0;&#x00A0;2013&#x00A0;cs50/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Apr&#x00A0;19&#x00A0;&#x00A0;2012&#x00A0;cs60/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;532&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Drafts
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;lib/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;May&#x00A0;19&#x00A0;&#x00A0;2013&#x00A0;mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jun&#x00A0;23&#x00A0;&#x00A0;2009&#x00A0;Mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;2&#x00A0;&#x00A0;2012&#x00A0;misc/
&#x00A0;<br />-rwxrwxrwx&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:32&#x00A0;myls*
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;24&#x00A0;&#x00A0;2007&#x00A0;papers/
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;8&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;12288&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;16:55&#x00A0;public_html/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;81979&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:55&#x00A0;solutions/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;11&#x00A0;&#x00A0;2007&#x00A0;teaching/
&#x00A0;<br /></div>
<!--l. 535--><p class="nopar" >
<!--l. 537--><p class="noindent" >It is handy to be able to list just the directories when moving around the file system. So we&#8217;ll add these
commands to our bash files in the next lecture - we&#8217;ll create aliases of these commands so we can use them
any time.
<!--l. 541--><p class="noindent" >We&#8217;ll there is a ls option to list directories and indeed there are many ways to do this; for
example:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-30">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-d&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;&#x00A0;cs50/&#x00A0;&#x00A0;cs60/&#x00A0;&#x00A0;lib/&#x00A0;&#x00A0;mail/&#x00A0;&#x00A0;Mail/&#x00A0;&#x00A0;papers/&#x00A0;&#x00A0;public_html/&#x00A0;&#x00A0;teaching/&#x00A0;&#x00A0;trash/
&#x00A0;<br />
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;echo&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;cs50/&#x00A0;cs60/&#x00A0;lib/&#x00A0;mail/&#x00A0;Mail/&#x00A0;papers/&#x00A0;public_html/&#x00A0;teaching/&#x00A0;trash/
&#x00A0;<br /></div>
<!--l. 551--><p class="nopar" >
<!--l. 553--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-18000"></a>Creating and deleting directories and files</h4>
<!--l. 555--><p class="noindent" >In the following sequence we will create a new directory, create two new files (using touch), move one file
to another directory, delete the other file and remove the directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-31">
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;mkdir&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;touch&#x00A0;socket.c&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />socket.c&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;mv&#x00A0;transport.c&#x00A0;~/.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;alias&#x00A0;rm
&#x00A0;<br />alias&#x00A0;rm=&#8217;rm&#x00A0;-i&#8217;
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;alias&#x00A0;rm=rm
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;socket.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures&#x00A0;&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;rmdir&#x00A0;project</div>
<!--l. 588--><p class="nopar" >
<!--l. 590--><p class="noindent" >In the sequence above we reset the <span 
class="cmti-10">alias </span>for rm which is set up in .bashrc. When you use the &#8220;rm -i&#8221;
option the shell will ask you to confirm if you really want to delete files. This is worth doing by setting up
the alias in your .bashrc file. It is easy to type &#8220;rm&#8221; and accidently delete files. Therefore, the &#8220;-i&#8221;
(interactive) option is a life saver. For example,
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-32">
[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;-i&#x00A0;socket.c
&#x00A0;<br />rm:&#x00A0;remove&#x00A0;regular&#x00A0;empty&#x00A0;file&#x00A0;&#8216;socket.c&#8217;?&#x00A0;y</div>
<!--l. 595--><p class="nopar" >
<!--l. 597--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-19000"></a>Hidden files</h4>
<!--l. 599--><p class="noindent" >In the home directory there are a number of interesting &#8220;hidden&#8221; files. Using the &#8220;-a&#8221; lists all files
including those that begin with a dot (aka the hidden files).
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-33">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-al
&#x00A0;<br />total&#x00A0;899
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;21&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1448&#x00A0;Dec&#x00A0;24&#x00A0;14:58&#x00A0;.
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;25&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;624&#x00A0;May&#x00A0;31&#x00A0;&#x00A0;2007&#x00A0;..
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;2285&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook.lu
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;22:57&#x00A0;.adobe
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;4978&#x00A0;Dec&#x00A0;24&#x00A0;13:39&#x00A0;.bash_history
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;882&#x00A0;Jun&#x00A0;24&#x00A0;&#x00A0;1997&#x00A0;.bash_logout
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1707&#x00A0;Dec&#x00A0;22&#x00A0;18:52&#x00A0;.bash_profile
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1411&#x00A0;Dec&#x00A0;22&#x00A0;19:18&#x00A0;.bashrc
&#x00A0;<br />...&#x00A0;(snip)
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;864&#x00A0;Dec&#x00A0;23&#x00A0;22:42&#x00A0;.Xauthority
&#x00A0;<br />drwx------&#x00A0;&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;136&#x00A0;Nov&#x00A0;&#x00A0;5&#x00A0;21:04&#x00A0;.xemacs</div>
<!--l. 616--><p class="nopar" >
<!--l. 618--><p class="noindent" >But a simple ls will only show:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-34">
[campbell@spruce&#x00A0;~]$&#x00A0;ls
&#x00A0;<br />bin&#x00A0;&#x00A0;cs50&#x00A0;&#x00A0;lib&#x00A0;&#x00A0;mail&#x00A0;&#x00A0;papers&#x00A0;&#x00A0;public_html&#x00A0;&#x00A0;Sent&#x00A0;&#x00A0;Sent&#x00A0;Messages&#x00A0;&#x00A0;teaching</div>
<!--l. 623--><p class="nopar" >
<!--l. 625--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-20000"></a>Reading material for the next class</h3>
<!--l. 627--><p class="noindent" >Make sure you do the <a 
href="http://www.cs.dartmouth.edu/~campbell/c50/reading.html" > reading for the next class </a>Typically we have reading for Wednesday and Friday
classes.
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/shell.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="shell.tex"> 
<meta name="date" content="2014-01-09 20:10:00"> 
<link rel="stylesheet" type="text/css" href="shell.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 2</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>The Linux Shell and Commands</h1>
<!--l. 20--><p class="noindent" >From the last lecture we learnt to write our first C program and looked at the compiler (gcc)
code chain. In this lecture, we will discuss the Linux <span 
class="cmti-10">shell </span>and its commands. The shell is a
command line interpreter and invokes kernel level commands. It also can be used as a scripting
language to design your own utilities. We will discuss scripting as part a future lecture on shell
programming.
<!--l. 22--><p class="noindent" >Since we do not recommend you buy a Linux book here are some very good references and free access
online books - see <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/resources.html" > resources. </a>
<!--l. 24--><p class="noindent" >If you need help on the meaning or syntax of any unix shell command you can use the manual (man)
pages or the <a 
href="http://www.computerhope.com/unix.htm#04" > web unix commands. </a>
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 35--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">The shell
     </li>
     <li class="itemize">The file system</li></ul>
<!--l. 42--><p class="noindent" >OK. Let&#8217;s get started.
<!--l. 44--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>The shell</h3>
                                                                                  
                                                                                  
<!--l. 46--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-6000"></a>Commands, switches, arguments</h4>
<!--l. 48--><p class="noindent" >The shell is the Linux command line interpreter. It provides an interface between the user and the kernel
and executes programs called commands. For example, if a user enters <span 
class="cmti-10">ls </span>then the shell executes the <span 
class="cmti-10">ls</span>
command. The shell can also execute other programs such as applications, scripts, and user programs
(e.g., written in c or the shell programming language).
<!--l. 50--><p class="noindent" >You will get by in the course by becoming familiar with a subset of the Linux commands.
<!--l. 52--><p class="noindent" >Linux has often been criticized for being very terse (it&#8217;s rumored that its designers were bad typists).
Many commands have short, cryptic names - vowels are a rarity:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-1">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;awk,&#x00A0;cat,&#x00A0;cp,&#x00A0;cd,&#x00A0;chmod,&#x00A0;grep,&#x00A0;find,&#x00A0;ls,&#x00A0;mv,&#x00A0;ps,&#x00A0;rm</div>
<!--l. 56--><p class="nopar" >
<!--l. 58--><p class="noindent" >We will learn to use all of these commands and more.
<!--l. 60--><p class="noindent" >Linux command output is also very terse - the default action on success is silence. Only errors are
reported. Linux strongly supports the philosophy of one and only one way to perform each task. Linux
commands are often termed tools or utilities - familiarity with the &#8220;top 20&#8221; will be a great
help.
<!--l. 62--><p class="noindent" >Instructions entered in response to the shell prompt have the following syntax:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-2">
&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;command&#x00A0;[arg1]&#x00A0;[arg2]&#x00A0;..&#x00A0;[argn]</div>
<!--l. 65--><p class="nopar" >
<!--l. 67--><p class="noindent" >The brackets [] indicate that the arguments are optional. Many commands can be executed with or
without arguments. Others require arguments (e.g., cp sort.c anothersort.c) to work correctly, if not, they
will provide some error status message in return. But to avoid an explosion in the number
of commands most commands support switches (i.e., options) to modify the actions of the
commands.
<!--l. 69--><p class="noindent" >For example, lets use the ls command and the -l option switch to list in long format the file c.tex. Switches
are often single characters preceded by a hyphen (e.g., -l). Most commands accept switches in any order
though they must appear before all &#8220;true&#8221; arguments (usually filenames). In the case of the ls example
below the command arguments represent [options] filenames[s], as shown below. Options therefore modify
the operation of the command and are operated on by the program called by the shell and not the shell
itself.
<!--l. 71--><p class="noindent" >In fact, the command is argument 0 (ls), -l switch or option is argument 1 and the filename is argument 2.
Some commands also accept their switches grouped together. For example, the following switches to ls are
identical:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-3">
[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-rtl
&#x00A0;<br />...
&#x00A0;<br />[campbell@galehead&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;-r&#x00A0;-&#x00A0;t</div>
<!--l. 77--><p class="nopar" >
<!--l. 79--><p class="noindent" >The shell parses the words or tokens (commandname , options, filesnames[s]) and gets the kernel to
execute the commands assuming the syntax is good.
<!--l. 81--><p class="noindent" >Typically, the shell processes the complete line after a carriage return (cr) (carriage return) is entered and
finds the program that the command line wants executing. The shell looks for the command to execute
either in the specified directory if given (./mycommnd) or it searches through a list of directories
depending on your $PATH variable.
<!--l. 83--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-7000"></a>Path environment</h4>
<!--l. 85--><p class="noindent" >You will need to look at your $PATH variable and update it from time to time to make sure the path to
the code you want to execute is there. Typically, your login files that execute when you log in
(.bash&#x02D9;profile) or each time to execute a command (.bashrc) are the place to set up these environment
variables such as $PATH.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-4">
echo&#x00A0;$PATH
&#x00A0;<br />/sw/bin:/sw/sbin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/texbin:/sw/bin:/usr/X11R6/bin</div>
<!--l. 89--><p class="nopar" >
<!--l. 91--><p class="noindent" >So where does the ls command executed above reside in the Linux directory hierarchy. Let&#8217;s use another
command to find out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-5">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$&#x00A0;whereis&#x00A0;ls
&#x00A0;<br />/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;atc]$</div>
<!--l. 99--><p class="nopar" >
<!--l. 101--><p class="noindent" >The <span 
class="cmti-10">whereis </span>or <span 
class="cmti-10">which </span>commands are a useful sanity check if you want to know for sure which ls command
is executed. For example, I could have written a program called ls and placed it in my working directory -
probably not a good idea but could happen. In that case, if I entered ls - which command would the shell
execute?
<!--l. 103--><p class="noindent" >So we can see from the $PATH variable that /bin is in the path. Hence the shell can track down the ls
binary to execute. The fact that the ls command is in /bin assumes that the filename /bin/ls has the
correct permission set to be an executable by all. We can check this.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-6">
[atc@Macintosh-7&#x00A0;atc]$&#x00A0;ls&#x00A0;-l&#x00A0;/bin/ls
&#x00A0;<br />-r-xr-xr-x&#x00A0;&#x00A0;&#x00A0;1&#x00A0;root&#x00A0;&#x00A0;wheel&#x00A0;&#x00A0;60972&#x00A0;Oct&#x00A0;17&#x00A0;&#x00A0;2006&#x00A0;/bin/ls</div>
<!--l. 108--><p class="nopar" >
<!--l. 110--><p class="noindent" >Indeed it is. The file is owned by &#8220;root&#8221; and is executable by all.
<!--l. 112--><p class="noindent" >If I set my $PATH variable to &#8220;.&#8221; only the current working directory and execute ls (this would be akin to
not having my path name set up correctly) then the shell would not be able to find the correct program to
execute (assuming I don&#8217;t have an ls binary with the correct permissions in my current directory). Here is
what would happen.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-7">
[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />ls&#x00A0;is&#x00A0;/bin/ls
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;PATH=.
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;ls:&#x00A0;command&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$&#x00A0;which&#x00A0;ls
&#x00A0;<br />-bash:&#x00A0;type:&#x00A0;ls:&#x00A0;not&#x00A0;found
&#x00A0;<br />[atc@Macintosh-7&#x00A0;teaching]$</div>
<!--l. 123--><p class="nopar" >
<!--l. 125--><p class="noindent" >You may come across this error (&#8220;-bash: ls: command not found&#8221; or variants thereof) when you install
code or try and execute new programs you want to use or have written.
<!--l. 127--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-8000"></a>There are shells, shells and more shells</h4>
<!--l. 129--><p class="noindent" >There are a number of shells available to a Linux user - so which one do you select? These
are:
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">sh </span>- This is known as the Borne Shell and is the original shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">csh, tcsh </span>- These are well-known and widely used derivatives of the Borne shell;
     </li>
     <li class="itemize"><span 
class="cmti-10">ksh </span>- The popular Korn shell; and
     </li>
     <li class="itemize"><span 
class="cmti-10">bash </span>- The Borne Again SHell is the most popular shell used for linux and developed by GNU.</li></ul>
<!--l. 138--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-9000"></a>Changing the Shell to bash</h4>
<!--l. 140--><p class="noindent" >We will be using the bash shell in this course since it is standard fare with Linux machines. Let&#8217;s check
what shell has been configured for your login account. If it&#8217;s not the bash shell then let&#8217;s change the shell
using the change shell <span 
class="cmti-10">chsh </span>command. To find out what shell is running, log in and look at the $SHELL
environment variable. We will use the <span 
class="cmti-10">echo </span>command which is akin to the print (e.g., printf in C)
                                                                                  
                                                                                  
statement in many languages.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-8">
[campbell@spruce&#x00A0;~]$&#x00A0;echo&#x00A0;$SHELL
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;chsh
&#x00A0;<br />please&#x00A0;login&#x00A0;to&#x00A0;galehead&#x00A0;and&#x00A0;run&#x00A0;/usr/bin/chsh&#x00A0;from&#x00A0;there.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;ssh&#x00A0;galehead
&#x00A0;<br />campbell@galehead&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Sun&#x00A0;Dec&#x00A0;23&#x00A0;22:58:58&#x00A0;2007&#x00A0;from&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-l
&#x00A0;<br />/bin/bash
&#x00A0;<br />/bin/sh
&#x00A0;<br />/bin/ash
&#x00A0;<br />/bin/bsh
&#x00A0;<br />/bin/tcsh
&#x00A0;<br />/bin/csh
&#x00A0;<br />/usr/local/bin/bash
&#x00A0;<br />/usr/local/bin/tcsh
&#x00A0;<br />/bin/bash2
&#x00A0;<br />/bin/zsh</div>
<!--l. 164--><p class="nopar" >
<!--l. 166--><p class="noindent" >The tcsh shell is set. So we need to change the shell to bash. Note, that galehead is the only machine that
you can change user configuration information on such as passwords and shells. So we ssh to
galehead and list all permissible shells supported by our local Linux machines using the &#8220;chsh -l&#8221;
switch.
<!--l. 168--><p class="noindent" >Now, let&#8217;s change the shell to bash. Note, that our first attempt fails because the shell wants the full path
name. We will discuss full and relative path names later in this lecture. Our second attempt using the full
path name from above is successful.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-9">
[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />chsh:&#x00A0;shell&#x00A0;must&#x00A0;be&#x00A0;a&#x00A0;full&#x00A0;path&#x00A0;name.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;chsh&#x00A0;-s&#x00A0;/bin/bash
&#x00A0;<br />Changing&#x00A0;shell&#x00A0;for&#x00A0;campbell.
&#x00A0;<br />Password:
&#x00A0;<br />Shell&#x00A0;changed.
&#x00A0;<br />
&#x00A0;<br />[campbell@galehead&#x00A0;~]$&#x00A0;ps
&#x00A0;<br />&#x00A0;&#x00A0;PID&#x00A0;TTY&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;TIME&#x00A0;CMD
&#x00A0;<br />22271&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;bash
&#x00A0;<br />22345&#x00A0;pts/1&#x00A0;&#x00A0;&#x00A0;&#x00A0;00:00:00&#x00A0;ps</div>
<!--l. 185--><p class="nopar" >
<!--l. 187--><p class="noindent" >Another way to see what shell is running is to use the process status (ps) command. We can see
that the bash shell is running. The process ID and other status information of the process is
displayed.
<!--l. 189--><p class="noindent" >Note, that most commands executed by the shell starts a new &#8220;process&#8221;. (There is an exception to for
what are called <span 
class="cmti-10">builtins</span>). We will discuss processes in a future lecture.
<!--l. 191--><p class="noindent" >The basic shell operation is as follows. The shell parses the command line and finds the program to
execute. It passes any options and arguments to the program as part of a new process for
the command such as ps above. While the process is running ps above the shell waits for
the process to complete. The shell is in a sleep state. When the program completes it passes
its exit status back to the shell. At this point the shell wakes up and prompts the user for
another command. Note, that it is the program that is executed, for example, ps in this case,
that checks to see if the arguments passed to it by the shell are correct or not. It is not the
job of the shell to do that level of parsing or error checking. If there are problems with the
syntax (e.g., wrong switch) then it is the program itself that informs the user via an error
message.
<!--l. 193--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-10000"></a>A note on shell builtins</h3>
<!--l. 194--><p class="noindent" >The term command and utility are used synonymous in these notes. The shell has a number of utilities
built into the shell called <span 
class="cmti-10">builtins</span>. When a builtin runs the shell does not fork a process; that is, it does not
create a process specifically to execute the command. Therefore, the builtins run more efficiently in the
                                                                                  
                                                                                  
context of the existing process rather than having the cost of creating new processes to run the command.
Typically, users are not aware if a command runs as a builtin or a standard forked command.
The echo command exists as a builtin to the shell and as a separate utility in /bin/echo. As
a rule the shell will always execute a builtin before trying to find a command of the same
name to fork. Bash supports a number of builtins including bg, fg, cd, kill, pwd, read among
others.
<!--l. 196--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-11000"></a>Linux file system</h3>
<!--l. 198--><p class="noindent" >The Linux file system is a <span 
class="cmti-10">hierarchical file system</span>. The file system consists of a very small number of
different file types. These include text files, directories, character special files (e.g., terminals) and block
special files (e.g., disks and tapes).
<!--l. 200--><p class="noindent" >A directory is just a special type of file. A directory (akin to a Macintosh folder) contains the names and
locations of all files and directories below it. A directory always contains two special files &#8217;.&#8217; (dot) and &#8217;..&#8217;
(dot dot). Every file has a filename of up to 1024 characters typically from &#8217;A-Z a-z 0-9 &#x02D9; .&#8217; and an inode
which uniquely identifies the file in the file system.
<!--l. 202--><p class="noindent" >Directory names are separated by a slash &#8217;/&#8217;, forming pathnames.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-10">
/usr/bin/emacs
&#x00A0;<br />/etc/passwd</div>
<!--l. 207--><p class="nopar" >
<!--l. 209--><p class="noindent" >Files are accessed by referring to their relative or absolute pathnames.
<!--l. 211--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-12000"></a>Home directory</h4>
<!--l. 213--><p class="noindent" >Each account has a home directory. After you have logged in your shell will be executing in your home
directory. So let&#8217;s log in and use the <span 
class="cmti-10">pwd </span>command to find out where we are - we will be in the home
directory of course.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-11">
[atc@Macintosh-7&#x00A0;l2]$&#x00A0;ssh&#x00A0;-Y&#x00A0;-l&#x00A0;campbell&#x00A0;spruce.cs.dartmouth.edu
&#x00A0;<br />campbell@spruce.cs.dartmouth.edu&#8217;s&#x00A0;password:
&#x00A0;<br />Last&#x00A0;login:&#x00A0;Mon&#x00A0;Dec&#x00A0;24&#x00A0;11:37:01&#x00A0;2007&#x00A0;from&#x00A0;c-75-69-130-98.hsd1.nh.comcast.net
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 222--><p class="nopar" >
<!--l. 224--><p class="noindent" >Let&#8217;s list the contents of the home directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-12">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;434
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs23
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;48&#x00A0;Dec&#x00A0;22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1368&#x00A0;Dec&#x00A0;24&#x00A0;11:25&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;104&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;12:01&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;4&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;728&#x00A0;Oct&#x00A0;26&#x00A0;&#x00A0;2006&#x00A0;public_html
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;435438&#x00A0;Dec&#x00A0;14&#x00A0;&#x00A0;2006&#x00A0;Sent
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Dec&#x00A0;11&#x00A0;15:14&#x00A0;teaching</div>
<!--l. 238--><p class="nopar" >
<!--l. 240--><p class="noindent" >Recall the &#8220;d&#8221; in &#8220;drwx&#8212;&#8212;&#8221; indicates that this file is in fact a directory. So we can move to that
directory assuming we have the relevant permission - which we do in all cases. So lets move
around.
<!--l. 242--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-13000"></a>File and directory permission</h4>
<!--l. 244--><p class="noindent" >All files and directories have certain access permissions which constrain access to only those users having
the correct permission. Let&#8217;s consider a couple of typical examples from above:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-13">
drwxr--r--&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;128&#x00A0;Dec&#x00A0;24&#x00A0;14:33&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1017&#x00A0;Mar&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;Sent&#x00A0;Messages</div>
<!--l. 251--><p class="nopar" >
<!--l. 253--><p class="noindent" >The first character of the access permissions indicate what &#8220;type of file&#8221; is being displayed.
     <ul class="itemize1">
     <li class="itemize">- plain files (such as C programs or text files)
     </li>
     <li class="itemize">d directories
     </li>
     <li class="itemize">c character special files (such as terminals)
     </li>
     <li class="itemize">b block special files (such as disk drives)</li></ul>
<!--l. 262--><p class="noindent" >Following the first type of file character the next 3 triples (i.e., groups of three characters) from left to
right represent file permissions: the <span 
class="cmti-10">read</span>, <span 
class="cmti-10">write</span>, and <span 
class="cmti-10">execute </span>permissions, for (respectively) the owner
(campbell in this case), the files&#8217;s group (faculty in this case), and the &#8220;rest-of-the-world&#8221;. To determine
that group particular files are in enter the &#8220;ls -lg&#8221; command.
<!--l. 264--><p class="noindent" >What do these permissions mean?
     <ul class="itemize1">
     <li class="itemize"><span 
class="cmti-10">Read </span>permission means that the file may be displayed on the screen, copied to another file or
     printed on the printer - any operation that requires reading the contents of the file. Having
     read permission on a directory means that its contents can be read; for example, ls could
     read the names and attributes of the files in the directory. Could the contents of those files
     be read?
     </li>
     <li class="itemize"><span 
class="cmti-10">Write </span>permission means that the file of directory may be modified, changed or overwritten.
     Most importantly, write permission means that a file may be deleted. Write permission on a
     directory gives permission to delete a file from within a directory.
     </li>
     <li class="itemize"><span 
class="cmti-10">Execute </span>permission on a file indicates that the file may be executed (i.e., run). Since a directory
     cannot be executed its meaning is redefined. Execute permission on a directory means that
     the user can change into that directory (e.g., using cd) and examine files (e.g., using ls) that it
     has permission to read. If it does not have permission to read then permission will be denied
     when using the ls command.</li></ul>
                                                                                  
                                                                                  
<!--l. 272--><p class="noindent" >After the file permission comes the number of links to the file (e.g., 5), followed b the owner (campbell),
group (faculty), size (e.g., 128) which represents the size of the file in bytes, date and time of modification
(e.g., Dec 24 14:33), and the filename (e.g., cs50).
<!--l. 274--><p class="noindent" >Note, that shellscripts (which we will discuss in a future lecture) must have both read and execute
permission - bash or any of the shells must both be able to read the shellscript and execute it. Program
binaries on the other hand do not need to be read and only need execution permission since they are not
read but executed (recall when we tried to more a.out we could not view it because it was an executable in
machine code).
<!--l. 276--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-14000"></a>Changing permission</h4>
<!--l. 278--><p class="noindent" >The permissions on files and directories may be changed with the <span 
class="cmti-10">chmod </span>(change mode) command. When
you own a file or directory you can use chmod to change the access permissions to the file or
directory.
<!--l. 280--><p class="noindent" >Only the three permission triplets may be changed - a directory cannot be changed into a plain file nor
vice-versa.
<!--l. 282--><p class="noindent" >Permissions given to chmod are either absolute or relative (i.e., symbolic).
<!--l. 284--><p class="noindent" >Each triplet is the sum of the octal digits 4, 2, 1, and read from left to right. For example rwx is
represented by 7, rw- by 6, and r&#8211; by 4 and so on. The absolute octal values used with chmod are as
follows:
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">Octal</span><span 
class="cmtt-10">&#x00A0;Value</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Protection</span><span 
class="cmtt-10">&#x00A0;mechanism</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;400</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;200</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;directory)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;owner</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;040</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;020</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;010</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;group</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;004</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Read</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;rest</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;world)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;002</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;(delete)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><span 
class="cmtt-10">&#x00A0;(dangerous!)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;001</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Execute</span><span 
class="cmtt-10">&#x00A0;(search)</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;others</span><br /><br /></div></div>
<!--l. 306--><p class="noindent" >The complete permission on any file is the sum of the values. For example, home directories are typically
700 which provides the owner with read, write, and execute permission but denies all access to
others.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">drwxr-xr-x</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">[campbell@galehead</span><span 
class="cmtt-10">&#x00A0;~]$</span><span 
class="cmtt-10">&#x00A0;chmod</span><span 
class="cmtt-10">&#x00A0;700</span><span 
class="cmtt-10">&#x00A0;cs50</span><br /><span 
class="cmtt-10">...</span><br /><span 
class="cmtt-10">drwx------</span><span 
class="cmtt-10">&#x00A0;6</span><span 
class="cmtt-10">&#x00A0;campbell</span><span 
class="cmtt-10">&#x00A0;faculty</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;152</span><span 
class="cmtt-10">&#x00A0;Dec</span><span 
class="cmtt-10">&#x00A0;31</span><span 
class="cmtt-10">&#x00A0;20:40</span><span 
class="cmtt-10">&#x00A0;cs50</span></div></div>
<!--l. 321--><p class="noindent" >If you wish others to read your files set - in this case a file funny - then the command would
be:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-14">
[campbell@galehead&#x00A0;~]$&#x00A0;chmod&#x00A0;664&#x00A0;funny
&#x00A0;<br />...
&#x00A0;<br />-rw-rw-r--&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;1&#x00A0;15:50&#x00A0;funny</div>
<!--l. 327--><p class="nopar" >
<!--l. 329--><p class="noindent" >Because the file is only to be read, not written too, and the fact that it&#8217;s a file with no execution (not a
binary or shellscript) 644 makes good sense.
<!--l. 331--><p class="noindent" >Use the manual pages to read how chmod can be used in a relative or symbolic mode; for example, what
would
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-15">
[atc@Macintosh-7&#x00A0;notes]$&#x00A0;chmod&#x00A0;u=wrx,og-rwx&#x00A0;cs50</div>
<!--l. 335--><p class="nopar" >
<!--l. 337--><p class="noindent" >These symbolic arguments need to be used carefully. Here &#8220;o&#8221; means others and &#8220;u&#8221; means owner or
user.
<!--l. 339--><p class="noindent" >&#8220;chmod o+wrx cs50&#8221; do?
<!--l. 341--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-15000"></a>Moving around the file system</h4>
<!--l. 343--><p class="noindent" >The change directory command (cd) allows us to move around the Linux directory hierarchy.
Let&#8217;s combine pwd, ls, and cd to move around the my local directories that are rooted at
/net/nusers/campbell
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-16">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;lectures/
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;ls
&#x00A0;<br />bash-programming.tex&#x00A0;&#x00A0;design.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;se.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;start.tex
&#x00A0;<br />c.tex&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;linux-advance.tex&#x00A0;&#x00A0;shell.tex
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 363--><p class="nopar" >
<!--l. 365--><p class="noindent" >There are also a number of special characters that can be used with cd for short hand.
<!--l. 367--><p class="noindent" >Moving to the parent directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-17">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50</div>
<!--l. 373--><p class="nopar" >
<!--l. 375--><p class="noindent" >Moving back to where we came from:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-18">
[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 382--><p class="nopar" >
<!--l. 384--><p class="noindent" >Moving to our home directory:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-19">
[campbell@spruce&#x00A0;lectures]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;~]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell</div>
<!--l. 390--><p class="nopar" >
<!--l. 392--><p class="noindent" >and back:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-20">
[campbell@spruce&#x00A0;~]$&#x00A0;cd&#x00A0;-
&#x00A0;<br />/net/nusers/campbell/cs50/lectures</div>
<!--l. 396--><p class="nopar" >
<!--l. 398--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-16000"></a>Listing and globbing files</h4>
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-21">
campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;0
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 411--><p class="nopar" >
<!--l. 413--><p class="noindent" >Here are a popular set of switches you can use with ls:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-22">
-l list&#x00A0;in&#x00A0;long&#x00A0;format&#x00A0;(as&#x00A0;above)
&#x00A0;<br />-t sort&#x00A0;by&#x00A0;modification&#x00A0;time&#x00A0;(latest&#x00A0;first)
&#x00A0;<br />-a list&#x00A0;all&#x00A0;entries&#x00A0;(including&#x00A0;&#8217;dot&#8217;&#x00A0;files)
&#x00A0;<br />-r list&#x00A0;in&#x00A0;reverse&#x00A0;order&#x00A0;(alphabetical&#x00A0;or&#x00A0;time)
&#x00A0;<br />-R list&#x00A0;the&#x00A0;directory&#x00A0;and&#x00A0;its&#x00A0;subdirectories&#x00A0;recursively</div>
<!--l. 421--><p class="nopar" >
<!--l. 423--><p class="noindent" >We can use a number of special characters to look at the files in a smart and efficient manner:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-23">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 431--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-24">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*s*
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$</div>
<!--l. 441--><p class="nopar" >
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-25">
[campbell@spruce&#x00A0;lectures]$&#x00A0;ls&#x00A0;-l&#x00A0;*.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;bash-programming.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;c.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;design.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:22&#x00A0;linux-advance.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:23&#x00A0;se.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;shell.tex
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;0&#x00A0;Dec&#x00A0;24&#x00A0;12:21&#x00A0;start.tex
&#x00A0;<br />[campbell@spruce&#x00A0;lectures]$
&#x00A0;<br /></div>
<!--l. 454--><p class="nopar" >
<!--l. 456--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-17000"></a>Some cool tricks - an example</h4>
<!--l. 458--><p class="noindent" >If I wanted to list just the directories or just plain files (i.e., non directory files) in a directory how would I
do that? Use ls, right. Sorry, ls does not have an option to list only directories or just plain files. But we
can use a combination of commands to do this!
<!--l. 462--><p class="noindent" >We can write our own commands to do this job - we can use a combination of ls and grep to list directory
names only or plain file names only.
<!--l. 465--><p class="noindent" >First let&#8217;s just list all the files in the home directory - it includes one plain file and the rest are
directories.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-26">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;cd&#x00A0;~
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 483--><p class="nopar" >
<!--l. 485--><p class="noindent" >Now we use a combination of ls and grep and the pipe command. More on this is in a later lecture but
now we begin to see the power of the shell.
<!--l. 488--><p class="noindent" >Let&#8217;s just list plain files:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-27">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;-v&#x00A0;^d
&#x00A0;<br />total&#x00A0;40
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;2010-01-04&#x00A0;21:43&#x00A0;plainfile
&#x00A0;<br /></div>
<!--l. 496--><p class="nopar" >
<!--l. 498--><p class="noindent" >Now, let&#8217;s use a modification on the above to just list directories:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-28">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-l&#x00A0;|&#x00A0;grep&#x00A0;^d
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:29&#x00A0;bin
&#x00A0;<br />drwx------&#x00A0;15&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2010-01-03&#x00A0;21:16&#x00A0;cs50
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2008-05-11&#x00A0;15:18&#x00A0;cs60
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-22&#x00A0;15:30&#x00A0;lib
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-12-29&#x00A0;08:12&#x00A0;mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-06-23&#x00A0;02:43&#x00A0;Mail
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-24&#x00A0;23:23&#x00A0;papers
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;6&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;4096&#x00A0;2009-12-02&#x00A0;12:41&#x00A0;public_html
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2007-12-11&#x00A0;15:14&#x00A0;teaching
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;4096&#x00A0;2009-04-08&#x00A0;09:48&#x00A0;trash
&#x00A0;<br /></div>
<!--l. 513--><p class="nopar" >
<!--l. 515--><p class="noindent" >If you don&#8217;t know any of the above swicthes then use the man command. We can also use the -F switch to
show which file is a directory or not. Check it out.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-29">
[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-lF
&#x00A0;<br />total&#x00A0;140
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;bin/
&#x00A0;<br />drwx------&#x00A0;31&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;16&#x00A0;&#x00A0;2013&#x00A0;cs50/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;5&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Apr&#x00A0;19&#x00A0;&#x00A0;2012&#x00A0;cs60/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;532&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Drafts
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;22&#x00A0;&#x00A0;2007&#x00A0;lib/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;May&#x00A0;19&#x00A0;&#x00A0;2013&#x00A0;mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jun&#x00A0;23&#x00A0;&#x00A0;2009&#x00A0;Mail/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;2&#x00A0;&#x00A0;2012&#x00A0;misc/
&#x00A0;<br />-rwxrwxrwx&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:32&#x00A0;myls*
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;24&#x00A0;&#x00A0;2007&#x00A0;papers/
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;8&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;12288&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;16:55&#x00A0;public_html/
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;81979&#x00A0;Jun&#x00A0;22&#x00A0;&#x00A0;2011&#x00A0;Sent&#x00A0;Messages
&#x00A0;<br />drwx------&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Jan&#x00A0;&#x00A0;8&#x00A0;10:55&#x00A0;solutions/
&#x00A0;<br />drwx------&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;4096&#x00A0;Dec&#x00A0;11&#x00A0;&#x00A0;2007&#x00A0;teaching/
&#x00A0;<br /></div>
<!--l. 535--><p class="nopar" >
<!--l. 537--><p class="noindent" >It is handy to be able to list just the directories when moving around the file system. So we&#8217;ll add these
commands to our bash files in the next lecture - we&#8217;ll create aliases of these commands so we can use them
any time.
<!--l. 541--><p class="noindent" >We&#8217;ll there is a ls option to list directories and indeed there are many ways to do this; for
example:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-30">
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;ls&#x00A0;-d&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;&#x00A0;cs50/&#x00A0;&#x00A0;cs60/&#x00A0;&#x00A0;lib/&#x00A0;&#x00A0;mail/&#x00A0;&#x00A0;Mail/&#x00A0;&#x00A0;papers/&#x00A0;&#x00A0;public_html/&#x00A0;&#x00A0;teaching/&#x00A0;&#x00A0;trash/
&#x00A0;<br />
&#x00A0;<br />[campbell@bear&#x00A0;~]$&#x00A0;echo&#x00A0;*/
&#x00A0;<br />bin/&#x00A0;cs50/&#x00A0;cs60/&#x00A0;lib/&#x00A0;mail/&#x00A0;Mail/&#x00A0;papers/&#x00A0;public_html/&#x00A0;teaching/&#x00A0;trash/
&#x00A0;<br /></div>
<!--l. 551--><p class="nopar" >
<!--l. 553--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-18000"></a>Creating and deleting directories and files</h4>
<!--l. 555--><p class="noindent" >In the following sequence we will create a new directory, create two new files (using touch), move one file
to another directory, delete the other file and remove the directory.
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-31">
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;pwd
&#x00A0;<br />/net/nusers/campbell/cs50
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;mkdir&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;cd&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;touch&#x00A0;socket.c&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />socket.c&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;transport.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;mv&#x00A0;transport.c&#x00A0;~/.
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;alias&#x00A0;rm
&#x00A0;<br />alias&#x00A0;rm=&#8217;rm&#x00A0;-i&#8217;
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;alias&#x00A0;rm=rm
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;socket.c
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;ls
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;project]$&#x00A0;cd&#x00A0;..
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;ls
&#x00A0;<br />assignments&#x00A0;&#x00A0;code&#x00A0;&#x00A0;lectures&#x00A0;&#x00A0;project
&#x00A0;<br />
&#x00A0;<br />[campbell@spruce&#x00A0;cs50]$&#x00A0;rmdir&#x00A0;project</div>
<!--l. 588--><p class="nopar" >
<!--l. 590--><p class="noindent" >In the sequence above we reset the <span 
class="cmti-10">alias </span>for rm which is set up in .bashrc. When you use the &#8220;rm -i&#8221;
option the shell will ask you to confirm if you really want to delete files. This is worth doing by setting up
the alias in your .bashrc file. It is easy to type &#8220;rm&#8221; and accidently delete files. Therefore, the &#8220;-i&#8221;
(interactive) option is a life saver. For example,
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-32">
[campbell@spruce&#x00A0;project]$&#x00A0;rm&#x00A0;-i&#x00A0;socket.c
&#x00A0;<br />rm:&#x00A0;remove&#x00A0;regular&#x00A0;empty&#x00A0;file&#x00A0;&#8216;socket.c&#8217;?&#x00A0;y</div>
<!--l. 595--><p class="nopar" >
<!--l. 597--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-19000"></a>Hidden files</h4>
<!--l. 599--><p class="noindent" >In the home directory there are a number of interesting &#8220;hidden&#8221; files. Using the &#8220;-a&#8221; lists all files
including those that begin with a dot (aka the hidden files).
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-33">
[campbell@spruce&#x00A0;~]$&#x00A0;ls&#x00A0;-al
&#x00A0;<br />total&#x00A0;899
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;21&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1448&#x00A0;Dec&#x00A0;24&#x00A0;14:58&#x00A0;.
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;25&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;root&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;624&#x00A0;May&#x00A0;31&#x00A0;&#x00A0;2007&#x00A0;..
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;0&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;2285&#x00A0;Dec&#x00A0;23&#x00A0;18:45&#x00A0;.addressbook.lu
&#x00A0;<br />drwxr-xr-x&#x00A0;&#x00A0;&#x00A0;3&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;72&#x00A0;Nov&#x00A0;&#x00A0;6&#x00A0;22:57&#x00A0;.adobe
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;4978&#x00A0;Dec&#x00A0;24&#x00A0;13:39&#x00A0;.bash_history
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;ug&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;&#x00A0;882&#x00A0;Jun&#x00A0;24&#x00A0;&#x00A0;1997&#x00A0;.bash_logout
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1707&#x00A0;Dec&#x00A0;22&#x00A0;18:52&#x00A0;.bash_profile
&#x00A0;<br />-rw-r--r--&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;1411&#x00A0;Dec&#x00A0;22&#x00A0;19:18&#x00A0;.bashrc
&#x00A0;<br />...&#x00A0;(snip)
&#x00A0;<br />-rw-------&#x00A0;&#x00A0;&#x00A0;1&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;864&#x00A0;Dec&#x00A0;23&#x00A0;22:42&#x00A0;.Xauthority
&#x00A0;<br />drwx------&#x00A0;&#x00A0;&#x00A0;2&#x00A0;campbell&#x00A0;faculty&#x00A0;&#x00A0;&#x00A0;&#x00A0;136&#x00A0;Nov&#x00A0;&#x00A0;5&#x00A0;21:04&#x00A0;.xemacs</div>
<!--l. 616--><p class="nopar" >
<!--l. 618--><p class="noindent" >But a simple ls will only show:
                                                                                  
                                                                                  
<div class="verbatim" id="verbatim-34">
[campbell@spruce&#x00A0;~]$&#x00A0;ls
&#x00A0;<br />bin&#x00A0;&#x00A0;cs50&#x00A0;&#x00A0;lib&#x00A0;&#x00A0;mail&#x00A0;&#x00A0;papers&#x00A0;&#x00A0;public_html&#x00A0;&#x00A0;Sent&#x00A0;&#x00A0;Sent&#x00A0;Messages&#x00A0;&#x00A0;teaching</div>
<!--l. 623--><p class="nopar" >
<!--l. 625--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-20000"></a>Reading material for the next class</h3>
<!--l. 627--><p class="noindent" >Make sure you do the <a 
href="http://www.cs.dartmouth.edu/~campbell/c50/reading.html" > reading for the next class </a>Typically we have reading for Wednesday and Friday
classes.
 
</body></html> 

                                                                                  



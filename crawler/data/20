http://www.cs.dartmouth.edu/~campbell/cs50/artofdebug.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.tug.org/tex4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.tug.org/tex4ht/)"> 
<!-- html --> 
<meta name="src" content="artofdebug.tex"> 
<meta name="date" content="2015-05-05 21:32:00"> 
<link rel="stylesheet" type="text/css" href="artofdebug.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 16</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>The Art of Debugging</h1>
<!--l. 21--><p class="noindent" >In the this lecture, we will carry on our discussion on the art of debugging.
<!--l. 23--><p class="noindent" >The development of good code usually follows the design methodology we have discussed in class: first you
understand the customers needs and captures these in the requirements of the system; then the system
design starts. The design spec. and implementation spec follow capturing the data flow, IO, important
data structure and algorithm design and finally the pseudo code for the system. After all that: which I
typically think of as the thinking about the problem and using abstraction (data structure design), comes
the coding phase. Once you have written code you need to test it. Yes, I know this is boring! But
unit testing, sub-system testing, system testing and finally integration testing are a really
important part of the life cycle of good software development. There is a tension to consider when
testing - you want a set of tools that help you quickly find the bugs, but you don&#8217;t want to
feel this is some sort of worthless tax strategy imposed by the company you work for to get
code out of the door to the customer. So once you have coded your functions, units, modules,
sub-system you need to test it and find the bugs - they will exist! Once you have a tested
system and your system fails - maybe a bug not uncovered during testing - then you need to
debug. In fact solving problems found while testing also requires a set of debugging tools and
strategies.
<!--l. 25--><p class="noindent" >In the next lecture we will discuss testing and in this one we discuss the tools and strategies you need to
debug and make your code bug free - or your money back. <span 
class="cmbx-10">The great computer scientist Edsger</span>
<span 
class="cmbx-10">Dijkstra once said that testing can demonstrate the presence of bugs but not their absence.</span>
We will come back to that in the next lecture. To some degree design, testing, and debugging - in my
opinion - are not so stepwise in terms of a known formula as professed by many of the software engineering
books - they require some experience, nose, detective work; there is indeed an art to design, testing, and
debugging.
<!--l. 27--><p class="noindent" >In this lecture on debugging we draw from &#8220;Linux Programming&#8221; by Matthew and Stones in terms of the
material and coding examples from their chapter on debugging. References and pointers to these books
can be found on the course webpage.
<!--l. 29--><p class="noindent" ><span 
class="cmbx-10">Finally, at the end of the notes we reiterate our approach to tracking down tricky bugs.</span>
<span 
class="cmbx-10">Make sure you read that section closely. BTW, you can skip these notes and lecture if you</span>
<span 
class="cmbx-10">write bug free code ;-)</span>
                                                                                  
                                                                                  
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 33--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">Technques for limiting bugs
     </li>
     <li class="itemize">C can be harmful to your health
     </li>
     <li class="itemize">Debugging: all I need is printf, right?
     </li>
     <li class="itemize">Types of errors
     </li>
     <li class="itemize">General debugging techniques
     </li>
     <li class="itemize">Tools: cflow, gprof, valgrind, gdb
     </li>
     <li class="itemize">Debugging the buggy_sort.c code</li></ul>
<!--l. 45--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>Technques for limit those pesky bugs</h3>
<!--l. 47--><p class="noindent" >Up until now you have probably being relying on simple debug skills: using printf. But as the number of
lines in your code grows, indeed at this point, the number of files in the systems you are coding, then
printf while helpful is not effective enough. For example, a printf placed in your code may work but the
segment fault that occurs 50 lines after your printf stops the printf from finally writing out that &#8220;I
HERE AM AT LINE 100&#8221; message to the screen. So you natrually think that the bug must be
before line 100 but it&#8217;s at line 150. So printf is not your friend in this example, rather it&#8217;s a red
herring.
<!--l. 49--><p class="noindent" >Debugging code is an essential part of the design and implementation methodology we discussed earlier.
Many problems can arise when coding. Bugs can be simple: array script error are sometime difficult to
debug: the systems runs for days and then fails, say, because of a memory leak or buffer overflow problem.
Programmer aim to understand the nature of the bug they are trying to swat: is it predicatble, does it
always fail under the same set of conditions, and so on. These are clues that help track down those
pesky bugs in complex systems. To some degree being a good deugger of code C comes with
experience.
<!--l. 53--><p class="noindent" >By now you are use to bus errors, segfaults, and seeing files such as core dumps in your directory when
you run your program and it fails. We will use the <span 
class="cmbx-10">GNU debugger (gdb) </span>to help solve these
problems. Through a set of examples we will show how to debug problems in a systematic
                                                                                  
                                                                                  
manner. But first let&#8217;s dicuss why bugs occur and what technques other than running gdb
help.
<!--l. 55--><p class="noindent" >The complexity of a program is related to the number of interacting components; for example, the
crawler interacts with an external and distribued wget() command. There is a line of thought
that says as a rule of thumb the number of pseky bug grows with the number of interactions.
Reducing the complexity and interactions enables us to focus in on the location of bugs in
code.
<!--l. 57--><p class="noindent" >Dubgging problems ranges from easy, moderate through down right super hard. Techniques that help
reduce degugging time include:
     <ul class="itemize1">
     <li class="itemize">a good design and design methodology;
     </li>
     <li class="itemize">consistent style (e.g., use C program idioms as much as possible);
     </li>
     <li class="itemize">boundary condition tests;
     </li>
     <li class="itemize">assertions and sanity testing;
     </li>
     <li class="itemize">defensive programming;
     </li>
     <li class="itemize">avoid files that have a large number of functions and functions that have a large number of
     lines;
     </li>
     <li class="itemize">limit global data; and use
     </li>
     <li class="itemize">checking tools.</li></ul>
<!--l. 71--><p class="noindent" >We will discuss these techniques in this lecture. First a work on C.
<!--l. 73--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>C can be harmful to your health</h3>
<!--l. 75--><p class="noindent" >The C programming language can be dangerous to code with if you are not familiar with the dangers; for
example: C does not support array subscript checking so it is easy to write and read at locations beyond
the end of an array that you have defined. So be ware of this when you access arrays using variables,
particularly, in loops (e.g., x = array[i] where the length of the array is 20 but i = 21). Pointers can be
dangerous too - very danferous. You know that already. For example, not initialising a pointer and then
                                                                                  
                                                                                  
trying to access elements of a structure or memory pointed to by the unitialized pointer is playing fire.
There are many other possible scenarios. There is no garbage collection in C. So if you malloc() without
free() you will have a memory leak which might cause your program to fail or not, or fail
sometimes. There are tools for determining if there are memory leaks such as valgrind that we will
use.
<!--l. 81--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a>Debugging: all I need is printf, right?</h3>
<!--l. 83--><p class="noindent" >Up until now you have been using mostly <span 
class="cmbx-10">prinft() </span>to help you debug your code. Printf can only get you
so far. Many different types of errors or bugs can exist in software. For example, you may have bug free
code but the performance of the system woeful. How do you find performance errors in your code - could
it be the choice of data structure is too &#8220;slow&#8221; or the structure of your code? What happens if you code
looks error free but you have memory leaks? Printf will not help. What if you have a &#8220;seg fault&#8221; which you
have all experienced that occurs after your printf (which lets say is executed) but never gets
printed out because the process seg faults, as discussed above. What happens if your system
runs for hours and under a certain set of system conditions the code fails. Working your way
through 1000s of printf statements may not help. When a bug is buried deep in the execution of
your software you need sophisticated tools to track those down. Printf will not help much.
This lecture talks about tools to help with performance issues, memory leaks and difficult
bugs.
<!--l. 85--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a>Types of Errors</h3>
<!--l. 87--><p class="noindent" >The major groups of errors found in system development are requirement spec, design spec and coding
errors. In what follows, we discuss these common types of errors found in systems.
<!--l. 89--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-9000"></a>Requirement Spec Errors</h4>
<!--l. 90--><p class="noindent" >Many times errors creep into system development because of some misunderstanding between what the
customer wants and what the developers deliver. These &#8220;errors&#8221; in the requirement phase are very costly
and typically some form of requirement analysis may catch them but your very best programmer has little
chance of discovering these types of errors in the software life-cycle. That is right even your very best
programmers will write the wrong code. Requirement reviews can also help here. But it is important to try
and identify what the systems requirements are asking the designers to do and if that is indeed what the
customer wants.
                                                                                  
                                                                                  
<!--l. 97--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-10000"></a>Design Spec Errors</h4>
<!--l. 99--><p class="noindent" >Assuming that the Requirement Spec is good the next set of errors occur in the design phase. In terms of
our methodology errors would be reflected in the Design Spec. Do not sit down and start
coding once you understand the requirements; think, abstract and write the Design Spec.
You need to understand the data flow, IO, data structures, functional decomposition, pseudo
code and algorithms before you write a line of code. If errors creep in the design stage; for
example, if the code is to design a search on a large volume of data the data structures which
look functionally correct may imped performance - maybe a hash table would be the best
choice. This issue relates to <span 
class="cmbx-10">performance errors</span>. Many types of design errors can occur and
misunderstandings between software engineers in the design phase can be helped with writing good
clear specs that people read and discuss in detail in design reviews before a line of code is
written.
<!--l. 104--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-11000"></a>Coding Errors</h4>
<!--l. 106--><p class="noindent" >The main error people associate with software is coding errors. We all make coding errors. Having a solid
Design Spec to work from that has gone through a rigorous review helps. Translating that spec to an
Implementation Spec that we have discussed in this course is the next step. Once code is written and unit
tested (we will discuss this in the next lecture) then &#8220;desk checking&#8221; your code is your best friend - more
on coding inspection below. <span 
class="cmbx-10">Hacking at the terminal in the hope of digging the error out should</span>
<span 
class="cmbx-10">not be the next step - first read your code and convince yourself it works</span>. Make believe that
you are the computer executing the code line by line - update the data structures just like your
code. Study the IO in your code as you execute it. You will find many errors this way. Even
better ask another person working in the project but not familiar with your code to desk check
your code. Sometimes errors can be staring you in the face and a fresh set of eyes can pick
those pesky bugs out. <span 
class="cmbx-10">The take home is that you do not need a computer to find</span>
<span 
class="cmbx-10">bugs</span>.
<!--l. 108--><p class="noindent" >Clearly computers do help and tools can help enormously to track down difficult bugs. Using the compiler
with strong flags can help by just running gcc. In this class, we have used: &#8220;gcc -Wall -pedantic
-std=c99&#8221; which is a good start. <span 
class="cmbx-10">Never execute code that give you warnings - fix the</span>
<span 
class="cmbx-10">code</span>.
<!--l. 111--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-12000"></a>General Debugging Techniques</h3>
                                                                                  
                                                                                  
<!--l. 113--><p class="noindent" >When tracking down pesky bugs we can think of the following steps to finding them:
     <ul class="itemize1">
     <li class="itemize">Testing: Finding out what bugs exist. We have already designed some simple test scripts for
     the crawler.
     </li>
     <li class="itemize">Stabilization: Try and make the bugs reproducible (what condition causes a particular bug
     and is it repeatable).
     </li>
     <li class="itemize">Localization: Identify the function, line of the code responsible.
     </li>
     <li class="itemize">Correction: Fix the code.
     </li>
     <li class="itemize">Verification: Test the code fix and confirm it works.</li></ul>
<!--l. 122--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-13000"></a>Code Inspections</h3>
<!--l. 124--><p class="noindent" >Many times people rush and &#8220;hack&#8221; the debug phase and sit and the terminal hoping to eventually track
down that bug via trail and error. Most people do this as their first resort. You will find this approach can
be successful but can be very time consuming - read take longer than other techniques. One of the most
effective debug tools is you! Stop and read your code. Pretend you are a computer and execute the code
with a pen and paper. Code inspection is very useful. Programmers closely trace through their
code in detail. Look for boundary problems in code, many times bugs exist at the boundaries
- of structures, arrays, code (e.g., for loops). Many difficult bugs require more power than
just hacking and hoping. Once you have read your code and convinced yourself it works then
assuming bugs lurk you need to instrument your code and start the detective work. Read
on.
<!--l. 126--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-14000"></a>Instrumentation</h3>
<!--l. 128--><p class="noindent" >It is a smart idea to use conditional &#8220;#ifdef&#8221; to include debug code. This can be switched on using by
defining a variable in the command line of the compiler. The &#8220;-D&#8221; option of the gcc compiler
allows us to define a named value (e.g., DEBUG below). Using conditional definitions to print
out important data structures or where in the code that an assert happens is very useful.
In addition, a single switch such as -DDEBUG can &#8220;turn on&#8221; all the test code in a system.
This is better than defining a global variable to do the same thing because in the case of
conditional debug flags the test code can be turned off and is not included in the binary. Make
                                                                                  
                                                                                  
sure you turn off the test code before the code is shipped, e.g., make debug becomes make
release.
<!--l. 130--><p class="noindent" >Please go over the buggy sort function. It illustratse a number of approaches to debugging <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/gdb.html" > buggy sort.c
</a>.
<!--l. 132--><p class="noindent" ><span 
class="cmbx-10">Note, in the code below it states: mygcc -g -o bug -DDEBUG buggy</span><span 
class="cmbx-10">_sort1.c. Note that -g</span>
<span 
class="cmbx-10">and -ggdb are mostly equivalent flags. There may be some differences between</span>
<span 
class="cmbx-10">machines.</span>
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">\\</span><span 
class="cmtt-10">&#x00A0;snippet</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;buggy_sort1.c</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main()</span><br /><span 
class="cmtt-10">{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;include</span><span 
class="cmtt-10">&#x00A0;some</span><span 
class="cmtt-10">&#x00A0;conditionally</span><span 
class="cmtt-10">&#x00A0;compiles</span><span 
class="cmtt-10">&#x00A0;debug</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;out</span><span 
class="cmtt-10">&#x00A0;important</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structures</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Note</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;ifdefs</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;compile</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;flag</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;DEBUG</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;mygcc</span><span 
class="cmtt-10">&#x00A0;-g</span><span 
class="cmtt-10">&#x00A0;-o</span><span 
class="cmtt-10">&#x00A0;bug</span><span 
class="cmtt-10">&#x00A0;-DDEBUG</span><span 
class="cmtt-10">&#x00A0;buggy_sort1.c</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Note</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;-g</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-ggdb</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;mostly</span><span 
class="cmtt-10">&#x00A0;equivalent</span><span 
class="cmtt-10">&#x00A0;flags.</span><span 
class="cmtt-10">&#x00A0;There</span><span 
class="cmtt-10">&#x00A0;may</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;some</span><span 
class="cmtt-10">&#x00A0;differences</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;machines.</span><br /><br /><br /><span 
class="cmtt-10">#ifdef</span><span 
class="cmtt-10">&#x00A0;DEBUG</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Test</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Bubble</span><span 
class="cmtt-10">&#x00A0;Sort</span><span 
class="cmtt-10">&#x00A0;(bad</span><span 
class="cmtt-10">&#x00A0;code)</span><span 
class="cmtt-10">&#x00A0;Compiled:</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;__DATE__</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;__TIME__</span><span 
class="cmtt-10">&#x00A0;"\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;%s\n",</span><span 
class="cmtt-10">&#x00A0;__LINE__,</span><span 
class="cmtt-10">&#x00A0;__FILE__);</span><br /><span 
class="cmtt-10">#endif</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;5;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("TEST:</span><span 
class="cmtt-10">&#x00A0;Before</span><span 
class="cmtt-10">&#x00A0;sort</span><span 
class="cmtt-10">&#x00A0;array[%d]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{%s,</span><span 
class="cmtt-10">&#x00A0;%d}\n",</span><span 
class="cmtt-10">&#x00A0;i,</span><span 
class="cmtt-10">&#x00A0;array[i].data,</span><span 
class="cmtt-10">&#x00A0;array[i].key);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sort(array,5);</span><br /><br /><span 
class="cmtt-10">#ifdef</span><span 
class="cmtt-10">&#x00A0;DEBUG</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;5;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br />        <span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("TEST:</span><span 
class="cmtt-10">&#x00A0;After</span><span 
class="cmtt-10">&#x00A0;sort</span><span 
class="cmtt-10">&#x00A0;array[%d]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{%s,</span><span 
class="cmtt-10">&#x00A0;%d}\n",</span><span 
class="cmtt-10">&#x00A0;i,</span><span 
class="cmtt-10">&#x00A0;array[i].data,</span><span 
class="cmtt-10">&#x00A0;array[i].key);</span><br /><span 
class="cmtt-10">#endif</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(0);</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 173--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-15000"></a>The cflow Tool</h3>
<!--l. 175--><p class="noindent" >The <span 
class="cmti-10">cflow </span>tool prints a function call tree showing which functions call which others. This is very helpful to
see the structure of the code and to see how it operates. The tool essentially analyses the source files and
builds a graph from the code.
<!--l. 177--><p class="noindent" >Suppose you are given someones source code and want to get a handle on the decomposition of the code.
What functions are used? What is the calling order? cflow is the pefect tool.
<!--l. 181--><p class="noindent" >Consider the following code. The main function calls a function called whoami that prints out the user&#8217;s
name. It is very simple. We can run GNU cflow to analyzes the source code. In fact cflow can analyze
many source files all at once. It prints a graph, charting control flow within the program. cflow can
produce direct and inverted flowgraphs.
<!--l. 183--><p class="noindent" >Let&#8217;s consider <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/whoami.c" > whoami.c </a>.
<!--l. 185--><p class="noindent" >By just using the cflow command with the source file the output is direct graphs, displaying callercallee
dependencies.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">cflow</span><span 
class="cmtt-10">&#x00A0;whoami.c</span><br /><br /><span 
class="cmtt-10">main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fprintf()</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;getpwuid()</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;geteuid()</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;getenv()</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fprintf()</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf()</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 210--><p class="noindent" >You can also create a reverse graph, charts calleecaller dependencies by running cflow with &#8211;reverse (-r)
command line option as shown below. This time the function is listed and all the places in the source that
call it.
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">cflow</span><span 
class="cmtt-10">&#x00A0;-r</span><span 
class="cmtt-10">&#x00A0;whoami.c</span><br /><span 
class="cmtt-10">fprintf():</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">getenv():</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">geteuid():</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">getpwuid():</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">printf():</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><br /></div></div>
<!--l. 245--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-16000"></a>The gprof Tool</h3>
<!--l. 247--><p class="noindent" >The <span 
class="cmti-10">gprof </span>tool is use to profile the runtime performance code. Many times you might be confident that
the code is bug free because there are no functional problems. However, the code could be worthless if it
does not meet its performance requirements. The gprof tool is an execution profiling tool that is useful
                                                                                  
                                                                                  
when tracking down performance problems.
<!--l. 249--><p class="noindent" ><span 
class="cmbx-10">Warning</span>. Don&#8217;t try and use gprof on your mac. It has problems with Intel archiecture. Log on to a
machine in the lab to try it out.
<!--l. 251--><p class="noindent" ><span 
class="cmbx-10">Anecdotal evidence</span>. Many time programmers focus on getting the code to work functionally and then
think about speed up. This is not always the most productive approach to design or systems development.
Best to design for speed if needed (e.g., use a hash table instead of searching a long double linked list).
I recall once working as a consultant on improving the performance of a radio router. The
performance of the system coded in Ada was appalling and someone&#8217;s head was about to
roll. I spend probably two weeks just studying the code of a very large system - difficult to
keep that all in your head. Profiling the code highlighted the cost of a system that had been
desig/Users/atc/teaching/cs50/notes/s5/lab5/srcned and coded with excessive number of tasks and
rendezvous. The cost of interprocess communications was high. What did I do? It was not nice. Turned
the system into one large task and replaced all interprocess communications (IPC) (which represented
system calls) with my library that implemented the IPC API. I changes couple 100 lines of
code in a system of 20,000 lines of code. The improvement was massive. Packets could be
forwarding from one radio input to the output radio in under 100 msec which was down from 1
second! I was king for the day, or week. I made my changes, tested them locally, desk checked
the code closely - and, it ran first time! The guy who designed the system wanted me to fail
- I could feel it. But when that router ran first time. Well that is a moment I will always
remember. My reward? I got to design the next system. The problem was essentially a performance
bug. The changes was simple once the problem was identified. I took a very radical approach
that ran against OO design. But that is what was needed. The router forwarded packets a 1
second intervals was not going to fly with the customer. And, yes, I saved the day and it was
fun.
<!--l. 253--><p class="noindent" ><span 
class="cmbx-10">Note to instructor: use lab4 solution in cs50/l16/lab4 as example code</span>
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">To</span><span 
class="cmtt-10">&#x00A0;run</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;gprof</span><span 
class="cmtt-10">&#x00A0;first</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;-pg&#8217;&#8217;</span><span 
class="cmtt-10">&#x00A0;switch</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;flags</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;compiler</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;Makefile</span><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;make</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;build</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;crawler.</span><br /><br /><span 
class="cmtt-10">CC=gcc</span><br /><span 
class="cmtt-10">CFLAGS=-Wall</span><span 
class="cmtt-10">&#x00A0;-pg</span><span 
class="cmtt-10">&#x00A0;-pedantic</span><span 
class="cmtt-10">&#x00A0;-std=c99</span><br /><span 
class="cmtt-10">SOURCES=./list.h</span><span 
class="cmtt-10">&#x00A0;./list.c</span><span 
class="cmtt-10">&#x00A0;./crawler.c</span><span 
class="cmtt-10">&#x00A0;../util/hash.c</span><span 
class="cmtt-10">&#x00A0;../util/html.c</span><br /><br /><span 
class="cmtt-10">Once</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;done</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;build</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;-pg&#8217;&#8217;</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;run</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;application</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;crawler</span><br /><br /><span 
class="cmtt-10">pwd</span><br /><span 
class="cmtt-10">/net/nusers/campbell/cs50/l16/lab4/src/crawler</span><br /><br /><br /><span 
class="cmtt-10">./crawler</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><span 
class="cmtt-10">&#x00A0;../../data/</span><span 
class="cmtt-10">&#x00A0;2</span><br /><br /><span 
class="cmtt-10">Now</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;ready</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;run</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;gprof</span><span 
class="cmtt-10">&#x00A0;tool:</span><br /><br /><span 
class="cmtt-10">gprof</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;gmon.out</span><span 
class="cmtt-10">&#x00A0;&#x003E;</span><span 
class="cmtt-10">&#x00A0;profile</span><br /><br /></div></div>
<!--l. 285--><p class="noindent" >The output of the profile is below:
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><span 
class="cmtt-10">Flat</span><span 
class="cmtt-10">&#x00A0;profile:</span><br /><br /><span 
class="cmtt-10">Each</span><span 
class="cmtt-10">&#x00A0;sample</span><span 
class="cmtt-10">&#x00A0;counts</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;0.01</span><span 
class="cmtt-10">&#x00A0;seconds.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;%</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;cumulative</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;self</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;self</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;total</span><br /><span 
class="cmtt-10">&#x00A0;time</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;seconds</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;seconds</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;calls</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;us/call</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;us/call</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;name</span><br /><span 
class="cmtt-10">&#x00A0;28.57</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.02</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.02</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;5517</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;3.63</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;7.25</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;GetNextURL</span><br /><span 
class="cmtt-10">&#x00A0;28.57</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.04</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.02</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1023</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;19.55</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;19.55</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;getAddressFromTheLinksToBeVisited</span><br /><span 
class="cmtt-10">&#x00A0;28.57</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.06</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.02</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;194</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;103.09</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;103.09</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;removeWhiteSpace</span><br /><span 
class="cmtt-10">&#x00A0;14.29</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.01</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;5053</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1.98</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1.98</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;NormalizeURL</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;7703</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hash1</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;7703</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;make_hash</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;3674</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;GetDataWithKey</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2650</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;addElement</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1023</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DAdd</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1023</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1.98</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;setURLasVisited</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;213</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;getPage</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;194</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ReadFileToMemoryOrDie</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;194</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;206.19</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;extractURLs</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;194</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;file_length</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;194</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;41.11</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;updateListLinkToBeVisited</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;CleanDictionary</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;InitDictionary</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;IsDirectory</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;cleanup</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;initList</span><br /><br /><br /><span 
class="cmtt-10">&#x00A0;\%</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;percentage</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;running</span><span 
class="cmtt-10">&#x00A0;time</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">time</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;used</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function.</span><br /><br /><span 
class="cmtt-10">cumulative</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;running</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;seconds</span><span 
class="cmtt-10">&#x00A0;accounted</span><br /><span 
class="cmtt-10">&#x00A0;seconds</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;those</span><span 
class="cmtt-10">&#x00A0;listed</span><span 
class="cmtt-10">&#x00A0;above</span><span 
class="cmtt-10">&#x00A0;it.</span><br /><br /><span 
class="cmtt-10">&#x00A0;self</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;seconds</span><span 
class="cmtt-10">&#x00A0;accounted</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;this</span><br /><span 
class="cmtt-10">seconds</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;alone.</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;major</span><span 
class="cmtt-10">&#x00A0;sort</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;this</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;listing.</span><br /><br /><span 
class="cmtt-10">calls</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;times</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;was</span><span 
class="cmtt-10">&#x00A0;invoked,</span><span 
class="cmtt-10">&#x00A0;if</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;profiled,</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;blank.</span><br /><br /><span 
class="cmtt-10">&#x00A0;self</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;average</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;milliseconds</span><span 
class="cmtt-10">&#x00A0;spent</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><br /><span 
class="cmtt-10">ms/call</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;per</span><span 
class="cmtt-10">&#x00A0;call,</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;profiled,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;blank.</span><br /><br /><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;average</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;milliseconds</span><span 
class="cmtt-10">&#x00A0;spent</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><br /><span 
class="cmtt-10">ms/call</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;descendents</span><span 
class="cmtt-10">&#x00A0;per</span><span 
class="cmtt-10">&#x00A0;call,</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;this</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;profiled,</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;blank.</span><br /><br /><span 
class="cmtt-10">name</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;function.</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;minor</span><span 
class="cmtt-10">&#x00A0;sort</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;listing.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;index</span><span 
class="cmtt-10">&#x00A0;shows</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;location</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;gprof</span><span 
class="cmtt-10">&#x00A0;listing.</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;index</span><span 
class="cmtt-10">&#x00A0;is</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;parenthesis</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;shows</span><span 
class="cmtt-10">&#x00A0;where</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;appear</span><span 
class="cmtt-10">&#x00A0;in</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;gprof</span><span 
class="cmtt-10">&#x00A0;listing</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;were</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;printed.</span><br /><br /></div></div>
<!--l. 351--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-17000"></a>The valgrind Tool</h3>
<!--l. 353--><p class="noindent" >The <span 
class="cmti-10">valgrind </span>tool is excellent for finding a number of problems with illegal access and memory
leaks.
<!--l. 355--><p class="noindent" >In what follows, we look at some very buggy code called <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/leaky.c" >leaky.c</a>
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;leaky.c</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;checker.c</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;Linux</span><span 
class="cmtt-10">&#x00A0;Programming&#8217;&#8217;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;Matthew</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;Stones</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;mallocs</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;buffer</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;reads</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;writes</span><span 
class="cmtt-10">&#x00A0;beyond</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;end</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;buffer</span><span 
class="cmtt-10">&#x00A0;memory.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;buffer</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;lost</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;free.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;valgrind</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;catch</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;these</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;pinpoint</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;line</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;source</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;where</span><span 
class="cmtt-10">&#x00A0;they</span><span 
class="cmtt-10">&#x00A0;occur.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;How</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;find</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;my</span><span 
class="cmtt-10">&#x00A0;code?</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;emacs</span><span 
class="cmtt-10">&#x00A0;short</span><span 
class="cmtt-10">&#x00A0;cut</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;goto</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;e.g.,</span><span 
class="cmtt-10">&#x00A0;20</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;your</span><span 
class="cmtt-10">&#x00A0;code</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Hold</span><span 
class="cmtt-10">&#x00A0;down</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;ESC</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;hit</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;X</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;followed</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;G</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;20</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;CR</span><span 
class="cmtt-10">&#x00A0;[carriage</span><span 
class="cmtt-10">&#x00A0;return].</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;brought</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;20.</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;handy</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;gcc</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;valgrind</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;tool</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;matter</span><span 
class="cmtt-10">&#x00A0;tells</span><span 
class="cmtt-10">&#x00A0;you</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;there</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;problem</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;particular</span><span 
class="cmtt-10">&#x00A0;line.</span><br /><span 
class="cmtt-10">//</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main()</span><br /><span 
class="cmtt-10">{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*ptr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(char</span><span 
class="cmtt-10">&#x00A0;*)</span><span 
class="cmtt-10">&#x00A0;malloc(1024);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;ch;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;/*</span><span 
class="cmtt-10">&#x00A0;Uninitialized</span><span 
class="cmtt-10">&#x00A0;read</span><span 
class="cmtt-10">&#x00A0;*/</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ch</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;ptr[1024];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;/*</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;beyond</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;*/</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ptr[1024]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;/*</span><span 
class="cmtt-10">&#x00A0;Orphan</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;*/</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ptr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(0);</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 403--><p class="noindent" >First we will compile the code and the run the valgrind tool on the code. No recompilation is need to run
valgrind.
                                                                                  
                                                                                  
<!--l. 405--><p class="noindent" >Note from the valgrind output below it indicates various problems in the leaky.c code and tells the user
what line a particular problem occurred on; for example:
<!--l. 408--><p class="noindent" >==2189== Invalid read of size 1
<!--l. 410--><p class="noindent" >==2189== at 0x804841C: main (leaky.c:20)
<!--l. 412--><p class="noindent" >There is an invalid read at line 20.
<!--l. 414--><p class="noindent" ><span 
class="cmbx-10">How do I find a line number in my code?</span>
<!--l. 416--><p class="noindent" >You can use a emacs short cut to goto line e.g., 20 in your code. Hold down the ESC key then hit the X
key followed by the G key then 20 then CR [carriage return]. You will be brought to line 20. This is handy
when gcc or valgrind or any tool for that matter tells you there is a problem at a particular
line.
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">[campbell@hancock</span><span 
class="cmtt-10">&#x00A0;cs50]</span><span 
class="cmtt-10">&#x00A0;mygcc</span><span 
class="cmtt-10">&#x00A0;-g</span><span 
class="cmtt-10">&#x00A0;-o</span><span 
class="cmtt-10">&#x00A0;leaky</span><span 
class="cmtt-10">&#x00A0;leaky.c</span><br /><br /><span 
class="cmtt-10">[campbell@hancock</span><span 
class="cmtt-10">&#x00A0;cs50]</span><span 
class="cmtt-10">&#x00A0;valgrind</span><span 
class="cmtt-10">&#x00A0;--leak-check=yes</span><span 
class="cmtt-10">&#x00A0;--log-file=valout</span><span 
class="cmtt-10">&#x00A0;-v</span><span 
class="cmtt-10">&#x00A0;./leaky</span><br /><br /><span 
class="cmtt-10">Now,</span><span 
class="cmtt-10">&#x00A0;let&#8217;s</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;snipped</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;valout.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;invalid</span><span 
class="cmtt-10">&#x00A0;read</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;captured</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">line</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;access</span><span 
class="cmtt-10">&#x00A0;happened</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;his</span><span 
class="cmtt-10">&#x00A0;given.</span><br /><br /><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;Invalid</span><span 
class="cmtt-10">&#x00A0;read</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x804841C:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:29)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Address</span><span 
class="cmtt-10">&#x00A0;0x41b7428</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;after</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;alloc&#8217;d</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x4024AEE:</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;(vg_replace_malloc.c:207)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;0x8048410:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:25)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;Invalid</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x804842A:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:32)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Address</span><span 
class="cmtt-10">&#x00A0;0x41b7428</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;after</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;alloc&#8217;d</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x4024AEE:</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;(vg_replace_malloc.c:207)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;0x8048410:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:25)</span><br /><span 
class="cmtt-10">--13024--</span><span 
class="cmtt-10">&#x00A0;REDIR:</span><span 
class="cmtt-10">&#x00A0;0x40bc840</span><span 
class="cmtt-10">&#x00A0;(free)</span><span 
class="cmtt-10">&#x00A0;redirected</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;0x4023850</span><span 
class="cmtt-10">&#x00A0;(free)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;ERROR</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;13</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;1)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;context</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;2:</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;Invalid</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x804842A:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:32)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Address</span><span 
class="cmtt-10">&#x00A0;0x41b7428</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;after</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;alloc&#8217;d</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x4024AEE:</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;(vg_replace_malloc.c:207)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;0x8048410:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:25)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;context</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;2:</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;Invalid</span><span 
class="cmtt-10">&#x00A0;read</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x804841C:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:29)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Address</span><span 
class="cmtt-10">&#x00A0;0x41b7428</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;after</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;alloc&#8217;d</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x4024AEE:</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;(vg_replace_malloc.c:207)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;0x8048410:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:25)</span><br /><span 
class="cmtt-10">--13024--</span><br /><span 
class="cmtt-10">--13024--</span><span 
class="cmtt-10">&#x00A0;supp:</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;13</span><span 
class="cmtt-10">&#x00A0;dl-hack3-1</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;IN</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;13</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;1)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;malloc/free:</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;exit:</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;malloc/free:</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;allocs,</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;frees,</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;allocated.</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;searching</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;not-freed</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;checked</span><span 
class="cmtt-10">&#x00A0;47,720</span><span 
class="cmtt-10">&#x00A0;bytes.</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;blocks</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;definitely</span><span 
class="cmtt-10">&#x00A0;lost</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;loss</span><span 
class="cmtt-10">&#x00A0;record</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x4024AEE:</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;(vg_replace_malloc.c:207)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;0x8048410:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:25)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;LEAK</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;definitely</span><span 
class="cmtt-10">&#x00A0;lost:</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;possibly</span><span 
class="cmtt-10">&#x00A0;lost:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;still</span><span 
class="cmtt-10">&#x00A0;reachable:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;suppressed:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><br /><br /><br /></div></div>
<!--l. 489--><p class="noindent" >The complete valout is here <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/valout" >valout</a>
<!--l. 491--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-18000"></a>gdb is King: a case study in debugging buggy_sort.c using the gdb debugger</h3>
<!--l. 493--><p class="noindent" >In lecture 8 we went through the intentionally buggy buggy_sort.c code from &#8220;Linux Programming&#8221; by
Mathew and Stones. We use gdb in a series of debugging moves that includes set breakpoints, commands,
and patching running code to verify fixes to three bugs we encounter. This is a simple example that builts
on our use of gdb in the course.
<!--l. 497--><p class="noindent" >If you have not gone through buggy you need to. Please go over the buggy sort function. It illustratse a
number of approaches to debugging <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/gdb.html" > buggy sort.c </a>.
<!--l. 500--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-19000"></a>Debugging tricky bugs: valgrind and gdb are your friends, printf your enemy</h3>
<!--l. 502--><p class="noindent" >Crawler is your first real encounter with dynamic memory management for data strcutures and pointers
which drive the management and operation of the data struct ures. Many tricky bugs lead to
segfaults that can be easily debugged &#8211; a pointer that is NULL when you expect an address to a
malloced data structure. But bugs may manifest all sorts of edge cases leading to unstable
code, infinite loops, fewer crawled files than expected. You might have a beautiful operational
crawler at depth 2 but segfaults at depth 3; or you might crawl at level 3 but if you change the
size of the hash table (MAX_HASH_SLOTS) from 10000 entries (which means the crawler
nearly always finds a NULL pointer in the hash table) to 10 entries (which means your code is
executing collision processing nearly all the time) then you might (or will likely ;-) segafult &#8211; these
are edge cases. By changing a system parameter (i.e., MAX_HASH_SLOTS) we radically
chan ge the operation of the system forcing the program control through code not probably
                                                                                  
                                                                                  
executed often. These edge case tests force pesky bugs out into the light so we can swat them &#8211;
splat!.
<!--l. 505--><p class="noindent" >Once you have coded each of the steps above and used the debugger to verify that the code functionally
works you can go on to complete the crawler cycle which is just a while loop for all URLs to visit. You will
likely experiennce some of the bugs mentioned above &#8211; many associated with your codes interaction with
memory &#8211; that is data strcutures.
<!--l. 507--><p class="noindent" >What do you do if you have a really non-obvious bug &#8211; that is, a tricky one?
<!--l. 510--><p class="noindent" ><span 
class="cmbx-10">1) run your program through valgrind, and note the line numbers of any errors.</span>
<span 
class="cmbx-10">Examine the code around these lines and see if I can figure out what t</span><span 
class="cmbx-10">&#x00A0;he problem</span>
<span 
class="cmbx-10">is</span>.
<!--l. 512--><p class="noindent" >In this lecture we covered valgrind. Run this command on the command line once you have a
clean make &#8211; on a single command line (it looks like it&#8217;s on two lines below but has to be
one:
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;valgrind</span><span 
class="cmtt-10">&#x00A0;--leak-check=yes</span><span 
class="cmtt-10">&#x00A0;--track-origins=yes</span><span 
class="cmtt-10">&#x00A0;--log-file=valout</span><span 
class="cmtt-10">&#x00A0;-v</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;http://www.cs.dartmouth.edu/~campbell/cs50/</span><span 
class="cmtt-10">&#x00A0;../../data</span><span 
class="cmtt-10">&#x00A0;0</span><br /><br /></div></div>
<!--l. 527--><p class="noindent" >Here is a good place to start with valgrind:
<div 
class="colorbox" id="colorbox9"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;http://valgrind.org/docs/manual/quick-start.html</span><br /><br /></div>                                 </div>
<!--l. 540--><p class="noindent" ><span 
class="cmbx-10">2) If you can&#8217;t simply figure out the problem by eyeballing your code (i.e., desk checking it),</span>
<span 
class="cmbx-10">then start gdb and set breakpoints at some nearby lin es &#8211; that is before and/or after the</span>
<span 
class="cmbx-10">source code line numbers given by the valgrind error indicated in valout. Step through</span>
<span 
class="cmbx-10">(potentially multiple times), examining variables (e.g., DNODEs) and the code until you</span>
<span 
class="cmbx-10">understand &#8220;the problem&#8221; (always a good place to start) &#8211; and what valgrind is</span>
<span 
class="cmbx-10">complaining about, such as, mememory leaks, writing/reading beyond malloced</span>
<span 
class="cmbx-10">memory</span>.
<!--l. 542--><p class="noindent" >Start by looking at the valout file &#8211; this is the output of valgrind (see the command line). Note, valgrind
runs much more slowly that non valgrind code. In addition, we set the verbose flag in the command.
Ideally you should have no errors but if you do (which you will for sure) then clear all the illegal read and
writes and memory leaks.
<!--l. 544--><p class="noindent" >I would not continue with any further code development until you clear all the valgrind errors; your
CLEAN (no errors) valout file should look like this for example:
<div 
class="colorbox" id="colorbox10"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;78==15102==</span><span 
class="cmtt-10">&#x00A0;HEAP</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;79==15102==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;exit:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;blocks</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;80==15102==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;heap</span><span 
class="cmtt-10">&#x00A0;usage:</span><span 
class="cmtt-10">&#x00A0;37</span><span 
class="cmtt-10">&#x00A0;allocs,</span><span 
class="cmtt-10">&#x00A0;37</span><span 
class="cmtt-10">&#x00A0;frees,</span><span 
class="cmtt-10">&#x00A0;114,513</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;allocated</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;81==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;82==15102==</span><span 
class="cmtt-10">&#x00A0;All</span><span 
class="cmtt-10">&#x00A0;heap</span><span 
class="cmtt-10">&#x00A0;blocks</span><span 
class="cmtt-10">&#x00A0;were</span><span 
class="cmtt-10">&#x00A0;freed</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;no</span><span 
class="cmtt-10">&#x00A0;leaks</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;possible</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;83==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;84==15102==</span><span 
class="cmtt-10">&#x00A0;ERROR</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;85--15102--</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;86--15102--</span><span 
class="cmtt-10">&#x00A0;used_suppression:</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;glibc-2.5.x-on-SUSE-10.2-(PPC)-2a</span><span 
class="cmtt-10">&#x00A0;/usr/lib64/valgrind/default.\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;supp:1286</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;87==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;88==15102==</span><span 
class="cmtt-10">&#x00A0;ERROR</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2)</span><br /><br /></div></div>
<!--l. 568--><p class="noindent" ><span 
class="cmbx-10">3) Of course, there could always be edge cases where something completely unrelated to the</span>
<span 
class="cmbx-10">code is at fault, but these are pretty rare</span>
<!--l. 570--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-20000"></a>What did Dijkstra say about bugs?</h3>
                                                                                  
                                                                                  
<!--l. 572--><p class="noindent" >OK, we are done. Being an effective debugger requires you to have an approach first: a set of techniques
that allow you to work through finding easy and more progressively hard bugs. Tools can be a great
help.
<!--l. 576--><p class="noindent" >In the next lecture, we will talk more about testing your code with the goal of convincing yourself that
your code has no bugs. <span 
class="cmbx-10">However, as Dijkstra said &#8220;testing&#8221; only demonstrate the presence of</span>
<span 
class="cmbx-10">bugs but not their absence</span>. We will talk more about where bugs lerk and how the art of testing can
help discover and remove many of the common bugs.
<!--l. 581--><p class="noindent" ><span 
class="cmbx-10">We strongly recommend that you play with these various versions of buggy</span><span 
class="cmbx-10">_sort and go</span>
<span 
class="cmbx-10">through the notes and reproduce what we did above in a step by step manner; then you can</span>
<span 
class="cmbx-10">apply these simple techniques in nailing your pesky buys</span>.
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/artofdebug.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.tug.org/tex4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.tug.org/tex4ht/)"> 
<!-- html --> 
<meta name="src" content="artofdebug.tex"> 
<meta name="date" content="2015-05-05 21:32:00"> 
<link rel="stylesheet" type="text/css" href="artofdebug.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 16</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>The Art of Debugging</h1>
<!--l. 21--><p class="noindent" >In the this lecture, we will carry on our discussion on the art of debugging.
<!--l. 23--><p class="noindent" >The development of good code usually follows the design methodology we have discussed in class: first you
understand the customers needs and captures these in the requirements of the system; then the system
design starts. The design spec. and implementation spec follow capturing the data flow, IO, important
data structure and algorithm design and finally the pseudo code for the system. After all that: which I
typically think of as the thinking about the problem and using abstraction (data structure design), comes
the coding phase. Once you have written code you need to test it. Yes, I know this is boring! But
unit testing, sub-system testing, system testing and finally integration testing are a really
important part of the life cycle of good software development. There is a tension to consider when
testing - you want a set of tools that help you quickly find the bugs, but you don&#8217;t want to
feel this is some sort of worthless tax strategy imposed by the company you work for to get
code out of the door to the customer. So once you have coded your functions, units, modules,
sub-system you need to test it and find the bugs - they will exist! Once you have a tested
system and your system fails - maybe a bug not uncovered during testing - then you need to
debug. In fact solving problems found while testing also requires a set of debugging tools and
strategies.
<!--l. 25--><p class="noindent" >In the next lecture we will discuss testing and in this one we discuss the tools and strategies you need to
debug and make your code bug free - or your money back. <span 
class="cmbx-10">The great computer scientist Edsger</span>
<span 
class="cmbx-10">Dijkstra once said that testing can demonstrate the presence of bugs but not their absence.</span>
We will come back to that in the next lecture. To some degree design, testing, and debugging - in my
opinion - are not so stepwise in terms of a known formula as professed by many of the software engineering
books - they require some experience, nose, detective work; there is indeed an art to design, testing, and
debugging.
<!--l. 27--><p class="noindent" >In this lecture on debugging we draw from &#8220;Linux Programming&#8221; by Matthew and Stones in terms of the
material and coding examples from their chapter on debugging. References and pointers to these books
can be found on the course webpage.
<!--l. 29--><p class="noindent" ><span 
class="cmbx-10">Finally, at the end of the notes we reiterate our approach to tracking down tricky bugs.</span>
<span 
class="cmbx-10">Make sure you read that section closely. BTW, you can skip these notes and lecture if you</span>
<span 
class="cmbx-10">write bug free code ;-)</span>
                                                                                  
                                                                                  
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 33--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">Technques for limiting bugs
     </li>
     <li class="itemize">C can be harmful to your health
     </li>
     <li class="itemize">Debugging: all I need is printf, right?
     </li>
     <li class="itemize">Types of errors
     </li>
     <li class="itemize">General debugging techniques
     </li>
     <li class="itemize">Tools: cflow, gprof, valgrind, gdb
     </li>
     <li class="itemize">Debugging the buggy_sort.c code</li></ul>
<!--l. 45--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>Technques for limit those pesky bugs</h3>
<!--l. 47--><p class="noindent" >Up until now you have probably being relying on simple debug skills: using printf. But as the number of
lines in your code grows, indeed at this point, the number of files in the systems you are coding, then
printf while helpful is not effective enough. For example, a printf placed in your code may work but the
segment fault that occurs 50 lines after your printf stops the printf from finally writing out that &#8220;I
HERE AM AT LINE 100&#8221; message to the screen. So you natrually think that the bug must be
before line 100 but it&#8217;s at line 150. So printf is not your friend in this example, rather it&#8217;s a red
herring.
<!--l. 49--><p class="noindent" >Debugging code is an essential part of the design and implementation methodology we discussed earlier.
Many problems can arise when coding. Bugs can be simple: array script error are sometime difficult to
debug: the systems runs for days and then fails, say, because of a memory leak or buffer overflow problem.
Programmer aim to understand the nature of the bug they are trying to swat: is it predicatble, does it
always fail under the same set of conditions, and so on. These are clues that help track down those
pesky bugs in complex systems. To some degree being a good deugger of code C comes with
experience.
<!--l. 53--><p class="noindent" >By now you are use to bus errors, segfaults, and seeing files such as core dumps in your directory when
you run your program and it fails. We will use the <span 
class="cmbx-10">GNU debugger (gdb) </span>to help solve these
problems. Through a set of examples we will show how to debug problems in a systematic
                                                                                  
                                                                                  
manner. But first let&#8217;s dicuss why bugs occur and what technques other than running gdb
help.
<!--l. 55--><p class="noindent" >The complexity of a program is related to the number of interacting components; for example, the
crawler interacts with an external and distribued wget() command. There is a line of thought
that says as a rule of thumb the number of pseky bug grows with the number of interactions.
Reducing the complexity and interactions enables us to focus in on the location of bugs in
code.
<!--l. 57--><p class="noindent" >Dubgging problems ranges from easy, moderate through down right super hard. Techniques that help
reduce degugging time include:
     <ul class="itemize1">
     <li class="itemize">a good design and design methodology;
     </li>
     <li class="itemize">consistent style (e.g., use C program idioms as much as possible);
     </li>
     <li class="itemize">boundary condition tests;
     </li>
     <li class="itemize">assertions and sanity testing;
     </li>
     <li class="itemize">defensive programming;
     </li>
     <li class="itemize">avoid files that have a large number of functions and functions that have a large number of
     lines;
     </li>
     <li class="itemize">limit global data; and use
     </li>
     <li class="itemize">checking tools.</li></ul>
<!--l. 71--><p class="noindent" >We will discuss these techniques in this lecture. First a work on C.
<!--l. 73--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>C can be harmful to your health</h3>
<!--l. 75--><p class="noindent" >The C programming language can be dangerous to code with if you are not familiar with the dangers; for
example: C does not support array subscript checking so it is easy to write and read at locations beyond
the end of an array that you have defined. So be ware of this when you access arrays using variables,
particularly, in loops (e.g., x = array[i] where the length of the array is 20 but i = 21). Pointers can be
dangerous too - very danferous. You know that already. For example, not initialising a pointer and then
                                                                                  
                                                                                  
trying to access elements of a structure or memory pointed to by the unitialized pointer is playing fire.
There are many other possible scenarios. There is no garbage collection in C. So if you malloc() without
free() you will have a memory leak which might cause your program to fail or not, or fail
sometimes. There are tools for determining if there are memory leaks such as valgrind that we will
use.
<!--l. 81--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a>Debugging: all I need is printf, right?</h3>
<!--l. 83--><p class="noindent" >Up until now you have been using mostly <span 
class="cmbx-10">prinft() </span>to help you debug your code. Printf can only get you
so far. Many different types of errors or bugs can exist in software. For example, you may have bug free
code but the performance of the system woeful. How do you find performance errors in your code - could
it be the choice of data structure is too &#8220;slow&#8221; or the structure of your code? What happens if you code
looks error free but you have memory leaks? Printf will not help. What if you have a &#8220;seg fault&#8221; which you
have all experienced that occurs after your printf (which lets say is executed) but never gets
printed out because the process seg faults, as discussed above. What happens if your system
runs for hours and under a certain set of system conditions the code fails. Working your way
through 1000s of printf statements may not help. When a bug is buried deep in the execution of
your software you need sophisticated tools to track those down. Printf will not help much.
This lecture talks about tools to help with performance issues, memory leaks and difficult
bugs.
<!--l. 85--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a>Types of Errors</h3>
<!--l. 87--><p class="noindent" >The major groups of errors found in system development are requirement spec, design spec and coding
errors. In what follows, we discuss these common types of errors found in systems.
<!--l. 89--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-9000"></a>Requirement Spec Errors</h4>
<!--l. 90--><p class="noindent" >Many times errors creep into system development because of some misunderstanding between what the
customer wants and what the developers deliver. These &#8220;errors&#8221; in the requirement phase are very costly
and typically some form of requirement analysis may catch them but your very best programmer has little
chance of discovering these types of errors in the software life-cycle. That is right even your very best
programmers will write the wrong code. Requirement reviews can also help here. But it is important to try
and identify what the systems requirements are asking the designers to do and if that is indeed what the
customer wants.
                                                                                  
                                                                                  
<!--l. 97--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-10000"></a>Design Spec Errors</h4>
<!--l. 99--><p class="noindent" >Assuming that the Requirement Spec is good the next set of errors occur in the design phase. In terms of
our methodology errors would be reflected in the Design Spec. Do not sit down and start
coding once you understand the requirements; think, abstract and write the Design Spec.
You need to understand the data flow, IO, data structures, functional decomposition, pseudo
code and algorithms before you write a line of code. If errors creep in the design stage; for
example, if the code is to design a search on a large volume of data the data structures which
look functionally correct may imped performance - maybe a hash table would be the best
choice. This issue relates to <span 
class="cmbx-10">performance errors</span>. Many types of design errors can occur and
misunderstandings between software engineers in the design phase can be helped with writing good
clear specs that people read and discuss in detail in design reviews before a line of code is
written.
<!--l. 104--><p class="noindent" >
<h4 class="likesubsectionHead"><a 
 id="x1-11000"></a>Coding Errors</h4>
<!--l. 106--><p class="noindent" >The main error people associate with software is coding errors. We all make coding errors. Having a solid
Design Spec to work from that has gone through a rigorous review helps. Translating that spec to an
Implementation Spec that we have discussed in this course is the next step. Once code is written and unit
tested (we will discuss this in the next lecture) then &#8220;desk checking&#8221; your code is your best friend - more
on coding inspection below. <span 
class="cmbx-10">Hacking at the terminal in the hope of digging the error out should</span>
<span 
class="cmbx-10">not be the next step - first read your code and convince yourself it works</span>. Make believe that
you are the computer executing the code line by line - update the data structures just like your
code. Study the IO in your code as you execute it. You will find many errors this way. Even
better ask another person working in the project but not familiar with your code to desk check
your code. Sometimes errors can be staring you in the face and a fresh set of eyes can pick
those pesky bugs out. <span 
class="cmbx-10">The take home is that you do not need a computer to find</span>
<span 
class="cmbx-10">bugs</span>.
<!--l. 108--><p class="noindent" >Clearly computers do help and tools can help enormously to track down difficult bugs. Using the compiler
with strong flags can help by just running gcc. In this class, we have used: &#8220;gcc -Wall -pedantic
-std=c99&#8221; which is a good start. <span 
class="cmbx-10">Never execute code that give you warnings - fix the</span>
<span 
class="cmbx-10">code</span>.
<!--l. 111--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-12000"></a>General Debugging Techniques</h3>
                                                                                  
                                                                                  
<!--l. 113--><p class="noindent" >When tracking down pesky bugs we can think of the following steps to finding them:
     <ul class="itemize1">
     <li class="itemize">Testing: Finding out what bugs exist. We have already designed some simple test scripts for
     the crawler.
     </li>
     <li class="itemize">Stabilization: Try and make the bugs reproducible (what condition causes a particular bug
     and is it repeatable).
     </li>
     <li class="itemize">Localization: Identify the function, line of the code responsible.
     </li>
     <li class="itemize">Correction: Fix the code.
     </li>
     <li class="itemize">Verification: Test the code fix and confirm it works.</li></ul>
<!--l. 122--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-13000"></a>Code Inspections</h3>
<!--l. 124--><p class="noindent" >Many times people rush and &#8220;hack&#8221; the debug phase and sit and the terminal hoping to eventually track
down that bug via trail and error. Most people do this as their first resort. You will find this approach can
be successful but can be very time consuming - read take longer than other techniques. One of the most
effective debug tools is you! Stop and read your code. Pretend you are a computer and execute the code
with a pen and paper. Code inspection is very useful. Programmers closely trace through their
code in detail. Look for boundary problems in code, many times bugs exist at the boundaries
- of structures, arrays, code (e.g., for loops). Many difficult bugs require more power than
just hacking and hoping. Once you have read your code and convinced yourself it works then
assuming bugs lurk you need to instrument your code and start the detective work. Read
on.
<!--l. 126--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-14000"></a>Instrumentation</h3>
<!--l. 128--><p class="noindent" >It is a smart idea to use conditional &#8220;#ifdef&#8221; to include debug code. This can be switched on using by
defining a variable in the command line of the compiler. The &#8220;-D&#8221; option of the gcc compiler
allows us to define a named value (e.g., DEBUG below). Using conditional definitions to print
out important data structures or where in the code that an assert happens is very useful.
In addition, a single switch such as -DDEBUG can &#8220;turn on&#8221; all the test code in a system.
This is better than defining a global variable to do the same thing because in the case of
conditional debug flags the test code can be turned off and is not included in the binary. Make
                                                                                  
                                                                                  
sure you turn off the test code before the code is shipped, e.g., make debug becomes make
release.
<!--l. 130--><p class="noindent" >Please go over the buggy sort function. It illustratse a number of approaches to debugging <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/gdb.html" > buggy sort.c
</a>.
<!--l. 132--><p class="noindent" ><span 
class="cmbx-10">Note, in the code below it states: mygcc -g -o bug -DDEBUG buggy</span><span 
class="cmbx-10">_sort1.c. Note that -g</span>
<span 
class="cmbx-10">and -ggdb are mostly equivalent flags. There may be some differences between</span>
<span 
class="cmbx-10">machines.</span>
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">\\</span><span 
class="cmtt-10">&#x00A0;snippet</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;buggy_sort1.c</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main()</span><br /><span 
class="cmtt-10">{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;include</span><span 
class="cmtt-10">&#x00A0;some</span><span 
class="cmtt-10">&#x00A0;conditionally</span><span 
class="cmtt-10">&#x00A0;compiles</span><span 
class="cmtt-10">&#x00A0;debug</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;print</span><span 
class="cmtt-10">&#x00A0;out</span><span 
class="cmtt-10">&#x00A0;important</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structures</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Note</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;ifdefs</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;compile</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;flag</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;DEBUG</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;mygcc</span><span 
class="cmtt-10">&#x00A0;-g</span><span 
class="cmtt-10">&#x00A0;-o</span><span 
class="cmtt-10">&#x00A0;bug</span><span 
class="cmtt-10">&#x00A0;-DDEBUG</span><span 
class="cmtt-10">&#x00A0;buggy_sort1.c</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Note</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;-g</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-ggdb</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;mostly</span><span 
class="cmtt-10">&#x00A0;equivalent</span><span 
class="cmtt-10">&#x00A0;flags.</span><span 
class="cmtt-10">&#x00A0;There</span><span 
class="cmtt-10">&#x00A0;may</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;some</span><span 
class="cmtt-10">&#x00A0;differences</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;machines.</span><br /><br /><br /><span 
class="cmtt-10">#ifdef</span><span 
class="cmtt-10">&#x00A0;DEBUG</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Test</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Bubble</span><span 
class="cmtt-10">&#x00A0;Sort</span><span 
class="cmtt-10">&#x00A0;(bad</span><span 
class="cmtt-10">&#x00A0;code)</span><span 
class="cmtt-10">&#x00A0;Compiled:</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;__DATE__</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;__TIME__</span><span 
class="cmtt-10">&#x00A0;"\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;%s\n",</span><span 
class="cmtt-10">&#x00A0;__LINE__,</span><span 
class="cmtt-10">&#x00A0;__FILE__);</span><br /><span 
class="cmtt-10">#endif</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;5;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("TEST:</span><span 
class="cmtt-10">&#x00A0;Before</span><span 
class="cmtt-10">&#x00A0;sort</span><span 
class="cmtt-10">&#x00A0;array[%d]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{%s,</span><span 
class="cmtt-10">&#x00A0;%d}\n",</span><span 
class="cmtt-10">&#x00A0;i,</span><span 
class="cmtt-10">&#x00A0;array[i].data,</span><span 
class="cmtt-10">&#x00A0;array[i].key);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sort(array,5);</span><br /><br /><span 
class="cmtt-10">#ifdef</span><span 
class="cmtt-10">&#x00A0;DEBUG</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;5;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br />        <span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("TEST:</span><span 
class="cmtt-10">&#x00A0;After</span><span 
class="cmtt-10">&#x00A0;sort</span><span 
class="cmtt-10">&#x00A0;array[%d]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;{%s,</span><span 
class="cmtt-10">&#x00A0;%d}\n",</span><span 
class="cmtt-10">&#x00A0;i,</span><span 
class="cmtt-10">&#x00A0;array[i].data,</span><span 
class="cmtt-10">&#x00A0;array[i].key);</span><br /><span 
class="cmtt-10">#endif</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(0);</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 173--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-15000"></a>The cflow Tool</h3>
<!--l. 175--><p class="noindent" >The <span 
class="cmti-10">cflow </span>tool prints a function call tree showing which functions call which others. This is very helpful to
see the structure of the code and to see how it operates. The tool essentially analyses the source files and
builds a graph from the code.
<!--l. 177--><p class="noindent" >Suppose you are given someones source code and want to get a handle on the decomposition of the code.
What functions are used? What is the calling order? cflow is the pefect tool.
<!--l. 181--><p class="noindent" >Consider the following code. The main function calls a function called whoami that prints out the user&#8217;s
name. It is very simple. We can run GNU cflow to analyzes the source code. In fact cflow can analyze
many source files all at once. It prints a graph, charting control flow within the program. cflow can
produce direct and inverted flowgraphs.
<!--l. 183--><p class="noindent" >Let&#8217;s consider <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/whoami.c" > whoami.c </a>.
<!--l. 185--><p class="noindent" >By just using the cflow command with the source file the output is direct graphs, displaying callercallee
dependencies.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">cflow</span><span 
class="cmtt-10">&#x00A0;whoami.c</span><br /><br /><span 
class="cmtt-10">main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fprintf()</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;getpwuid()</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;geteuid()</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;getenv()</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fprintf()</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf()</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 210--><p class="noindent" >You can also create a reverse graph, charts calleecaller dependencies by running cflow with &#8211;reverse (-r)
command line option as shown below. This time the function is listed and all the places in the source that
call it.
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">cflow</span><span 
class="cmtt-10">&#x00A0;-r</span><span 
class="cmtt-10">&#x00A0;whoami.c</span><br /><span 
class="cmtt-10">fprintf():</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">getenv():</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">geteuid():</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">getpwuid():</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">printf():</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><span 
class="cmtt-10">who_am_i()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;who_am_i</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:8&#x003E;:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;&#x003C;int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(int</span><span 
class="cmtt-10">&#x00A0;argc,char</span><span 
class="cmtt-10">&#x00A0;**argv)</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;whoami.c:38&#x003E;</span><br /><br /></div></div>
<!--l. 245--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-16000"></a>The gprof Tool</h3>
<!--l. 247--><p class="noindent" >The <span 
class="cmti-10">gprof </span>tool is use to profile the runtime performance code. Many times you might be confident that
the code is bug free because there are no functional problems. However, the code could be worthless if it
does not meet its performance requirements. The gprof tool is an execution profiling tool that is useful
                                                                                  
                                                                                  
when tracking down performance problems.
<!--l. 249--><p class="noindent" ><span 
class="cmbx-10">Warning</span>. Don&#8217;t try and use gprof on your mac. It has problems with Intel archiecture. Log on to a
machine in the lab to try it out.
<!--l. 251--><p class="noindent" ><span 
class="cmbx-10">Anecdotal evidence</span>. Many time programmers focus on getting the code to work functionally and then
think about speed up. This is not always the most productive approach to design or systems development.
Best to design for speed if needed (e.g., use a hash table instead of searching a long double linked list).
I recall once working as a consultant on improving the performance of a radio router. The
performance of the system coded in Ada was appalling and someone&#8217;s head was about to
roll. I spend probably two weeks just studying the code of a very large system - difficult to
keep that all in your head. Profiling the code highlighted the cost of a system that had been
desig/Users/atc/teaching/cs50/notes/s5/lab5/srcned and coded with excessive number of tasks and
rendezvous. The cost of interprocess communications was high. What did I do? It was not nice. Turned
the system into one large task and replaced all interprocess communications (IPC) (which represented
system calls) with my library that implemented the IPC API. I changes couple 100 lines of
code in a system of 20,000 lines of code. The improvement was massive. Packets could be
forwarding from one radio input to the output radio in under 100 msec which was down from 1
second! I was king for the day, or week. I made my changes, tested them locally, desk checked
the code closely - and, it ran first time! The guy who designed the system wanted me to fail
- I could feel it. But when that router ran first time. Well that is a moment I will always
remember. My reward? I got to design the next system. The problem was essentially a performance
bug. The changes was simple once the problem was identified. I took a very radical approach
that ran against OO design. But that is what was needed. The router forwarded packets a 1
second intervals was not going to fly with the customer. And, yes, I saved the day and it was
fun.
<!--l. 253--><p class="noindent" ><span 
class="cmbx-10">Note to instructor: use lab4 solution in cs50/l16/lab4 as example code</span>
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">To</span><span 
class="cmtt-10">&#x00A0;run</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;gprof</span><span 
class="cmtt-10">&#x00A0;first</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;-pg&#8217;&#8217;</span><span 
class="cmtt-10">&#x00A0;switch</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;flags</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;compiler</span><br /><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;Makefile</span><br /><span 
class="cmtt-10">#</span><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;make</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;build</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;crawler.</span><br /><br /><span 
class="cmtt-10">CC=gcc</span><br /><span 
class="cmtt-10">CFLAGS=-Wall</span><span 
class="cmtt-10">&#x00A0;-pg</span><span 
class="cmtt-10">&#x00A0;-pedantic</span><span 
class="cmtt-10">&#x00A0;-std=c99</span><br /><span 
class="cmtt-10">SOURCES=./list.h</span><span 
class="cmtt-10">&#x00A0;./list.c</span><span 
class="cmtt-10">&#x00A0;./crawler.c</span><span 
class="cmtt-10">&#x00A0;../util/hash.c</span><span 
class="cmtt-10">&#x00A0;../util/html.c</span><br /><br /><span 
class="cmtt-10">Once</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;done</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;build</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;-pg&#8217;&#8217;</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;run</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;application</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;crawler</span><br /><br /><span 
class="cmtt-10">pwd</span><br /><span 
class="cmtt-10">/net/nusers/campbell/cs50/l16/lab4/src/crawler</span><br /><br /><br /><span 
class="cmtt-10">./crawler</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><span 
class="cmtt-10">&#x00A0;../../data/</span><span 
class="cmtt-10">&#x00A0;2</span><br /><br /><span 
class="cmtt-10">Now</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;ready</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;run</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;gprof</span><span 
class="cmtt-10">&#x00A0;tool:</span><br /><br /><span 
class="cmtt-10">gprof</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;gmon.out</span><span 
class="cmtt-10">&#x00A0;&#x003E;</span><span 
class="cmtt-10">&#x00A0;profile</span><br /><br /></div></div>
<!--l. 285--><p class="noindent" >The output of the profile is below:
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><span 
class="cmtt-10">Flat</span><span 
class="cmtt-10">&#x00A0;profile:</span><br /><br /><span 
class="cmtt-10">Each</span><span 
class="cmtt-10">&#x00A0;sample</span><span 
class="cmtt-10">&#x00A0;counts</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;0.01</span><span 
class="cmtt-10">&#x00A0;seconds.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;%</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;cumulative</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;self</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;self</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;total</span><br /><span 
class="cmtt-10">&#x00A0;time</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;seconds</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;seconds</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;calls</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;us/call</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;us/call</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;name</span><br /><span 
class="cmtt-10">&#x00A0;28.57</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.02</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.02</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;5517</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;3.63</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;7.25</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;GetNextURL</span><br /><span 
class="cmtt-10">&#x00A0;28.57</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.04</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.02</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1023</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;19.55</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;19.55</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;getAddressFromTheLinksToBeVisited</span><br /><span 
class="cmtt-10">&#x00A0;28.57</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.06</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.02</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;194</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;103.09</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;103.09</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;removeWhiteSpace</span><br /><span 
class="cmtt-10">&#x00A0;14.29</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.01</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;5053</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1.98</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1.98</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;NormalizeURL</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;7703</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hash1</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;7703</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;make_hash</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;3674</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;GetDataWithKey</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2650</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;addElement</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1023</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DAdd</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1023</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1.98</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;setURLasVisited</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;213</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;getPage</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;194</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ReadFileToMemoryOrDie</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;194</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;206.19</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;extractURLs</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;194</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;file_length</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;194</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;41.11</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;updateListLinkToBeVisited</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;CleanDictionary</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;InitDictionary</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;IsDirectory</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;cleanup</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.07</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;0.00</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;initList</span><br /><br /><br /><span 
class="cmtt-10">&#x00A0;\%</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;percentage</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;running</span><span 
class="cmtt-10">&#x00A0;time</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">time</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;used</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function.</span><br /><br /><span 
class="cmtt-10">cumulative</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;running</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;seconds</span><span 
class="cmtt-10">&#x00A0;accounted</span><br /><span 
class="cmtt-10">&#x00A0;seconds</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;those</span><span 
class="cmtt-10">&#x00A0;listed</span><span 
class="cmtt-10">&#x00A0;above</span><span 
class="cmtt-10">&#x00A0;it.</span><br /><br /><span 
class="cmtt-10">&#x00A0;self</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;seconds</span><span 
class="cmtt-10">&#x00A0;accounted</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;this</span><br /><span 
class="cmtt-10">seconds</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;alone.</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;major</span><span 
class="cmtt-10">&#x00A0;sort</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;this</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;listing.</span><br /><br /><span 
class="cmtt-10">calls</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;times</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;was</span><span 
class="cmtt-10">&#x00A0;invoked,</span><span 
class="cmtt-10">&#x00A0;if</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;profiled,</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;blank.</span><br /><br /><span 
class="cmtt-10">&#x00A0;self</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;average</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;milliseconds</span><span 
class="cmtt-10">&#x00A0;spent</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><br /><span 
class="cmtt-10">ms/call</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;per</span><span 
class="cmtt-10">&#x00A0;call,</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;profiled,</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;blank.</span><br /><br /><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;average</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;milliseconds</span><span 
class="cmtt-10">&#x00A0;spent</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><br /><span 
class="cmtt-10">ms/call</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;descendents</span><span 
class="cmtt-10">&#x00A0;per</span><span 
class="cmtt-10">&#x00A0;call,</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;this</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;profiled,</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;blank.</span><br /><br /><span 
class="cmtt-10">name</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;function.</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;minor</span><span 
class="cmtt-10">&#x00A0;sort</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;listing.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;index</span><span 
class="cmtt-10">&#x00A0;shows</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;location</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;gprof</span><span 
class="cmtt-10">&#x00A0;listing.</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;index</span><span 
class="cmtt-10">&#x00A0;is</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;parenthesis</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;shows</span><span 
class="cmtt-10">&#x00A0;where</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;appear</span><span 
class="cmtt-10">&#x00A0;in</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;gprof</span><span 
class="cmtt-10">&#x00A0;listing</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;were</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;printed.</span><br /><br /></div></div>
<!--l. 351--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-17000"></a>The valgrind Tool</h3>
<!--l. 353--><p class="noindent" >The <span 
class="cmti-10">valgrind </span>tool is excellent for finding a number of problems with illegal access and memory
leaks.
<!--l. 355--><p class="noindent" >In what follows, we look at some very buggy code called <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/leaky.c" >leaky.c</a>
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;leaky.c</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;checker.c</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;&#8216;&#8216;Linux</span><span 
class="cmtt-10">&#x00A0;Programming&#8217;&#8217;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;Matthew</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;Stones</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;mallocs</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;buffer</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;reads</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;writes</span><span 
class="cmtt-10">&#x00A0;beyond</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;end</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;buffer</span><span 
class="cmtt-10">&#x00A0;memory.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;buffer</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;lost</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;free.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;valgrind</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;catch</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;these</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;pinpoint</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;line</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;source</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;where</span><span 
class="cmtt-10">&#x00A0;they</span><span 
class="cmtt-10">&#x00A0;occur.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;How</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;find</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;my</span><span 
class="cmtt-10">&#x00A0;code?</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;emacs</span><span 
class="cmtt-10">&#x00A0;short</span><span 
class="cmtt-10">&#x00A0;cut</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;goto</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;e.g.,</span><span 
class="cmtt-10">&#x00A0;20</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;your</span><span 
class="cmtt-10">&#x00A0;code</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Hold</span><span 
class="cmtt-10">&#x00A0;down</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;ESC</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;hit</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;X</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;followed</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;G</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;20</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;CR</span><span 
class="cmtt-10">&#x00A0;[carriage</span><span 
class="cmtt-10">&#x00A0;return].</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;brought</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;20.</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;handy</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;gcc</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;valgrind</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;tool</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;matter</span><span 
class="cmtt-10">&#x00A0;tells</span><span 
class="cmtt-10">&#x00A0;you</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;there</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;problem</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;particular</span><span 
class="cmtt-10">&#x00A0;line.</span><br /><span 
class="cmtt-10">//</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main()</span><br /><span 
class="cmtt-10">{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*ptr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(char</span><span 
class="cmtt-10">&#x00A0;*)</span><span 
class="cmtt-10">&#x00A0;malloc(1024);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;ch;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;/*</span><span 
class="cmtt-10">&#x00A0;Uninitialized</span><span 
class="cmtt-10">&#x00A0;read</span><span 
class="cmtt-10">&#x00A0;*/</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ch</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;ptr[1024];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;/*</span><span 
class="cmtt-10">&#x00A0;Write</span><span 
class="cmtt-10">&#x00A0;beyond</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;*/</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ptr[1024]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;/*</span><span 
class="cmtt-10">&#x00A0;Orphan</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;*/</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ptr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(0);</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 403--><p class="noindent" >First we will compile the code and the run the valgrind tool on the code. No recompilation is need to run
valgrind.
                                                                                  
                                                                                  
<!--l. 405--><p class="noindent" >Note from the valgrind output below it indicates various problems in the leaky.c code and tells the user
what line a particular problem occurred on; for example:
<!--l. 408--><p class="noindent" >==2189== Invalid read of size 1
<!--l. 410--><p class="noindent" >==2189== at 0x804841C: main (leaky.c:20)
<!--l. 412--><p class="noindent" >There is an invalid read at line 20.
<!--l. 414--><p class="noindent" ><span 
class="cmbx-10">How do I find a line number in my code?</span>
<!--l. 416--><p class="noindent" >You can use a emacs short cut to goto line e.g., 20 in your code. Hold down the ESC key then hit the X
key followed by the G key then 20 then CR [carriage return]. You will be brought to line 20. This is handy
when gcc or valgrind or any tool for that matter tells you there is a problem at a particular
line.
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">[campbell@hancock</span><span 
class="cmtt-10">&#x00A0;cs50]</span><span 
class="cmtt-10">&#x00A0;mygcc</span><span 
class="cmtt-10">&#x00A0;-g</span><span 
class="cmtt-10">&#x00A0;-o</span><span 
class="cmtt-10">&#x00A0;leaky</span><span 
class="cmtt-10">&#x00A0;leaky.c</span><br /><br /><span 
class="cmtt-10">[campbell@hancock</span><span 
class="cmtt-10">&#x00A0;cs50]</span><span 
class="cmtt-10">&#x00A0;valgrind</span><span 
class="cmtt-10">&#x00A0;--leak-check=yes</span><span 
class="cmtt-10">&#x00A0;--log-file=valout</span><span 
class="cmtt-10">&#x00A0;-v</span><span 
class="cmtt-10">&#x00A0;./leaky</span><br /><br /><span 
class="cmtt-10">Now,</span><span 
class="cmtt-10">&#x00A0;let&#8217;s</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;snipped</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;valout.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;invalid</span><span 
class="cmtt-10">&#x00A0;read</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;captured</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">line</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;access</span><span 
class="cmtt-10">&#x00A0;happened</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;his</span><span 
class="cmtt-10">&#x00A0;given.</span><br /><br /><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;Invalid</span><span 
class="cmtt-10">&#x00A0;read</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x804841C:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:29)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Address</span><span 
class="cmtt-10">&#x00A0;0x41b7428</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;after</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;alloc&#8217;d</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x4024AEE:</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;(vg_replace_malloc.c:207)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;0x8048410:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:25)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;Invalid</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x804842A:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:32)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Address</span><span 
class="cmtt-10">&#x00A0;0x41b7428</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;after</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;alloc&#8217;d</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x4024AEE:</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;(vg_replace_malloc.c:207)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;0x8048410:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:25)</span><br /><span 
class="cmtt-10">--13024--</span><span 
class="cmtt-10">&#x00A0;REDIR:</span><span 
class="cmtt-10">&#x00A0;0x40bc840</span><span 
class="cmtt-10">&#x00A0;(free)</span><span 
class="cmtt-10">&#x00A0;redirected</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;0x4023850</span><span 
class="cmtt-10">&#x00A0;(free)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;ERROR</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;13</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;1)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;context</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;2:</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;Invalid</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x804842A:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:32)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Address</span><span 
class="cmtt-10">&#x00A0;0x41b7428</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;after</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;alloc&#8217;d</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x4024AEE:</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;(vg_replace_malloc.c:207)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;0x8048410:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:25)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;context</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;2:</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;Invalid</span><span 
class="cmtt-10">&#x00A0;read</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x804841C:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:29)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Address</span><span 
class="cmtt-10">&#x00A0;0x41b7428</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;after</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;block</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;alloc&#8217;d</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x4024AEE:</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;(vg_replace_malloc.c:207)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;0x8048410:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:25)</span><br /><span 
class="cmtt-10">--13024--</span><br /><span 
class="cmtt-10">--13024--</span><span 
class="cmtt-10">&#x00A0;supp:</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;13</span><span 
class="cmtt-10">&#x00A0;dl-hack3-1</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;IN</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;13</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;1)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;malloc/free:</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;exit:</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;malloc/free:</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;allocs,</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;frees,</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;allocated.</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;searching</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;not-freed</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;checked</span><span 
class="cmtt-10">&#x00A0;47,720</span><span 
class="cmtt-10">&#x00A0;bytes.</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;blocks</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;definitely</span><span 
class="cmtt-10">&#x00A0;lost</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;loss</span><span 
class="cmtt-10">&#x00A0;record</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;1</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;0x4024AEE:</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;(vg_replace_malloc.c:207)</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;0x8048410:</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(leaky.c:25)</span><br /><span 
class="cmtt-10">==13024==</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;LEAK</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;definitely</span><span 
class="cmtt-10">&#x00A0;lost:</span><span 
class="cmtt-10">&#x00A0;1,024</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;1</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;possibly</span><span 
class="cmtt-10">&#x00A0;lost:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;still</span><span 
class="cmtt-10">&#x00A0;reachable:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><span 
class="cmtt-10">==13024==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;suppressed:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;blocks.</span><br /><br /><br /><br /></div></div>
<!--l. 489--><p class="noindent" >The complete valout is here <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/valout" >valout</a>
<!--l. 491--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-18000"></a>gdb is King: a case study in debugging buggy_sort.c using the gdb debugger</h3>
<!--l. 493--><p class="noindent" >In lecture 8 we went through the intentionally buggy buggy_sort.c code from &#8220;Linux Programming&#8221; by
Mathew and Stones. We use gdb in a series of debugging moves that includes set breakpoints, commands,
and patching running code to verify fixes to three bugs we encounter. This is a simple example that builts
on our use of gdb in the course.
<!--l. 497--><p class="noindent" >If you have not gone through buggy you need to. Please go over the buggy sort function. It illustratse a
number of approaches to debugging <a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/gdb.html" > buggy sort.c </a>.
<!--l. 500--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-19000"></a>Debugging tricky bugs: valgrind and gdb are your friends, printf your enemy</h3>
<!--l. 502--><p class="noindent" >Crawler is your first real encounter with dynamic memory management for data strcutures and pointers
which drive the management and operation of the data struct ures. Many tricky bugs lead to
segfaults that can be easily debugged &#8211; a pointer that is NULL when you expect an address to a
malloced data structure. But bugs may manifest all sorts of edge cases leading to unstable
code, infinite loops, fewer crawled files than expected. You might have a beautiful operational
crawler at depth 2 but segfaults at depth 3; or you might crawl at level 3 but if you change the
size of the hash table (MAX_HASH_SLOTS) from 10000 entries (which means the crawler
nearly always finds a NULL pointer in the hash table) to 10 entries (which means your code is
executing collision processing nearly all the time) then you might (or will likely ;-) segafult &#8211; these
are edge cases. By changing a system parameter (i.e., MAX_HASH_SLOTS) we radically
chan ge the operation of the system forcing the program control through code not probably
                                                                                  
                                                                                  
executed often. These edge case tests force pesky bugs out into the light so we can swat them &#8211;
splat!.
<!--l. 505--><p class="noindent" >Once you have coded each of the steps above and used the debugger to verify that the code functionally
works you can go on to complete the crawler cycle which is just a while loop for all URLs to visit. You will
likely experiennce some of the bugs mentioned above &#8211; many associated with your codes interaction with
memory &#8211; that is data strcutures.
<!--l. 507--><p class="noindent" >What do you do if you have a really non-obvious bug &#8211; that is, a tricky one?
<!--l. 510--><p class="noindent" ><span 
class="cmbx-10">1) run your program through valgrind, and note the line numbers of any errors.</span>
<span 
class="cmbx-10">Examine the code around these lines and see if I can figure out what t</span><span 
class="cmbx-10">&#x00A0;he problem</span>
<span 
class="cmbx-10">is</span>.
<!--l. 512--><p class="noindent" >In this lecture we covered valgrind. Run this command on the command line once you have a
clean make &#8211; on a single command line (it looks like it&#8217;s on two lines below but has to be
one:
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;valgrind</span><span 
class="cmtt-10">&#x00A0;--leak-check=yes</span><span 
class="cmtt-10">&#x00A0;--track-origins=yes</span><span 
class="cmtt-10">&#x00A0;--log-file=valout</span><span 
class="cmtt-10">&#x00A0;-v</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;http://www.cs.dartmouth.edu/~campbell/cs50/</span><span 
class="cmtt-10">&#x00A0;../../data</span><span 
class="cmtt-10">&#x00A0;0</span><br /><br /></div></div>
<!--l. 527--><p class="noindent" >Here is a good place to start with valgrind:
<div 
class="colorbox" id="colorbox9"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;http://valgrind.org/docs/manual/quick-start.html</span><br /><br /></div>                                 </div>
<!--l. 540--><p class="noindent" ><span 
class="cmbx-10">2) If you can&#8217;t simply figure out the problem by eyeballing your code (i.e., desk checking it),</span>
<span 
class="cmbx-10">then start gdb and set breakpoints at some nearby lin es &#8211; that is before and/or after the</span>
<span 
class="cmbx-10">source code line numbers given by the valgrind error indicated in valout. Step through</span>
<span 
class="cmbx-10">(potentially multiple times), examining variables (e.g., DNODEs) and the code until you</span>
<span 
class="cmbx-10">understand &#8220;the problem&#8221; (always a good place to start) &#8211; and what valgrind is</span>
<span 
class="cmbx-10">complaining about, such as, mememory leaks, writing/reading beyond malloced</span>
<span 
class="cmbx-10">memory</span>.
<!--l. 542--><p class="noindent" >Start by looking at the valout file &#8211; this is the output of valgrind (see the command line). Note, valgrind
runs much more slowly that non valgrind code. In addition, we set the verbose flag in the command.
Ideally you should have no errors but if you do (which you will for sure) then clear all the illegal read and
writes and memory leaks.
<!--l. 544--><p class="noindent" >I would not continue with any further code development until you clear all the valgrind errors; your
CLEAN (no errors) valout file should look like this for example:
<div 
class="colorbox" id="colorbox10"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;78==15102==</span><span 
class="cmtt-10">&#x00A0;HEAP</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;79==15102==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;exit:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;blocks</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;80==15102==</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;heap</span><span 
class="cmtt-10">&#x00A0;usage:</span><span 
class="cmtt-10">&#x00A0;37</span><span 
class="cmtt-10">&#x00A0;allocs,</span><span 
class="cmtt-10">&#x00A0;37</span><span 
class="cmtt-10">&#x00A0;frees,</span><span 
class="cmtt-10">&#x00A0;114,513</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;allocated</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;81==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;82==15102==</span><span 
class="cmtt-10">&#x00A0;All</span><span 
class="cmtt-10">&#x00A0;heap</span><span 
class="cmtt-10">&#x00A0;blocks</span><span 
class="cmtt-10">&#x00A0;were</span><span 
class="cmtt-10">&#x00A0;freed</span><span 
class="cmtt-10">&#x00A0;--</span><span 
class="cmtt-10">&#x00A0;no</span><span 
class="cmtt-10">&#x00A0;leaks</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;possible</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;83==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;84==15102==</span><span 
class="cmtt-10">&#x00A0;ERROR</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;85--15102--</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;86--15102--</span><span 
class="cmtt-10">&#x00A0;used_suppression:</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;glibc-2.5.x-on-SUSE-10.2-(PPC)-2a</span><span 
class="cmtt-10">&#x00A0;/usr/lib64/valgrind/default.\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;supp:1286</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;87==15102==</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;88==15102==</span><span 
class="cmtt-10">&#x00A0;ERROR</span><span 
class="cmtt-10">&#x00A0;SUMMARY:</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;errors</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;0</span><span 
class="cmtt-10">&#x00A0;contexts</span><span 
class="cmtt-10">&#x00A0;(suppressed:</span><span 
class="cmtt-10">&#x00A0;2</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;2)</span><br /><br /></div></div>
<!--l. 568--><p class="noindent" ><span 
class="cmbx-10">3) Of course, there could always be edge cases where something completely unrelated to the</span>
<span 
class="cmbx-10">code is at fault, but these are pretty rare</span>
<!--l. 570--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-20000"></a>What did Dijkstra say about bugs?</h3>
                                                                                  
                                                                                  
<!--l. 572--><p class="noindent" >OK, we are done. Being an effective debugger requires you to have an approach first: a set of techniques
that allow you to work through finding easy and more progressively hard bugs. Tools can be a great
help.
<!--l. 576--><p class="noindent" >In the next lecture, we will talk more about testing your code with the goal of convincing yourself that
your code has no bugs. <span 
class="cmbx-10">However, as Dijkstra said &#8220;testing&#8221; only demonstrate the presence of</span>
<span 
class="cmbx-10">bugs but not their absence</span>. We will talk more about where bugs lerk and how the art of testing can
help discover and remove many of the common bugs.
<!--l. 581--><p class="noindent" ><span 
class="cmbx-10">We strongly recommend that you play with these various versions of buggy</span><span 
class="cmbx-10">_sort and go</span>
<span 
class="cmbx-10">through the notes and reproduce what we did above in a step by step manner; then you can</span>
<span 
class="cmbx-10">apply these simple techniques in nailing your pesky buys</span>.
 
</body></html> 

                                                                                  



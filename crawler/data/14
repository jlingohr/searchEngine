http://www.cs.dartmouth.edu/~campbell/cs50/dynamicmem.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="dynamicmem.tex"> 
<meta name="date" content="2014-01-31 08:59:00"> 
<link rel="stylesheet" type="text/css" href="dynamicmem.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 9</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>Pointers and Dynamic Memory Allocation</h1>
<!--l. 21--><p class="noindent" >In this lecture, we carr on our introduction to the C language.
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 26--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">Pesky pointers continued
     </li>
     <li class="itemize">Dynamic memory allocation
     </li>
     <li class="itemize">Useful header file and macros for TinySearch Engine
     </li>
     <li class="itemize">Useful example of dynamic allocation of crawler data structures
     </li></ul>
<!--l. 36--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>Pointer Arithmetic on Structs</h3>
<!--l. 38--><p class="noindent" >When you incremet and decrement a pointer it adjust based on the data type pointed to by the pointer. In
the previous examples the data type pointed to was a char - which is a byte (8 bits) in terms of strorage.
So p++ (where char *p) increments by obe byte of 8 bits. But what happens if the pointer p points to a
structure?
<!--l. 40--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/pointers.c" > pointers.c </a>
<!--l. 42--><p class="noindent" >The contents of pointers.c looks like this:
                                                                                  
                                                                                  
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;pointers.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Creates</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;types.</span><span 
class="cmtt-10">&#x00A0;Initialises</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;computes</span><br /><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;written</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;study</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;happens</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;incremented</span><br /><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;decremented.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;None</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;display</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;different</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;one</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Lecture</span><span 
class="cmtt-10">&#x00A0;6.</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;definitions</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;are</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;characters.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;typedef</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;define</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;type.</span><span 
class="cmtt-10">&#x00A0;Saves</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;defining</span><span 
class="cmtt-10">&#x00A0;instances</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;type.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_person</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*name;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*addr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;person;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;How</span><span 
class="cmtt-10">&#x00A0;big</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;struct?</span><br /><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;people[NUMPEOPLE];</span><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myname</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;"Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell";</span><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myadr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;"People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich";</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;intiatlise</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;array</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;(which</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;tag)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;person?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;%ld</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0x%x</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes\n",</span><span 
class="cmtt-10">&#x00A0;sizeof(p),</span><span 
class="cmtt-10">&#x00A0;(unsigned</span><span 
class="cmtt-10">&#x00A0;int)sizeof(person));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;variables?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)&amp;p,(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)people);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;increment</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;table</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;decrement</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;previous</span><span 
class="cmtt-10">&#x00A0;person</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p--;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;initialise</span><span 
class="cmtt-10">&#x00A0;our</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].age</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;21;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].name</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myname;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].addr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myadr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;reset</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;(even</span><span 
class="cmtt-10">&#x00A0;though</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;already)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;compute</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;people.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;NOTE,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;incremet</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;move</span><span 
class="cmtt-10">&#x00A0;through</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;Importantly</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;"-&#x003E;"</span><span 
class="cmtt-10">&#x00A0;symbol</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;index</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;-&#x003E;</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;.</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;used</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;%s\n",</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;name,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;addr);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years\n",</span><span 
class="cmtt-10">&#x00A0;age);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /></div></div>
<!--l. 158--><p class="noindent" >If you compile and run pointers then you get the following. Look closely at the pointer values and the
address of the people array of structs and the various sizes of data types including a pointer and the size of
the person struct.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">[atc@dhcp-210-161</span><span 
class="cmtt-10">&#x00A0;l8]</span><span 
class="cmtt-10">&#x00A0;./pointers</span><br /><span 
class="cmtt-10">pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;4</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0xc</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2070,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x208c</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;21</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;2100</span><span 
class="cmtt-10">&#x00A0;years</span><br /><br /></div></div>
<!--l. 178--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>Sorting an array of values</h3>
<!--l. 180--><p class="noindent" >A frequently required operation is to sort an array of, say, integers or characters. The standard C library
provides a generic function named qsort() to help with this, but we must write a pointer-based function to
perform the comparison of the arrays elements:
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;N</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;compare(const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*jp)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(*i</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;*j);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;main(int</span><span 
class="cmtt-10">&#x00A0;argc,</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*argv[])</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;values[N];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srandom(</span><span 
class="cmtt-10">&#x00A0;getpid()</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for(i=0</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i&#x003C;N</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;values[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;random();</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;qsort((void</span><span 
class="cmtt-10">&#x00A0;*)values,</span><span 
class="cmtt-10">&#x00A0;(size_t)N,sizeof(values[0]),</span><span 
class="cmtt-10">&#x00A0;compare);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;....</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(0);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 219--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a>Dynamic memory allocation</h3>
<!--l. 221--><p class="noindent" >The function malloc() returns a requested number of bytes from the operating systems heap. If insufficient
memory is available malloc returns NULL. When we are finished using the space returned by malloc(), our
program should be returned to the heap with a call to free(). If a process continues to malloc() memory
and fails to deallocate it using free(), the process will quickly run out of memory and terminate
ungracefully.
<!--l. 227--><p class="noindent" >The dynamic memory management functions are supported by the standard C library and their detailed
function protypes are found in stdlib.h. Memor allocation functions allow programmers to dynamically
allocate memory from the heap for variables, arrays, and structures; rather that statically allocating space
on the stack. Many times it is not possible to know in advance of run time of a program what the memory
demands for the program are. People that use static allocation somewhat have to second guess what the
worst case memory needs are and statically allocation that at compile time. This is not a good
programming principle. Better to make your program general and capable of dealing with a
wide variety of demands - the message, but the smarts into the program and don&#8217;t second
guess.
<!--l. 229--><p class="noindent" >The following memory management prototypes are supported:
     <ul class="itemize1">
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">calloc()</span></span></span> which dynamically allocates memory - &#8220;c&#8221; stands for contiguous allocation. calloc
     is typically used to allocate contiguous space for arrays. The memory is with all bits set to
     zero/ char arrays to NULL.
                                                                                  
                                                                                  
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> which dynamically allocates memory - &#8220;m&#8221; stands for memory. Similar to calloc
     but more general purpose allocation function. Does not initialize memory (user has to do that
     if necessary).
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">realloc()</span></span></span> which dynamically reallocates allocates memory - &#8220;r&#8221; stands for reallocate memory.
     This function allows the programmer to change the size of previously allocated memory to a
     new size.
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">free()</span></span></span> which deallocates memory releasing the block of memory back to the heap. If memory
     is  continuously  allocated  and  not  released  two  things  may  happen:  memory  leak  or  the
     requesting process could be killed. Take care to free memory.</li></ul>
<!--l. 237--><p class="noindent" ><span 
class="cmbx-10">Note</span>:Unlike Java, C has no garbage collection of heap objects, and so programs must be very careful
about deallocating memory that is no longer required.
<!--l. 240--><p class="noindent" >The memory management functions use &#8220;pointer to void&#8221; (void *) which allows the programmer to assign
the returned pointer to memory to any struct, array, variable without casting. This is a very good example
of the use of pointer to void.
<!--l. 242--><p class="noindent" >Consider the following example which allocates space for a new copy of a given string. This is very similar
to the standard function named strdup():
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;returns</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;requested</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;*malloc(unsigned</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;nbytes);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*newstr(const</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*s)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if(</span><span 
class="cmtt-10">&#x00A0;(p=malloc(strlen(s)+1))</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fprintf(stderr,"out</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;memory!\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(1);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strcpy(p,s);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 273--><p class="noindent" ><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> is also frequently used to allocate memory for structures.
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*line;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*next;</span><br /><span 
class="cmtt-10">&#x00A0;};</span><br /><br /><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(</span><span 
class="cmtt-10">&#x00A0;sizeof(struct</span><span 
class="cmtt-10">&#x00A0;l)</span><span 
class="cmtt-10">&#x00A0;),</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;fgets(buf,</span><span 
class="cmtt-10">&#x00A0;MAX,</span><span 
class="cmtt-10">&#x00A0;fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;while(</span><span 
class="cmtt-10">&#x00A0;!feof(fp)</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=NEW(struct</span><span 
class="cmtt-10">&#x00A0;l);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;line</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;newstr(buf);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;hd;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;p;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fgets(buf,MAX,fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 304--><p class="noindent" >The program below uses <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc</span></span></span> to dynamically create an array of integers based on the user input n. The
program allocates the memory, fills it with random integers scaled between 18 and -9, displays the array
and frees the memory. It does this forever.
<!--l. 306--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/memory.c" > memory.c </a>
<!--l. 308--><p class="noindent" >The contents of memory.c looks like this:
<!--l. 310--><p class="noindent" ><span 
class="cmbx-10">Compilie the code and run it</span>.
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;memory.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Uses</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;create</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;ints.</span><span 
class="cmtt-10">&#x00A0;The</span><br /><span 
class="cmtt-10">&#x00A0;user</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;n.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;allocates</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory,</span><span 
class="cmtt-10">&#x00A0;fills</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;random</span><span 
class="cmtt-10">&#x00A0;integers</span><br /><span 
class="cmtt-10">&#x00A0;scaled</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-9,</span><span 
class="cmtt-10">&#x00A0;displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;does</span><br /><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sums</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;elements.</span><br /><br /><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;problem</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;adapted</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;Book</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;C</span><span 
class="cmtt-10">&#x00A0;(Kelly,</span><span 
class="cmtt-10">&#x00A0;Pohl)</span><span 
class="cmtt-10">&#x00A0;pg.</span><span 
class="cmtt-10">&#x00A0;261.</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;time.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;string.h&#x003E;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;useful</span><span 
class="cmtt-10">&#x00A0;macros.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(),</span><span 
class="cmtt-10">&#x00A0;BZERO(),</span><span 
class="cmtt-10">&#x00A0;MY_ASSERT(),</span><span 
class="cmtt-10">&#x00A0;LOG()</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;prototypes</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srand(time(NULL));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\n%s\n",</span><br />        <span 
class="cmtt-10">&#x00A0;"This</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;following</span><span 
class="cmtt-10">&#x00A0;repeatedly:\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;Create</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;n\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2)</span><span 
class="cmtt-10">&#x00A0;Fill</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;randomly</span><span 
class="cmtt-10">&#x00A0;distributed</span><span 
class="cmtt-10">&#x00A0;digits\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;3)</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;elements\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;4)</span><span 
class="cmtt-10">&#x00A0;Frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;allocated</span><span 
class="cmtt-10">&#x00A0;memory\n");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Input</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;want</span><span 
class="cmtt-10">&#x00A0;created.</span><span 
class="cmtt-10">&#x00A0;n:</span><span 
class="cmtt-10">&#x00A0;");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(scanf("%d",</span><span 
class="cmtt-10">&#x00A0;&amp;n)</span><span 
class="cmtt-10">&#x00A0;!=1</span><span 
class="cmtt-10">&#x00A0;||</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;LOG("Usage:</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;has</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;&#x003E;</span><span 
class="cmtt-10">&#x00A0;0\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;continue;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;try</span><span 
class="cmtt-10">&#x00A0;again</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;malloc()</span><span 
class="cmtt-10">&#x00A0;allocate</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;unused</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;object</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;n</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;unspecified.</span><span 
class="cmtt-10">&#x00A0;Because</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;good</span><span 
class="cmtt-10">&#x00A0;idea</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//to</span><span 
class="cmtt-10">&#x00A0;zeroise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;returned</span><span 
class="cmtt-10">&#x00A0;memory.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;putchar(&#8217;\n&#8217;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;bytes;</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ip</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;malloc&#8217;d</span><span 
class="cmtt-10">&#x00A0;array,</span><span 
class="cmtt-10">&#x00A0;recall</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;could</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;value</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;BZERO&#8217;d</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(ip,</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;initialed</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sum</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;initArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Sum</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;%d\n\n",</span><span 
class="cmtt-10">&#x00A0;sumArray(ip,</span><span 
class="cmtt-10">&#x00A0;n));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;don&#8217;t</span><span 
class="cmtt-10">&#x00A0;forget</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;free</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;leaks</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;free(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\nLater!\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;a[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;rand()%19</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;scales</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i,</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;=0;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;a[i];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(sum);</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("a</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;[");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%d%s",</span><span 
class="cmtt-10">&#x00A0;a[i],</span><span 
class="cmtt-10">&#x00A0;((i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;?</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;:</span><span 
class="cmtt-10">&#x00A0;"]\n"));</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 445--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a>Use macros and header files</h3>
<!--l. 447--><p class="noindent" >Here is the header file header.h. It defines a number of useful macros that you can use in the TinySearch
Engine project.
<!--l. 450--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/header.h" > header.h </a>
                                                                                  
                                                                                  
<!--l. 452--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;header.h</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;utilites</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TinySearchEngine</span><span 
class="cmtt-10">&#x00A0;engine</span><span 
class="cmtt-10">&#x00A0;project</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;MACROs</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;initialization</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;some</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;exceptions</span><span 
class="cmtt-10">&#x00A0;processing</span><br /><span 
class="cmtt-10">//</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;makes</span><span 
class="cmtt-10">&#x00A0;sure</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;include</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;twice.</span><span 
class="cmtt-10">&#x00A0;Use</span><span 
class="cmtt-10">&#x00A0;it.</span><br /><br /><span 
class="cmtt-10">#ifndef</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;min(x,y)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;((x)&#x003E;(y))?(y):(x)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Print</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;together</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;source</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;current</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;number.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;LOG(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("[%s:%d]%s\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__,</span><span 
class="cmtt-10">&#x00A0;s)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;new</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;t</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MYASSERT(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(!(s))</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("General</span><span 
class="cmtt-10">&#x00A0;Assert</span><span 
class="cmtt-10">&#x00A0;Error</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;((s)</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("No</span><span 
class="cmtt-10">&#x00A0;enough</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;perror(":");</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;starts</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;m</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;zero.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;BZERO(n,m)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;memset(n,</span><span 
class="cmtt-10">&#x00A0;0,</span><span 
class="cmtt-10">&#x00A0;m)</span><br /><br /><span 
class="cmtt-10">#endif</span><br /><br /></div></div>
<!--l. 506--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-9000"></a>Examples of mallocing crawler data structures</h3>
<!--l. 508--><p class="noindent" >We have discuss pointers and we have looked at simple allocation of arrays using dynamic
memory. Note that malloc (which we will use through the course) returns a &#8220;pointer to void&#8221;
(void *) allowing the returning pointer to be &#8220;cast&#8221; to any data structure. In what follows,
we use sample code that is relevant to the crawler and allocate memory for some important
data structures, including, the dictionary, DNODE and URLNODE. Don&#8217;t worry that you do
not know the meaning of these structures at this point. You will become very familiar with
them.
<!--l. 515--><p class="noindent" >So let&#8217;s write some code to dynamically create the dictionary. After that we will allocate a URLNODE
and DNODE and link them into the structure. This is similar to what you need to do in the real crawler
code - so take a close look.
<!--l. 519--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/dictionary-example.c" > dictionary-example.c </a>
<!--l. 521--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;dictionary-example.c</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Descriptions:</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;goal</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;show</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocating</span><span 
class="cmtt-10">&#x00A0;memory</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dat</span><span 
class="cmtt-10">&#x00A0;structures.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;example</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;shows</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;void/</span><span 
class="cmtt-10">&#x00A0;casting</span><span 
class="cmtt-10">&#x00A0;pointers</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;used.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;drawn</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;implementation.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;While</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;imcomplete</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;illustrates</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;important</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structures</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;such</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DICTIONARY,</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;created</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;malloc.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary:</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;provides</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;purpose</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;based</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;where</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;URLNODEs)</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;assigned</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;stored</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;DNODE.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;blown</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;functions</span><span 
class="cmtt-10">&#x00A0;(not</span><span 
class="cmtt-10">&#x00A0;presented</span><span 
class="cmtt-10">&#x00A0;below)</span><span 
class="cmtt-10">&#x00A0;provide</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;adding/removing/searching</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(URLNODEs)</span><span 
class="cmtt-10">&#x00A0;inside</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;super</span><span 
class="cmtt-10">&#x00A0;fast</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;speed.</span><br /><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;memory.h&#x003E;</span><br /><span 
class="cmtt-10">//#include</span><span 
class="cmtt-10">&#x00A0;"dictionary.h"</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Unlikely</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;more</span><span 
class="cmtt-10">&#x00A0;than</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;longer</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;1000</span><span 
class="cmtt-10">&#x00A0;chars.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;term</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;a</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;Dictionary/hash</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;term</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;KEY_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Maximum</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;within</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_HASH_SLOT</span><span 
class="cmtt-10">&#x00A0;10000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;structures</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;dictionary.h</span><span 
class="cmtt-10">&#x00A0;but</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;put</span><span 
class="cmtt-10">&#x00A0;them</span><span 
class="cmtt-10">&#x00A0;here</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;ease</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;discussion.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;next;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;prev;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void*</span><span 
class="cmtt-10">&#x00A0;data;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;data,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;key[KEY_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;key,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DNODE;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;DNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;holds</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;double</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;unordered</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;exception</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;(URL)</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;clusters</span><span 
class="cmtt-10">&#x00A0;along</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;So</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;uniqueness</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;found</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;cluster</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;wit</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;addElement</span><span 
class="cmtt-10">&#x00A0;function.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;hash[MAX_HASH_SLOT];</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;slots,</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;DNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;start;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;double</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;terminated</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;pointer</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;end;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;last</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;list</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DICTIONARY;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;DICTIONARY;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;max</span><span 
class="cmtt-10">&#x00A0;length</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;path.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_URL_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;store</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;information</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;url[MAX_URL_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;e.g.,</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;depth;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;visited;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;crawled</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not,</span><span 
class="cmtt-10">&#x00A0;marked</span><span 
class="cmtt-10">&#x00A0;true(1),</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;false(0)</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__URL;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL</span><span 
class="cmtt-10">&#x00A0;URLNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;routine</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;fixed</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;keep</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;happy</span><br /><br /><span 
class="cmtt-10">unsigned</span><span 
class="cmtt-10">&#x00A0;long</span><span 
class="cmtt-10">&#x00A0;hash=20;</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;make_hash(char</span><span 
class="cmtt-10">&#x00A0;*c)</span><br /><span 
class="cmtt-10">{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(hash);</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main(void){</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;depth</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;*url="http://www.cs.dartmouth.edu/~campbell/";</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Initialise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*dict</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DICTIONARY));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(dict,</span><span 
class="cmtt-10">&#x00A0;sizeof(DICTIONARY));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;*n</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(URLNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(URLNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;depth;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;sizeof(n-&#x003E;url));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strncpy(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;url,</span><span 
class="cmtt-10">&#x00A0;strlen(url));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;At</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;point</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;call</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;did</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exist;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;example,</span><span 
class="cmtt-10">&#x00A0;DAdd(dict,</span><span 
class="cmtt-10">&#x00A0;n,</span><span 
class="cmtt-10">&#x00A0;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;function.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;course</span><span 
class="cmtt-10">&#x00A0;incomplete.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;h</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;make_hash(url);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MYASSERT(dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;*d</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(d,</span><span 
class="cmtt-10">&#x00A0;sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;hash[h]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;NULL;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;copy</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;here</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;dict:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("hash</span><span 
class="cmtt-10">&#x00A0;%lu\n",</span><span 
class="cmtt-10">&#x00A0;hash);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;hash[hash]</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;hash[hash]);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;end);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;d:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;next);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;prev);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;data);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;key</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;initialized</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;example");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;structure:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;url</span><span 
class="cmtt-10">&#x00A0;%s\n",n-&#x003E;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;depth);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;visited);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exists</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;exist</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;initial</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/dynamicmem.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="dynamicmem.tex"> 
<meta name="date" content="2014-01-31 08:59:00"> 
<link rel="stylesheet" type="text/css" href="dynamicmem.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 9</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>Pointers and Dynamic Memory Allocation</h1>
<!--l. 21--><p class="noindent" >In this lecture, we carr on our introduction to the C language.
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 26--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">Pesky pointers continued
     </li>
     <li class="itemize">Dynamic memory allocation
     </li>
     <li class="itemize">Useful header file and macros for TinySearch Engine
     </li>
     <li class="itemize">Useful example of dynamic allocation of crawler data structures
     </li></ul>
<!--l. 36--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>Pointer Arithmetic on Structs</h3>
<!--l. 38--><p class="noindent" >When you incremet and decrement a pointer it adjust based on the data type pointed to by the pointer. In
the previous examples the data type pointed to was a char - which is a byte (8 bits) in terms of strorage.
So p++ (where char *p) increments by obe byte of 8 bits. But what happens if the pointer p points to a
structure?
<!--l. 40--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/pointers.c" > pointers.c </a>
<!--l. 42--><p class="noindent" >The contents of pointers.c looks like this:
                                                                                  
                                                                                  
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;pointers.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Creates</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;types.</span><span 
class="cmtt-10">&#x00A0;Initialises</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;computes</span><br /><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;written</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;study</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;happens</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;incremented</span><br /><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;decremented.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;None</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;display</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;different</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;one</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Lecture</span><span 
class="cmtt-10">&#x00A0;6.</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;definitions</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;are</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;characters.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;typedef</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;define</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;type.</span><span 
class="cmtt-10">&#x00A0;Saves</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;defining</span><span 
class="cmtt-10">&#x00A0;instances</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;type.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_person</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*name;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*addr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;person;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;How</span><span 
class="cmtt-10">&#x00A0;big</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;struct?</span><br /><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;people[NUMPEOPLE];</span><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myname</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;"Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell";</span><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myadr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;"People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich";</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;intiatlise</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;array</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;(which</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;tag)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;person?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;%ld</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0x%x</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes\n",</span><span 
class="cmtt-10">&#x00A0;sizeof(p),</span><span 
class="cmtt-10">&#x00A0;(unsigned</span><span 
class="cmtt-10">&#x00A0;int)sizeof(person));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;variables?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)&amp;p,(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)people);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;increment</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;table</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;decrement</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;previous</span><span 
class="cmtt-10">&#x00A0;person</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p--;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;initialise</span><span 
class="cmtt-10">&#x00A0;our</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].age</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;21;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].name</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myname;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].addr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myadr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;reset</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;(even</span><span 
class="cmtt-10">&#x00A0;though</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;already)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;compute</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;people.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;NOTE,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;incremet</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;move</span><span 
class="cmtt-10">&#x00A0;through</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;Importantly</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;"-&#x003E;"</span><span 
class="cmtt-10">&#x00A0;symbol</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;index</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;-&#x003E;</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;.</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;used</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;%s\n",</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;name,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;addr);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years\n",</span><span 
class="cmtt-10">&#x00A0;age);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /></div></div>
<!--l. 158--><p class="noindent" >If you compile and run pointers then you get the following. Look closely at the pointer values and the
address of the people array of structs and the various sizes of data types including a pointer and the size of
the person struct.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">[atc@dhcp-210-161</span><span 
class="cmtt-10">&#x00A0;l8]</span><span 
class="cmtt-10">&#x00A0;./pointers</span><br /><span 
class="cmtt-10">pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;4</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0xc</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2070,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x208c</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;21</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;2100</span><span 
class="cmtt-10">&#x00A0;years</span><br /><br /></div></div>
<!--l. 178--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>Sorting an array of values</h3>
<!--l. 180--><p class="noindent" >A frequently required operation is to sort an array of, say, integers or characters. The standard C library
provides a generic function named qsort() to help with this, but we must write a pointer-based function to
perform the comparison of the arrays elements:
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;N</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;compare(const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*jp)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(*i</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;*j);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;main(int</span><span 
class="cmtt-10">&#x00A0;argc,</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*argv[])</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;values[N];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srandom(</span><span 
class="cmtt-10">&#x00A0;getpid()</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for(i=0</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i&#x003C;N</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;values[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;random();</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;qsort((void</span><span 
class="cmtt-10">&#x00A0;*)values,</span><span 
class="cmtt-10">&#x00A0;(size_t)N,sizeof(values[0]),</span><span 
class="cmtt-10">&#x00A0;compare);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;....</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(0);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 219--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a>Dynamic memory allocation</h3>
<!--l. 221--><p class="noindent" >The function malloc() returns a requested number of bytes from the operating systems heap. If insufficient
memory is available malloc returns NULL. When we are finished using the space returned by malloc(), our
program should be returned to the heap with a call to free(). If a process continues to malloc() memory
and fails to deallocate it using free(), the process will quickly run out of memory and terminate
ungracefully.
<!--l. 227--><p class="noindent" >The dynamic memory management functions are supported by the standard C library and their detailed
function protypes are found in stdlib.h. Memor allocation functions allow programmers to dynamically
allocate memory from the heap for variables, arrays, and structures; rather that statically allocating space
on the stack. Many times it is not possible to know in advance of run time of a program what the memory
demands for the program are. People that use static allocation somewhat have to second guess what the
worst case memory needs are and statically allocation that at compile time. This is not a good
programming principle. Better to make your program general and capable of dealing with a
wide variety of demands - the message, but the smarts into the program and don&#8217;t second
guess.
<!--l. 229--><p class="noindent" >The following memory management prototypes are supported:
     <ul class="itemize1">
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">calloc()</span></span></span> which dynamically allocates memory - &#8220;c&#8221; stands for contiguous allocation. calloc
     is typically used to allocate contiguous space for arrays. The memory is with all bits set to
     zero/ char arrays to NULL.
                                                                                  
                                                                                  
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> which dynamically allocates memory - &#8220;m&#8221; stands for memory. Similar to calloc
     but more general purpose allocation function. Does not initialize memory (user has to do that
     if necessary).
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">realloc()</span></span></span> which dynamically reallocates allocates memory - &#8220;r&#8221; stands for reallocate memory.
     This function allows the programmer to change the size of previously allocated memory to a
     new size.
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">free()</span></span></span> which deallocates memory releasing the block of memory back to the heap. If memory
     is  continuously  allocated  and  not  released  two  things  may  happen:  memory  leak  or  the
     requesting process could be killed. Take care to free memory.</li></ul>
<!--l. 237--><p class="noindent" ><span 
class="cmbx-10">Note</span>:Unlike Java, C has no garbage collection of heap objects, and so programs must be very careful
about deallocating memory that is no longer required.
<!--l. 240--><p class="noindent" >The memory management functions use &#8220;pointer to void&#8221; (void *) which allows the programmer to assign
the returned pointer to memory to any struct, array, variable without casting. This is a very good example
of the use of pointer to void.
<!--l. 242--><p class="noindent" >Consider the following example which allocates space for a new copy of a given string. This is very similar
to the standard function named strdup():
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;returns</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;requested</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;*malloc(unsigned</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;nbytes);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*newstr(const</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*s)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if(</span><span 
class="cmtt-10">&#x00A0;(p=malloc(strlen(s)+1))</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fprintf(stderr,"out</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;memory!\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(1);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strcpy(p,s);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 273--><p class="noindent" ><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> is also frequently used to allocate memory for structures.
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*line;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*next;</span><br /><span 
class="cmtt-10">&#x00A0;};</span><br /><br /><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(</span><span 
class="cmtt-10">&#x00A0;sizeof(struct</span><span 
class="cmtt-10">&#x00A0;l)</span><span 
class="cmtt-10">&#x00A0;),</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;fgets(buf,</span><span 
class="cmtt-10">&#x00A0;MAX,</span><span 
class="cmtt-10">&#x00A0;fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;while(</span><span 
class="cmtt-10">&#x00A0;!feof(fp)</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=NEW(struct</span><span 
class="cmtt-10">&#x00A0;l);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;line</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;newstr(buf);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;hd;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;p;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fgets(buf,MAX,fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 304--><p class="noindent" >The program below uses <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc</span></span></span> to dynamically create an array of integers based on the user input n. The
program allocates the memory, fills it with random integers scaled between 18 and -9, displays the array
and frees the memory. It does this forever.
<!--l. 306--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/memory.c" > memory.c </a>
<!--l. 308--><p class="noindent" >The contents of memory.c looks like this:
<!--l. 310--><p class="noindent" ><span 
class="cmbx-10">Compilie the code and run it</span>.
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;memory.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Uses</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;create</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;ints.</span><span 
class="cmtt-10">&#x00A0;The</span><br /><span 
class="cmtt-10">&#x00A0;user</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;n.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;allocates</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory,</span><span 
class="cmtt-10">&#x00A0;fills</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;random</span><span 
class="cmtt-10">&#x00A0;integers</span><br /><span 
class="cmtt-10">&#x00A0;scaled</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-9,</span><span 
class="cmtt-10">&#x00A0;displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;does</span><br /><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sums</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;elements.</span><br /><br /><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;problem</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;adapted</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;Book</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;C</span><span 
class="cmtt-10">&#x00A0;(Kelly,</span><span 
class="cmtt-10">&#x00A0;Pohl)</span><span 
class="cmtt-10">&#x00A0;pg.</span><span 
class="cmtt-10">&#x00A0;261.</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;time.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;string.h&#x003E;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;useful</span><span 
class="cmtt-10">&#x00A0;macros.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(),</span><span 
class="cmtt-10">&#x00A0;BZERO(),</span><span 
class="cmtt-10">&#x00A0;MY_ASSERT(),</span><span 
class="cmtt-10">&#x00A0;LOG()</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;prototypes</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srand(time(NULL));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\n%s\n",</span><br />        <span 
class="cmtt-10">&#x00A0;"This</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;following</span><span 
class="cmtt-10">&#x00A0;repeatedly:\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;Create</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;n\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2)</span><span 
class="cmtt-10">&#x00A0;Fill</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;randomly</span><span 
class="cmtt-10">&#x00A0;distributed</span><span 
class="cmtt-10">&#x00A0;digits\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;3)</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;elements\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;4)</span><span 
class="cmtt-10">&#x00A0;Frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;allocated</span><span 
class="cmtt-10">&#x00A0;memory\n");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Input</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;want</span><span 
class="cmtt-10">&#x00A0;created.</span><span 
class="cmtt-10">&#x00A0;n:</span><span 
class="cmtt-10">&#x00A0;");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(scanf("%d",</span><span 
class="cmtt-10">&#x00A0;&amp;n)</span><span 
class="cmtt-10">&#x00A0;!=1</span><span 
class="cmtt-10">&#x00A0;||</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;LOG("Usage:</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;has</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;&#x003E;</span><span 
class="cmtt-10">&#x00A0;0\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;continue;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;try</span><span 
class="cmtt-10">&#x00A0;again</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;malloc()</span><span 
class="cmtt-10">&#x00A0;allocate</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;unused</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;object</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;n</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;unspecified.</span><span 
class="cmtt-10">&#x00A0;Because</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;good</span><span 
class="cmtt-10">&#x00A0;idea</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//to</span><span 
class="cmtt-10">&#x00A0;zeroise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;returned</span><span 
class="cmtt-10">&#x00A0;memory.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;putchar(&#8217;\n&#8217;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;bytes;</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ip</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;malloc&#8217;d</span><span 
class="cmtt-10">&#x00A0;array,</span><span 
class="cmtt-10">&#x00A0;recall</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;could</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;value</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;BZERO&#8217;d</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(ip,</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;initialed</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sum</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;initArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Sum</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;%d\n\n",</span><span 
class="cmtt-10">&#x00A0;sumArray(ip,</span><span 
class="cmtt-10">&#x00A0;n));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;don&#8217;t</span><span 
class="cmtt-10">&#x00A0;forget</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;free</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;leaks</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;free(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\nLater!\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;a[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;rand()%19</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;scales</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i,</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;=0;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;a[i];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(sum);</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("a</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;[");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%d%s",</span><span 
class="cmtt-10">&#x00A0;a[i],</span><span 
class="cmtt-10">&#x00A0;((i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;?</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;:</span><span 
class="cmtt-10">&#x00A0;"]\n"));</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 445--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a>Use macros and header files</h3>
<!--l. 447--><p class="noindent" >Here is the header file header.h. It defines a number of useful macros that you can use in the TinySearch
Engine project.
<!--l. 450--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/header.h" > header.h </a>
                                                                                  
                                                                                  
<!--l. 452--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;header.h</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;utilites</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TinySearchEngine</span><span 
class="cmtt-10">&#x00A0;engine</span><span 
class="cmtt-10">&#x00A0;project</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;MACROs</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;initialization</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;some</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;exceptions</span><span 
class="cmtt-10">&#x00A0;processing</span><br /><span 
class="cmtt-10">//</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;makes</span><span 
class="cmtt-10">&#x00A0;sure</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;include</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;twice.</span><span 
class="cmtt-10">&#x00A0;Use</span><span 
class="cmtt-10">&#x00A0;it.</span><br /><br /><span 
class="cmtt-10">#ifndef</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;min(x,y)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;((x)&#x003E;(y))?(y):(x)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Print</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;together</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;source</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;current</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;number.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;LOG(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("[%s:%d]%s\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__,</span><span 
class="cmtt-10">&#x00A0;s)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;new</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;t</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MYASSERT(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(!(s))</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("General</span><span 
class="cmtt-10">&#x00A0;Assert</span><span 
class="cmtt-10">&#x00A0;Error</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;((s)</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("No</span><span 
class="cmtt-10">&#x00A0;enough</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;perror(":");</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;starts</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;m</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;zero.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;BZERO(n,m)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;memset(n,</span><span 
class="cmtt-10">&#x00A0;0,</span><span 
class="cmtt-10">&#x00A0;m)</span><br /><br /><span 
class="cmtt-10">#endif</span><br /><br /></div></div>
<!--l. 506--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-9000"></a>Examples of mallocing crawler data structures</h3>
<!--l. 508--><p class="noindent" >We have discuss pointers and we have looked at simple allocation of arrays using dynamic
memory. Note that malloc (which we will use through the course) returns a &#8220;pointer to void&#8221;
(void *) allowing the returning pointer to be &#8220;cast&#8221; to any data structure. In what follows,
we use sample code that is relevant to the crawler and allocate memory for some important
data structures, including, the dictionary, DNODE and URLNODE. Don&#8217;t worry that you do
not know the meaning of these structures at this point. You will become very familiar with
them.
<!--l. 515--><p class="noindent" >So let&#8217;s write some code to dynamically create the dictionary. After that we will allocate a URLNODE
and DNODE and link them into the structure. This is similar to what you need to do in the real crawler
code - so take a close look.
<!--l. 519--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/dictionary-example.c" > dictionary-example.c </a>
<!--l. 521--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;dictionary-example.c</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Descriptions:</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;goal</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;show</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocating</span><span 
class="cmtt-10">&#x00A0;memory</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dat</span><span 
class="cmtt-10">&#x00A0;structures.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;example</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;shows</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;void/</span><span 
class="cmtt-10">&#x00A0;casting</span><span 
class="cmtt-10">&#x00A0;pointers</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;used.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;drawn</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;implementation.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;While</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;imcomplete</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;illustrates</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;important</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structures</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;such</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DICTIONARY,</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;created</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;malloc.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary:</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;provides</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;purpose</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;based</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;where</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;URLNODEs)</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;assigned</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;stored</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;DNODE.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;blown</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;functions</span><span 
class="cmtt-10">&#x00A0;(not</span><span 
class="cmtt-10">&#x00A0;presented</span><span 
class="cmtt-10">&#x00A0;below)</span><span 
class="cmtt-10">&#x00A0;provide</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;adding/removing/searching</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(URLNODEs)</span><span 
class="cmtt-10">&#x00A0;inside</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;super</span><span 
class="cmtt-10">&#x00A0;fast</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;speed.</span><br /><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;memory.h&#x003E;</span><br /><span 
class="cmtt-10">//#include</span><span 
class="cmtt-10">&#x00A0;"dictionary.h"</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Unlikely</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;more</span><span 
class="cmtt-10">&#x00A0;than</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;longer</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;1000</span><span 
class="cmtt-10">&#x00A0;chars.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;term</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;a</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;Dictionary/hash</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;term</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;KEY_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Maximum</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;within</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_HASH_SLOT</span><span 
class="cmtt-10">&#x00A0;10000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;structures</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;dictionary.h</span><span 
class="cmtt-10">&#x00A0;but</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;put</span><span 
class="cmtt-10">&#x00A0;them</span><span 
class="cmtt-10">&#x00A0;here</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;ease</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;discussion.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;next;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;prev;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void*</span><span 
class="cmtt-10">&#x00A0;data;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;data,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;key[KEY_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;key,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DNODE;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;DNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;holds</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;double</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;unordered</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;exception</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;(URL)</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;clusters</span><span 
class="cmtt-10">&#x00A0;along</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;So</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;uniqueness</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;found</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;cluster</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;wit</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;addElement</span><span 
class="cmtt-10">&#x00A0;function.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;hash[MAX_HASH_SLOT];</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;slots,</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;DNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;start;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;double</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;terminated</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;pointer</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;end;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;last</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;list</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DICTIONARY;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;DICTIONARY;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;max</span><span 
class="cmtt-10">&#x00A0;length</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;path.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_URL_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;store</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;information</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;url[MAX_URL_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;e.g.,</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;depth;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;visited;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;crawled</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not,</span><span 
class="cmtt-10">&#x00A0;marked</span><span 
class="cmtt-10">&#x00A0;true(1),</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;false(0)</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__URL;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL</span><span 
class="cmtt-10">&#x00A0;URLNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;routine</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;fixed</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;keep</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;happy</span><br /><br /><span 
class="cmtt-10">unsigned</span><span 
class="cmtt-10">&#x00A0;long</span><span 
class="cmtt-10">&#x00A0;hash=20;</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;make_hash(char</span><span 
class="cmtt-10">&#x00A0;*c)</span><br /><span 
class="cmtt-10">{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(hash);</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main(void){</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;depth</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;*url="http://www.cs.dartmouth.edu/~campbell/";</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Initialise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*dict</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DICTIONARY));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(dict,</span><span 
class="cmtt-10">&#x00A0;sizeof(DICTIONARY));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;*n</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(URLNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(URLNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;depth;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;sizeof(n-&#x003E;url));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strncpy(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;url,</span><span 
class="cmtt-10">&#x00A0;strlen(url));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;At</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;point</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;call</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;did</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exist;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;example,</span><span 
class="cmtt-10">&#x00A0;DAdd(dict,</span><span 
class="cmtt-10">&#x00A0;n,</span><span 
class="cmtt-10">&#x00A0;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;function.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;course</span><span 
class="cmtt-10">&#x00A0;incomplete.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;h</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;make_hash(url);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MYASSERT(dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;*d</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(d,</span><span 
class="cmtt-10">&#x00A0;sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;hash[h]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;NULL;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;copy</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;here</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;dict:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("hash</span><span 
class="cmtt-10">&#x00A0;%lu\n",</span><span 
class="cmtt-10">&#x00A0;hash);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;hash[hash]</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;hash[hash]);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;end);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;d:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;next);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;prev);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;data);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;key</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;initialized</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;example");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;structure:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;url</span><span 
class="cmtt-10">&#x00A0;%s\n",n-&#x003E;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;depth);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;visited);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exists</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;exist</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;initial</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/dynamicmem.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="dynamicmem.tex"> 
<meta name="date" content="2014-01-31 08:59:00"> 
<link rel="stylesheet" type="text/css" href="dynamicmem.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 9</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>Pointers and Dynamic Memory Allocation</h1>
<!--l. 21--><p class="noindent" >In this lecture, we carr on our introduction to the C language.
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 26--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">Pesky pointers continued
     </li>
     <li class="itemize">Dynamic memory allocation
     </li>
     <li class="itemize">Useful header file and macros for TinySearch Engine
     </li>
     <li class="itemize">Useful example of dynamic allocation of crawler data structures
     </li></ul>
<!--l. 36--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>Pointer Arithmetic on Structs</h3>
<!--l. 38--><p class="noindent" >When you incremet and decrement a pointer it adjust based on the data type pointed to by the pointer. In
the previous examples the data type pointed to was a char - which is a byte (8 bits) in terms of strorage.
So p++ (where char *p) increments by obe byte of 8 bits. But what happens if the pointer p points to a
structure?
<!--l. 40--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/pointers.c" > pointers.c </a>
<!--l. 42--><p class="noindent" >The contents of pointers.c looks like this:
                                                                                  
                                                                                  
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;pointers.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Creates</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;types.</span><span 
class="cmtt-10">&#x00A0;Initialises</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;computes</span><br /><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;written</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;study</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;happens</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;incremented</span><br /><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;decremented.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;None</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;display</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;different</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;one</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Lecture</span><span 
class="cmtt-10">&#x00A0;6.</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;definitions</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;are</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;characters.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;typedef</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;define</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;type.</span><span 
class="cmtt-10">&#x00A0;Saves</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;defining</span><span 
class="cmtt-10">&#x00A0;instances</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;type.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_person</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*name;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*addr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;person;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;How</span><span 
class="cmtt-10">&#x00A0;big</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;struct?</span><br /><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;people[NUMPEOPLE];</span><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myname</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;"Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell";</span><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myadr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;"People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich";</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;intiatlise</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;array</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;(which</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;tag)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;person?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;%ld</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0x%x</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes\n",</span><span 
class="cmtt-10">&#x00A0;sizeof(p),</span><span 
class="cmtt-10">&#x00A0;(unsigned</span><span 
class="cmtt-10">&#x00A0;int)sizeof(person));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;variables?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)&amp;p,(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)people);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;increment</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;table</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;decrement</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;previous</span><span 
class="cmtt-10">&#x00A0;person</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p--;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;initialise</span><span 
class="cmtt-10">&#x00A0;our</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].age</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;21;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].name</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myname;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].addr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myadr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;reset</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;(even</span><span 
class="cmtt-10">&#x00A0;though</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;already)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;compute</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;people.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;NOTE,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;incremet</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;move</span><span 
class="cmtt-10">&#x00A0;through</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;Importantly</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;"-&#x003E;"</span><span 
class="cmtt-10">&#x00A0;symbol</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;index</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;-&#x003E;</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;.</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;used</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;%s\n",</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;name,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;addr);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years\n",</span><span 
class="cmtt-10">&#x00A0;age);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /></div></div>
<!--l. 158--><p class="noindent" >If you compile and run pointers then you get the following. Look closely at the pointer values and the
address of the people array of structs and the various sizes of data types including a pointer and the size of
the person struct.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">[atc@dhcp-210-161</span><span 
class="cmtt-10">&#x00A0;l8]</span><span 
class="cmtt-10">&#x00A0;./pointers</span><br /><span 
class="cmtt-10">pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;4</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0xc</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2070,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x208c</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;21</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;2100</span><span 
class="cmtt-10">&#x00A0;years</span><br /><br /></div></div>
<!--l. 178--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>Sorting an array of values</h3>
<!--l. 180--><p class="noindent" >A frequently required operation is to sort an array of, say, integers or characters. The standard C library
provides a generic function named qsort() to help with this, but we must write a pointer-based function to
perform the comparison of the arrays elements:
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;N</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;compare(const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*jp)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(*i</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;*j);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;main(int</span><span 
class="cmtt-10">&#x00A0;argc,</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*argv[])</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;values[N];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srandom(</span><span 
class="cmtt-10">&#x00A0;getpid()</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for(i=0</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i&#x003C;N</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;values[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;random();</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;qsort((void</span><span 
class="cmtt-10">&#x00A0;*)values,</span><span 
class="cmtt-10">&#x00A0;(size_t)N,sizeof(values[0]),</span><span 
class="cmtt-10">&#x00A0;compare);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;....</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(0);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 219--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a>Dynamic memory allocation</h3>
<!--l. 221--><p class="noindent" >The function malloc() returns a requested number of bytes from the operating systems heap. If insufficient
memory is available malloc returns NULL. When we are finished using the space returned by malloc(), our
program should be returned to the heap with a call to free(). If a process continues to malloc() memory
and fails to deallocate it using free(), the process will quickly run out of memory and terminate
ungracefully.
<!--l. 227--><p class="noindent" >The dynamic memory management functions are supported by the standard C library and their detailed
function protypes are found in stdlib.h. Memor allocation functions allow programmers to dynamically
allocate memory from the heap for variables, arrays, and structures; rather that statically allocating space
on the stack. Many times it is not possible to know in advance of run time of a program what the memory
demands for the program are. People that use static allocation somewhat have to second guess what the
worst case memory needs are and statically allocation that at compile time. This is not a good
programming principle. Better to make your program general and capable of dealing with a
wide variety of demands - the message, but the smarts into the program and don&#8217;t second
guess.
<!--l. 229--><p class="noindent" >The following memory management prototypes are supported:
     <ul class="itemize1">
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">calloc()</span></span></span> which dynamically allocates memory - &#8220;c&#8221; stands for contiguous allocation. calloc
     is typically used to allocate contiguous space for arrays. The memory is with all bits set to
     zero/ char arrays to NULL.
                                                                                  
                                                                                  
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> which dynamically allocates memory - &#8220;m&#8221; stands for memory. Similar to calloc
     but more general purpose allocation function. Does not initialize memory (user has to do that
     if necessary).
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">realloc()</span></span></span> which dynamically reallocates allocates memory - &#8220;r&#8221; stands for reallocate memory.
     This function allows the programmer to change the size of previously allocated memory to a
     new size.
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">free()</span></span></span> which deallocates memory releasing the block of memory back to the heap. If memory
     is  continuously  allocated  and  not  released  two  things  may  happen:  memory  leak  or  the
     requesting process could be killed. Take care to free memory.</li></ul>
<!--l. 237--><p class="noindent" ><span 
class="cmbx-10">Note</span>:Unlike Java, C has no garbage collection of heap objects, and so programs must be very careful
about deallocating memory that is no longer required.
<!--l. 240--><p class="noindent" >The memory management functions use &#8220;pointer to void&#8221; (void *) which allows the programmer to assign
the returned pointer to memory to any struct, array, variable without casting. This is a very good example
of the use of pointer to void.
<!--l. 242--><p class="noindent" >Consider the following example which allocates space for a new copy of a given string. This is very similar
to the standard function named strdup():
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;returns</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;requested</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;*malloc(unsigned</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;nbytes);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*newstr(const</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*s)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if(</span><span 
class="cmtt-10">&#x00A0;(p=malloc(strlen(s)+1))</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fprintf(stderr,"out</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;memory!\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(1);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strcpy(p,s);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 273--><p class="noindent" ><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> is also frequently used to allocate memory for structures.
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*line;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*next;</span><br /><span 
class="cmtt-10">&#x00A0;};</span><br /><br /><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(</span><span 
class="cmtt-10">&#x00A0;sizeof(struct</span><span 
class="cmtt-10">&#x00A0;l)</span><span 
class="cmtt-10">&#x00A0;),</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;fgets(buf,</span><span 
class="cmtt-10">&#x00A0;MAX,</span><span 
class="cmtt-10">&#x00A0;fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;while(</span><span 
class="cmtt-10">&#x00A0;!feof(fp)</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=NEW(struct</span><span 
class="cmtt-10">&#x00A0;l);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;line</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;newstr(buf);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;hd;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;p;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fgets(buf,MAX,fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 304--><p class="noindent" >The program below uses <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc</span></span></span> to dynamically create an array of integers based on the user input n. The
program allocates the memory, fills it with random integers scaled between 18 and -9, displays the array
and frees the memory. It does this forever.
<!--l. 306--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/memory.c" > memory.c </a>
<!--l. 308--><p class="noindent" >The contents of memory.c looks like this:
<!--l. 310--><p class="noindent" ><span 
class="cmbx-10">Compilie the code and run it</span>.
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;memory.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Uses</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;create</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;ints.</span><span 
class="cmtt-10">&#x00A0;The</span><br /><span 
class="cmtt-10">&#x00A0;user</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;n.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;allocates</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory,</span><span 
class="cmtt-10">&#x00A0;fills</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;random</span><span 
class="cmtt-10">&#x00A0;integers</span><br /><span 
class="cmtt-10">&#x00A0;scaled</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-9,</span><span 
class="cmtt-10">&#x00A0;displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;does</span><br /><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sums</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;elements.</span><br /><br /><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;problem</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;adapted</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;Book</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;C</span><span 
class="cmtt-10">&#x00A0;(Kelly,</span><span 
class="cmtt-10">&#x00A0;Pohl)</span><span 
class="cmtt-10">&#x00A0;pg.</span><span 
class="cmtt-10">&#x00A0;261.</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;time.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;string.h&#x003E;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;useful</span><span 
class="cmtt-10">&#x00A0;macros.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(),</span><span 
class="cmtt-10">&#x00A0;BZERO(),</span><span 
class="cmtt-10">&#x00A0;MY_ASSERT(),</span><span 
class="cmtt-10">&#x00A0;LOG()</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;prototypes</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srand(time(NULL));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\n%s\n",</span><br />        <span 
class="cmtt-10">&#x00A0;"This</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;following</span><span 
class="cmtt-10">&#x00A0;repeatedly:\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;Create</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;n\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2)</span><span 
class="cmtt-10">&#x00A0;Fill</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;randomly</span><span 
class="cmtt-10">&#x00A0;distributed</span><span 
class="cmtt-10">&#x00A0;digits\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;3)</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;elements\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;4)</span><span 
class="cmtt-10">&#x00A0;Frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;allocated</span><span 
class="cmtt-10">&#x00A0;memory\n");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Input</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;want</span><span 
class="cmtt-10">&#x00A0;created.</span><span 
class="cmtt-10">&#x00A0;n:</span><span 
class="cmtt-10">&#x00A0;");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(scanf("%d",</span><span 
class="cmtt-10">&#x00A0;&amp;n)</span><span 
class="cmtt-10">&#x00A0;!=1</span><span 
class="cmtt-10">&#x00A0;||</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;LOG("Usage:</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;has</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;&#x003E;</span><span 
class="cmtt-10">&#x00A0;0\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;continue;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;try</span><span 
class="cmtt-10">&#x00A0;again</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;malloc()</span><span 
class="cmtt-10">&#x00A0;allocate</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;unused</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;object</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;n</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;unspecified.</span><span 
class="cmtt-10">&#x00A0;Because</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;good</span><span 
class="cmtt-10">&#x00A0;idea</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//to</span><span 
class="cmtt-10">&#x00A0;zeroise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;returned</span><span 
class="cmtt-10">&#x00A0;memory.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;putchar(&#8217;\n&#8217;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;bytes;</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ip</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;malloc&#8217;d</span><span 
class="cmtt-10">&#x00A0;array,</span><span 
class="cmtt-10">&#x00A0;recall</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;could</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;value</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;BZERO&#8217;d</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(ip,</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;initialed</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sum</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;initArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Sum</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;%d\n\n",</span><span 
class="cmtt-10">&#x00A0;sumArray(ip,</span><span 
class="cmtt-10">&#x00A0;n));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;don&#8217;t</span><span 
class="cmtt-10">&#x00A0;forget</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;free</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;leaks</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;free(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\nLater!\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;a[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;rand()%19</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;scales</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i,</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;=0;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;a[i];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(sum);</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("a</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;[");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%d%s",</span><span 
class="cmtt-10">&#x00A0;a[i],</span><span 
class="cmtt-10">&#x00A0;((i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;?</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;:</span><span 
class="cmtt-10">&#x00A0;"]\n"));</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 445--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a>Use macros and header files</h3>
<!--l. 447--><p class="noindent" >Here is the header file header.h. It defines a number of useful macros that you can use in the TinySearch
Engine project.
<!--l. 450--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/header.h" > header.h </a>
                                                                                  
                                                                                  
<!--l. 452--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;header.h</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;utilites</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TinySearchEngine</span><span 
class="cmtt-10">&#x00A0;engine</span><span 
class="cmtt-10">&#x00A0;project</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;MACROs</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;initialization</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;some</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;exceptions</span><span 
class="cmtt-10">&#x00A0;processing</span><br /><span 
class="cmtt-10">//</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;makes</span><span 
class="cmtt-10">&#x00A0;sure</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;include</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;twice.</span><span 
class="cmtt-10">&#x00A0;Use</span><span 
class="cmtt-10">&#x00A0;it.</span><br /><br /><span 
class="cmtt-10">#ifndef</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;min(x,y)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;((x)&#x003E;(y))?(y):(x)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Print</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;together</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;source</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;current</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;number.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;LOG(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("[%s:%d]%s\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__,</span><span 
class="cmtt-10">&#x00A0;s)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;new</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;t</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MYASSERT(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(!(s))</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("General</span><span 
class="cmtt-10">&#x00A0;Assert</span><span 
class="cmtt-10">&#x00A0;Error</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;((s)</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("No</span><span 
class="cmtt-10">&#x00A0;enough</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;perror(":");</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;starts</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;m</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;zero.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;BZERO(n,m)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;memset(n,</span><span 
class="cmtt-10">&#x00A0;0,</span><span 
class="cmtt-10">&#x00A0;m)</span><br /><br /><span 
class="cmtt-10">#endif</span><br /><br /></div></div>
<!--l. 506--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-9000"></a>Examples of mallocing crawler data structures</h3>
<!--l. 508--><p class="noindent" >We have discuss pointers and we have looked at simple allocation of arrays using dynamic
memory. Note that malloc (which we will use through the course) returns a &#8220;pointer to void&#8221;
(void *) allowing the returning pointer to be &#8220;cast&#8221; to any data structure. In what follows,
we use sample code that is relevant to the crawler and allocate memory for some important
data structures, including, the dictionary, DNODE and URLNODE. Don&#8217;t worry that you do
not know the meaning of these structures at this point. You will become very familiar with
them.
<!--l. 515--><p class="noindent" >So let&#8217;s write some code to dynamically create the dictionary. After that we will allocate a URLNODE
and DNODE and link them into the structure. This is similar to what you need to do in the real crawler
code - so take a close look.
<!--l. 519--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/dictionary-example.c" > dictionary-example.c </a>
<!--l. 521--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;dictionary-example.c</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Descriptions:</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;goal</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;show</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocating</span><span 
class="cmtt-10">&#x00A0;memory</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dat</span><span 
class="cmtt-10">&#x00A0;structures.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;example</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;shows</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;void/</span><span 
class="cmtt-10">&#x00A0;casting</span><span 
class="cmtt-10">&#x00A0;pointers</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;used.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;drawn</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;implementation.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;While</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;imcomplete</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;illustrates</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;important</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structures</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;such</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DICTIONARY,</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;created</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;malloc.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary:</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;provides</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;purpose</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;based</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;where</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;URLNODEs)</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;assigned</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;stored</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;DNODE.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;blown</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;functions</span><span 
class="cmtt-10">&#x00A0;(not</span><span 
class="cmtt-10">&#x00A0;presented</span><span 
class="cmtt-10">&#x00A0;below)</span><span 
class="cmtt-10">&#x00A0;provide</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;adding/removing/searching</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(URLNODEs)</span><span 
class="cmtt-10">&#x00A0;inside</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;super</span><span 
class="cmtt-10">&#x00A0;fast</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;speed.</span><br /><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;memory.h&#x003E;</span><br /><span 
class="cmtt-10">//#include</span><span 
class="cmtt-10">&#x00A0;"dictionary.h"</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Unlikely</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;more</span><span 
class="cmtt-10">&#x00A0;than</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;longer</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;1000</span><span 
class="cmtt-10">&#x00A0;chars.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;term</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;a</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;Dictionary/hash</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;term</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;KEY_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Maximum</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;within</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_HASH_SLOT</span><span 
class="cmtt-10">&#x00A0;10000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;structures</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;dictionary.h</span><span 
class="cmtt-10">&#x00A0;but</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;put</span><span 
class="cmtt-10">&#x00A0;them</span><span 
class="cmtt-10">&#x00A0;here</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;ease</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;discussion.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;next;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;prev;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void*</span><span 
class="cmtt-10">&#x00A0;data;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;data,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;key[KEY_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;key,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DNODE;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;DNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;holds</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;double</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;unordered</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;exception</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;(URL)</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;clusters</span><span 
class="cmtt-10">&#x00A0;along</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;So</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;uniqueness</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;found</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;cluster</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;wit</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;addElement</span><span 
class="cmtt-10">&#x00A0;function.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;hash[MAX_HASH_SLOT];</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;slots,</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;DNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;start;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;double</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;terminated</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;pointer</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;end;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;last</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;list</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DICTIONARY;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;DICTIONARY;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;max</span><span 
class="cmtt-10">&#x00A0;length</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;path.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_URL_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;store</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;information</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;url[MAX_URL_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;e.g.,</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;depth;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;visited;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;crawled</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not,</span><span 
class="cmtt-10">&#x00A0;marked</span><span 
class="cmtt-10">&#x00A0;true(1),</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;false(0)</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__URL;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL</span><span 
class="cmtt-10">&#x00A0;URLNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;routine</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;fixed</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;keep</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;happy</span><br /><br /><span 
class="cmtt-10">unsigned</span><span 
class="cmtt-10">&#x00A0;long</span><span 
class="cmtt-10">&#x00A0;hash=20;</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;make_hash(char</span><span 
class="cmtt-10">&#x00A0;*c)</span><br /><span 
class="cmtt-10">{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(hash);</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main(void){</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;depth</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;*url="http://www.cs.dartmouth.edu/~campbell/";</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Initialise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*dict</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DICTIONARY));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(dict,</span><span 
class="cmtt-10">&#x00A0;sizeof(DICTIONARY));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;*n</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(URLNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(URLNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;depth;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;sizeof(n-&#x003E;url));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strncpy(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;url,</span><span 
class="cmtt-10">&#x00A0;strlen(url));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;At</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;point</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;call</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;did</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exist;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;example,</span><span 
class="cmtt-10">&#x00A0;DAdd(dict,</span><span 
class="cmtt-10">&#x00A0;n,</span><span 
class="cmtt-10">&#x00A0;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;function.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;course</span><span 
class="cmtt-10">&#x00A0;incomplete.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;h</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;make_hash(url);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MYASSERT(dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;*d</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(d,</span><span 
class="cmtt-10">&#x00A0;sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;hash[h]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;NULL;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;copy</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;here</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;dict:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("hash</span><span 
class="cmtt-10">&#x00A0;%lu\n",</span><span 
class="cmtt-10">&#x00A0;hash);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;hash[hash]</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;hash[hash]);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;end);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;d:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;next);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;prev);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;data);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;key</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;initialized</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;example");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;structure:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;url</span><span 
class="cmtt-10">&#x00A0;%s\n",n-&#x003E;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;depth);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;visited);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exists</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;exist</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;initial</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/dynamicmem.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="dynamicmem.tex"> 
<meta name="date" content="2014-01-31 08:59:00"> 
<link rel="stylesheet" type="text/css" href="dynamicmem.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 9</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>Pointers and Dynamic Memory Allocation</h1>
<!--l. 21--><p class="noindent" >In this lecture, we carr on our introduction to the C language.
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 26--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">Pesky pointers continued
     </li>
     <li class="itemize">Dynamic memory allocation
     </li>
     <li class="itemize">Useful header file and macros for TinySearch Engine
     </li>
     <li class="itemize">Useful example of dynamic allocation of crawler data structures
     </li></ul>
<!--l. 36--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>Pointer Arithmetic on Structs</h3>
<!--l. 38--><p class="noindent" >When you incremet and decrement a pointer it adjust based on the data type pointed to by the pointer. In
the previous examples the data type pointed to was a char - which is a byte (8 bits) in terms of strorage.
So p++ (where char *p) increments by obe byte of 8 bits. But what happens if the pointer p points to a
structure?
<!--l. 40--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/pointers.c" > pointers.c </a>
<!--l. 42--><p class="noindent" >The contents of pointers.c looks like this:
                                                                                  
                                                                                  
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;pointers.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Creates</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;types.</span><span 
class="cmtt-10">&#x00A0;Initialises</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;computes</span><br /><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;written</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;study</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;happens</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;incremented</span><br /><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;decremented.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;None</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;display</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;different</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;one</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Lecture</span><span 
class="cmtt-10">&#x00A0;6.</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;definitions</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;are</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;characters.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;typedef</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;define</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;type.</span><span 
class="cmtt-10">&#x00A0;Saves</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;defining</span><span 
class="cmtt-10">&#x00A0;instances</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;type.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_person</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*name;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*addr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;person;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;How</span><span 
class="cmtt-10">&#x00A0;big</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;struct?</span><br /><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;people[NUMPEOPLE];</span><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myname</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;"Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell";</span><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myadr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;"People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich";</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;intiatlise</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;array</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;(which</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;tag)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;person?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;%ld</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0x%x</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes\n",</span><span 
class="cmtt-10">&#x00A0;sizeof(p),</span><span 
class="cmtt-10">&#x00A0;(unsigned</span><span 
class="cmtt-10">&#x00A0;int)sizeof(person));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;variables?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)&amp;p,(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)people);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;increment</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;table</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;decrement</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;previous</span><span 
class="cmtt-10">&#x00A0;person</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p--;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;initialise</span><span 
class="cmtt-10">&#x00A0;our</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].age</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;21;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].name</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myname;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].addr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myadr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;reset</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;(even</span><span 
class="cmtt-10">&#x00A0;though</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;already)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;compute</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;people.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;NOTE,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;incremet</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;move</span><span 
class="cmtt-10">&#x00A0;through</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;Importantly</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;"-&#x003E;"</span><span 
class="cmtt-10">&#x00A0;symbol</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;index</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;-&#x003E;</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;.</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;used</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;%s\n",</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;name,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;addr);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years\n",</span><span 
class="cmtt-10">&#x00A0;age);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /></div></div>
<!--l. 158--><p class="noindent" >If you compile and run pointers then you get the following. Look closely at the pointer values and the
address of the people array of structs and the various sizes of data types including a pointer and the size of
the person struct.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">[atc@dhcp-210-161</span><span 
class="cmtt-10">&#x00A0;l8]</span><span 
class="cmtt-10">&#x00A0;./pointers</span><br /><span 
class="cmtt-10">pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;4</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0xc</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2070,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x208c</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;21</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;2100</span><span 
class="cmtt-10">&#x00A0;years</span><br /><br /></div></div>
<!--l. 178--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>Sorting an array of values</h3>
<!--l. 180--><p class="noindent" >A frequently required operation is to sort an array of, say, integers or characters. The standard C library
provides a generic function named qsort() to help with this, but we must write a pointer-based function to
perform the comparison of the arrays elements:
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;N</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;compare(const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*jp)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(*i</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;*j);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;main(int</span><span 
class="cmtt-10">&#x00A0;argc,</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*argv[])</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;values[N];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srandom(</span><span 
class="cmtt-10">&#x00A0;getpid()</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for(i=0</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i&#x003C;N</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;values[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;random();</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;qsort((void</span><span 
class="cmtt-10">&#x00A0;*)values,</span><span 
class="cmtt-10">&#x00A0;(size_t)N,sizeof(values[0]),</span><span 
class="cmtt-10">&#x00A0;compare);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;....</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(0);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 219--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a>Dynamic memory allocation</h3>
<!--l. 221--><p class="noindent" >The function malloc() returns a requested number of bytes from the operating systems heap. If insufficient
memory is available malloc returns NULL. When we are finished using the space returned by malloc(), our
program should be returned to the heap with a call to free(). If a process continues to malloc() memory
and fails to deallocate it using free(), the process will quickly run out of memory and terminate
ungracefully.
<!--l. 227--><p class="noindent" >The dynamic memory management functions are supported by the standard C library and their detailed
function protypes are found in stdlib.h. Memor allocation functions allow programmers to dynamically
allocate memory from the heap for variables, arrays, and structures; rather that statically allocating space
on the stack. Many times it is not possible to know in advance of run time of a program what the memory
demands for the program are. People that use static allocation somewhat have to second guess what the
worst case memory needs are and statically allocation that at compile time. This is not a good
programming principle. Better to make your program general and capable of dealing with a
wide variety of demands - the message, but the smarts into the program and don&#8217;t second
guess.
<!--l. 229--><p class="noindent" >The following memory management prototypes are supported:
     <ul class="itemize1">
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">calloc()</span></span></span> which dynamically allocates memory - &#8220;c&#8221; stands for contiguous allocation. calloc
     is typically used to allocate contiguous space for arrays. The memory is with all bits set to
     zero/ char arrays to NULL.
                                                                                  
                                                                                  
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> which dynamically allocates memory - &#8220;m&#8221; stands for memory. Similar to calloc
     but more general purpose allocation function. Does not initialize memory (user has to do that
     if necessary).
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">realloc()</span></span></span> which dynamically reallocates allocates memory - &#8220;r&#8221; stands for reallocate memory.
     This function allows the programmer to change the size of previously allocated memory to a
     new size.
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">free()</span></span></span> which deallocates memory releasing the block of memory back to the heap. If memory
     is  continuously  allocated  and  not  released  two  things  may  happen:  memory  leak  or  the
     requesting process could be killed. Take care to free memory.</li></ul>
<!--l. 237--><p class="noindent" ><span 
class="cmbx-10">Note</span>:Unlike Java, C has no garbage collection of heap objects, and so programs must be very careful
about deallocating memory that is no longer required.
<!--l. 240--><p class="noindent" >The memory management functions use &#8220;pointer to void&#8221; (void *) which allows the programmer to assign
the returned pointer to memory to any struct, array, variable without casting. This is a very good example
of the use of pointer to void.
<!--l. 242--><p class="noindent" >Consider the following example which allocates space for a new copy of a given string. This is very similar
to the standard function named strdup():
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;returns</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;requested</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;*malloc(unsigned</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;nbytes);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*newstr(const</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*s)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if(</span><span 
class="cmtt-10">&#x00A0;(p=malloc(strlen(s)+1))</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fprintf(stderr,"out</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;memory!\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(1);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strcpy(p,s);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 273--><p class="noindent" ><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> is also frequently used to allocate memory for structures.
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*line;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*next;</span><br /><span 
class="cmtt-10">&#x00A0;};</span><br /><br /><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(</span><span 
class="cmtt-10">&#x00A0;sizeof(struct</span><span 
class="cmtt-10">&#x00A0;l)</span><span 
class="cmtt-10">&#x00A0;),</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;fgets(buf,</span><span 
class="cmtt-10">&#x00A0;MAX,</span><span 
class="cmtt-10">&#x00A0;fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;while(</span><span 
class="cmtt-10">&#x00A0;!feof(fp)</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=NEW(struct</span><span 
class="cmtt-10">&#x00A0;l);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;line</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;newstr(buf);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;hd;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;p;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fgets(buf,MAX,fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 304--><p class="noindent" >The program below uses <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc</span></span></span> to dynamically create an array of integers based on the user input n. The
program allocates the memory, fills it with random integers scaled between 18 and -9, displays the array
and frees the memory. It does this forever.
<!--l. 306--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/memory.c" > memory.c </a>
<!--l. 308--><p class="noindent" >The contents of memory.c looks like this:
<!--l. 310--><p class="noindent" ><span 
class="cmbx-10">Compilie the code and run it</span>.
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;memory.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Uses</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;create</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;ints.</span><span 
class="cmtt-10">&#x00A0;The</span><br /><span 
class="cmtt-10">&#x00A0;user</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;n.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;allocates</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory,</span><span 
class="cmtt-10">&#x00A0;fills</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;random</span><span 
class="cmtt-10">&#x00A0;integers</span><br /><span 
class="cmtt-10">&#x00A0;scaled</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-9,</span><span 
class="cmtt-10">&#x00A0;displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;does</span><br /><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sums</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;elements.</span><br /><br /><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;problem</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;adapted</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;Book</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;C</span><span 
class="cmtt-10">&#x00A0;(Kelly,</span><span 
class="cmtt-10">&#x00A0;Pohl)</span><span 
class="cmtt-10">&#x00A0;pg.</span><span 
class="cmtt-10">&#x00A0;261.</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;time.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;string.h&#x003E;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;useful</span><span 
class="cmtt-10">&#x00A0;macros.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(),</span><span 
class="cmtt-10">&#x00A0;BZERO(),</span><span 
class="cmtt-10">&#x00A0;MY_ASSERT(),</span><span 
class="cmtt-10">&#x00A0;LOG()</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;prototypes</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srand(time(NULL));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\n%s\n",</span><br />        <span 
class="cmtt-10">&#x00A0;"This</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;following</span><span 
class="cmtt-10">&#x00A0;repeatedly:\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;Create</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;n\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2)</span><span 
class="cmtt-10">&#x00A0;Fill</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;randomly</span><span 
class="cmtt-10">&#x00A0;distributed</span><span 
class="cmtt-10">&#x00A0;digits\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;3)</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;elements\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;4)</span><span 
class="cmtt-10">&#x00A0;Frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;allocated</span><span 
class="cmtt-10">&#x00A0;memory\n");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Input</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;want</span><span 
class="cmtt-10">&#x00A0;created.</span><span 
class="cmtt-10">&#x00A0;n:</span><span 
class="cmtt-10">&#x00A0;");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(scanf("%d",</span><span 
class="cmtt-10">&#x00A0;&amp;n)</span><span 
class="cmtt-10">&#x00A0;!=1</span><span 
class="cmtt-10">&#x00A0;||</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;LOG("Usage:</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;has</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;&#x003E;</span><span 
class="cmtt-10">&#x00A0;0\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;continue;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;try</span><span 
class="cmtt-10">&#x00A0;again</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;malloc()</span><span 
class="cmtt-10">&#x00A0;allocate</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;unused</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;object</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;n</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;unspecified.</span><span 
class="cmtt-10">&#x00A0;Because</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;good</span><span 
class="cmtt-10">&#x00A0;idea</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//to</span><span 
class="cmtt-10">&#x00A0;zeroise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;returned</span><span 
class="cmtt-10">&#x00A0;memory.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;putchar(&#8217;\n&#8217;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;bytes;</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ip</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;malloc&#8217;d</span><span 
class="cmtt-10">&#x00A0;array,</span><span 
class="cmtt-10">&#x00A0;recall</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;could</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;value</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;BZERO&#8217;d</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(ip,</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;initialed</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sum</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;initArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Sum</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;%d\n\n",</span><span 
class="cmtt-10">&#x00A0;sumArray(ip,</span><span 
class="cmtt-10">&#x00A0;n));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;don&#8217;t</span><span 
class="cmtt-10">&#x00A0;forget</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;free</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;leaks</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;free(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\nLater!\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;a[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;rand()%19</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;scales</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i,</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;=0;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;a[i];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(sum);</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("a</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;[");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%d%s",</span><span 
class="cmtt-10">&#x00A0;a[i],</span><span 
class="cmtt-10">&#x00A0;((i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;?</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;:</span><span 
class="cmtt-10">&#x00A0;"]\n"));</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 445--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a>Use macros and header files</h3>
<!--l. 447--><p class="noindent" >Here is the header file header.h. It defines a number of useful macros that you can use in the TinySearch
Engine project.
<!--l. 450--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/header.h" > header.h </a>
                                                                                  
                                                                                  
<!--l. 452--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;header.h</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;utilites</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TinySearchEngine</span><span 
class="cmtt-10">&#x00A0;engine</span><span 
class="cmtt-10">&#x00A0;project</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;MACROs</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;initialization</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;some</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;exceptions</span><span 
class="cmtt-10">&#x00A0;processing</span><br /><span 
class="cmtt-10">//</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;makes</span><span 
class="cmtt-10">&#x00A0;sure</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;include</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;twice.</span><span 
class="cmtt-10">&#x00A0;Use</span><span 
class="cmtt-10">&#x00A0;it.</span><br /><br /><span 
class="cmtt-10">#ifndef</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;min(x,y)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;((x)&#x003E;(y))?(y):(x)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Print</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;together</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;source</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;current</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;number.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;LOG(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("[%s:%d]%s\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__,</span><span 
class="cmtt-10">&#x00A0;s)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;new</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;t</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MYASSERT(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(!(s))</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("General</span><span 
class="cmtt-10">&#x00A0;Assert</span><span 
class="cmtt-10">&#x00A0;Error</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;((s)</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("No</span><span 
class="cmtt-10">&#x00A0;enough</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;perror(":");</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;starts</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;m</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;zero.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;BZERO(n,m)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;memset(n,</span><span 
class="cmtt-10">&#x00A0;0,</span><span 
class="cmtt-10">&#x00A0;m)</span><br /><br /><span 
class="cmtt-10">#endif</span><br /><br /></div></div>
<!--l. 506--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-9000"></a>Examples of mallocing crawler data structures</h3>
<!--l. 508--><p class="noindent" >We have discuss pointers and we have looked at simple allocation of arrays using dynamic
memory. Note that malloc (which we will use through the course) returns a &#8220;pointer to void&#8221;
(void *) allowing the returning pointer to be &#8220;cast&#8221; to any data structure. In what follows,
we use sample code that is relevant to the crawler and allocate memory for some important
data structures, including, the dictionary, DNODE and URLNODE. Don&#8217;t worry that you do
not know the meaning of these structures at this point. You will become very familiar with
them.
<!--l. 515--><p class="noindent" >So let&#8217;s write some code to dynamically create the dictionary. After that we will allocate a URLNODE
and DNODE and link them into the structure. This is similar to what you need to do in the real crawler
code - so take a close look.
<!--l. 519--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/dictionary-example.c" > dictionary-example.c </a>
<!--l. 521--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;dictionary-example.c</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Descriptions:</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;goal</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;show</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocating</span><span 
class="cmtt-10">&#x00A0;memory</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dat</span><span 
class="cmtt-10">&#x00A0;structures.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;example</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;shows</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;void/</span><span 
class="cmtt-10">&#x00A0;casting</span><span 
class="cmtt-10">&#x00A0;pointers</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;used.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;drawn</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;implementation.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;While</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;imcomplete</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;illustrates</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;important</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structures</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;such</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DICTIONARY,</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;created</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;malloc.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary:</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;provides</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;purpose</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;based</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;where</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;URLNODEs)</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;assigned</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;stored</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;DNODE.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;blown</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;functions</span><span 
class="cmtt-10">&#x00A0;(not</span><span 
class="cmtt-10">&#x00A0;presented</span><span 
class="cmtt-10">&#x00A0;below)</span><span 
class="cmtt-10">&#x00A0;provide</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;adding/removing/searching</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(URLNODEs)</span><span 
class="cmtt-10">&#x00A0;inside</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;super</span><span 
class="cmtt-10">&#x00A0;fast</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;speed.</span><br /><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;memory.h&#x003E;</span><br /><span 
class="cmtt-10">//#include</span><span 
class="cmtt-10">&#x00A0;"dictionary.h"</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Unlikely</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;more</span><span 
class="cmtt-10">&#x00A0;than</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;longer</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;1000</span><span 
class="cmtt-10">&#x00A0;chars.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;term</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;a</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;Dictionary/hash</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;term</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;KEY_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Maximum</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;within</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_HASH_SLOT</span><span 
class="cmtt-10">&#x00A0;10000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;structures</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;dictionary.h</span><span 
class="cmtt-10">&#x00A0;but</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;put</span><span 
class="cmtt-10">&#x00A0;them</span><span 
class="cmtt-10">&#x00A0;here</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;ease</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;discussion.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;next;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;prev;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void*</span><span 
class="cmtt-10">&#x00A0;data;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;data,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;key[KEY_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;key,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DNODE;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;DNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;holds</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;double</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;unordered</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;exception</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;(URL)</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;clusters</span><span 
class="cmtt-10">&#x00A0;along</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;So</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;uniqueness</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;found</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;cluster</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;wit</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;addElement</span><span 
class="cmtt-10">&#x00A0;function.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;hash[MAX_HASH_SLOT];</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;slots,</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;DNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;start;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;double</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;terminated</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;pointer</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;end;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;last</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;list</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DICTIONARY;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;DICTIONARY;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;max</span><span 
class="cmtt-10">&#x00A0;length</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;path.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_URL_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;store</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;information</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;url[MAX_URL_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;e.g.,</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;depth;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;visited;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;crawled</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not,</span><span 
class="cmtt-10">&#x00A0;marked</span><span 
class="cmtt-10">&#x00A0;true(1),</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;false(0)</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__URL;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL</span><span 
class="cmtt-10">&#x00A0;URLNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;routine</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;fixed</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;keep</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;happy</span><br /><br /><span 
class="cmtt-10">unsigned</span><span 
class="cmtt-10">&#x00A0;long</span><span 
class="cmtt-10">&#x00A0;hash=20;</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;make_hash(char</span><span 
class="cmtt-10">&#x00A0;*c)</span><br /><span 
class="cmtt-10">{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(hash);</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main(void){</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;depth</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;*url="http://www.cs.dartmouth.edu/~campbell/";</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Initialise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*dict</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DICTIONARY));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(dict,</span><span 
class="cmtt-10">&#x00A0;sizeof(DICTIONARY));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;*n</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(URLNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(URLNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;depth;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;sizeof(n-&#x003E;url));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strncpy(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;url,</span><span 
class="cmtt-10">&#x00A0;strlen(url));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;At</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;point</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;call</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;did</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exist;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;example,</span><span 
class="cmtt-10">&#x00A0;DAdd(dict,</span><span 
class="cmtt-10">&#x00A0;n,</span><span 
class="cmtt-10">&#x00A0;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;function.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;course</span><span 
class="cmtt-10">&#x00A0;incomplete.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;h</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;make_hash(url);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MYASSERT(dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;*d</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(d,</span><span 
class="cmtt-10">&#x00A0;sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;hash[h]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;NULL;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;copy</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;here</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;dict:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("hash</span><span 
class="cmtt-10">&#x00A0;%lu\n",</span><span 
class="cmtt-10">&#x00A0;hash);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;hash[hash]</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;hash[hash]);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;end);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;d:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;next);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;prev);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;data);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;key</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;initialized</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;example");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;structure:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;url</span><span 
class="cmtt-10">&#x00A0;%s\n",n-&#x003E;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;depth);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;visited);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exists</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;exist</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;initial</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/dynamicmem.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="dynamicmem.tex"> 
<meta name="date" content="2014-01-31 08:59:00"> 
<link rel="stylesheet" type="text/css" href="dynamicmem.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 9</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>Pointers and Dynamic Memory Allocation</h1>
<!--l. 21--><p class="noindent" >In this lecture, we carr on our introduction to the C language.
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 26--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">Pesky pointers continued
     </li>
     <li class="itemize">Dynamic memory allocation
     </li>
     <li class="itemize">Useful header file and macros for TinySearch Engine
     </li>
     <li class="itemize">Useful example of dynamic allocation of crawler data structures
     </li></ul>
<!--l. 36--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>Pointer Arithmetic on Structs</h3>
<!--l. 38--><p class="noindent" >When you incremet and decrement a pointer it adjust based on the data type pointed to by the pointer. In
the previous examples the data type pointed to was a char - which is a byte (8 bits) in terms of strorage.
So p++ (where char *p) increments by obe byte of 8 bits. But what happens if the pointer p points to a
structure?
<!--l. 40--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/pointers.c" > pointers.c </a>
<!--l. 42--><p class="noindent" >The contents of pointers.c looks like this:
                                                                                  
                                                                                  
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;pointers.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Creates</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;types.</span><span 
class="cmtt-10">&#x00A0;Initialises</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;computes</span><br /><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;written</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;study</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;happens</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;incremented</span><br /><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;decremented.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;None</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;display</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;different</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;one</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Lecture</span><span 
class="cmtt-10">&#x00A0;6.</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;definitions</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;are</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;characters.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;typedef</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;define</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;type.</span><span 
class="cmtt-10">&#x00A0;Saves</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;defining</span><span 
class="cmtt-10">&#x00A0;instances</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;type.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_person</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*name;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*addr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;person;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;How</span><span 
class="cmtt-10">&#x00A0;big</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;struct?</span><br /><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;people[NUMPEOPLE];</span><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myname</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;"Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell";</span><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myadr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;"People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich";</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;intiatlise</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;array</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;(which</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;tag)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;person?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;%ld</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0x%x</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes\n",</span><span 
class="cmtt-10">&#x00A0;sizeof(p),</span><span 
class="cmtt-10">&#x00A0;(unsigned</span><span 
class="cmtt-10">&#x00A0;int)sizeof(person));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;variables?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)&amp;p,(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)people);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;increment</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;table</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;decrement</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;previous</span><span 
class="cmtt-10">&#x00A0;person</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p--;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;initialise</span><span 
class="cmtt-10">&#x00A0;our</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].age</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;21;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].name</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myname;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].addr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myadr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;reset</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;(even</span><span 
class="cmtt-10">&#x00A0;though</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;already)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;compute</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;people.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;NOTE,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;incremet</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;move</span><span 
class="cmtt-10">&#x00A0;through</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;Importantly</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;"-&#x003E;"</span><span 
class="cmtt-10">&#x00A0;symbol</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;index</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;-&#x003E;</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;.</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;used</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;%s\n",</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;name,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;addr);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years\n",</span><span 
class="cmtt-10">&#x00A0;age);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /></div></div>
<!--l. 158--><p class="noindent" >If you compile and run pointers then you get the following. Look closely at the pointer values and the
address of the people array of structs and the various sizes of data types including a pointer and the size of
the person struct.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">[atc@dhcp-210-161</span><span 
class="cmtt-10">&#x00A0;l8]</span><span 
class="cmtt-10">&#x00A0;./pointers</span><br /><span 
class="cmtt-10">pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;4</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0xc</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2070,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x208c</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;21</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;2100</span><span 
class="cmtt-10">&#x00A0;years</span><br /><br /></div></div>
<!--l. 178--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>Sorting an array of values</h3>
<!--l. 180--><p class="noindent" >A frequently required operation is to sort an array of, say, integers or characters. The standard C library
provides a generic function named qsort() to help with this, but we must write a pointer-based function to
perform the comparison of the arrays elements:
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;N</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;compare(const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*jp)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(*i</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;*j);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;main(int</span><span 
class="cmtt-10">&#x00A0;argc,</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*argv[])</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;values[N];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srandom(</span><span 
class="cmtt-10">&#x00A0;getpid()</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for(i=0</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i&#x003C;N</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;values[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;random();</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;qsort((void</span><span 
class="cmtt-10">&#x00A0;*)values,</span><span 
class="cmtt-10">&#x00A0;(size_t)N,sizeof(values[0]),</span><span 
class="cmtt-10">&#x00A0;compare);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;....</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(0);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 219--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a>Dynamic memory allocation</h3>
<!--l. 221--><p class="noindent" >The function malloc() returns a requested number of bytes from the operating systems heap. If insufficient
memory is available malloc returns NULL. When we are finished using the space returned by malloc(), our
program should be returned to the heap with a call to free(). If a process continues to malloc() memory
and fails to deallocate it using free(), the process will quickly run out of memory and terminate
ungracefully.
<!--l. 227--><p class="noindent" >The dynamic memory management functions are supported by the standard C library and their detailed
function protypes are found in stdlib.h. Memor allocation functions allow programmers to dynamically
allocate memory from the heap for variables, arrays, and structures; rather that statically allocating space
on the stack. Many times it is not possible to know in advance of run time of a program what the memory
demands for the program are. People that use static allocation somewhat have to second guess what the
worst case memory needs are and statically allocation that at compile time. This is not a good
programming principle. Better to make your program general and capable of dealing with a
wide variety of demands - the message, but the smarts into the program and don&#8217;t second
guess.
<!--l. 229--><p class="noindent" >The following memory management prototypes are supported:
     <ul class="itemize1">
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">calloc()</span></span></span> which dynamically allocates memory - &#8220;c&#8221; stands for contiguous allocation. calloc
     is typically used to allocate contiguous space for arrays. The memory is with all bits set to
     zero/ char arrays to NULL.
                                                                                  
                                                                                  
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> which dynamically allocates memory - &#8220;m&#8221; stands for memory. Similar to calloc
     but more general purpose allocation function. Does not initialize memory (user has to do that
     if necessary).
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">realloc()</span></span></span> which dynamically reallocates allocates memory - &#8220;r&#8221; stands for reallocate memory.
     This function allows the programmer to change the size of previously allocated memory to a
     new size.
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">free()</span></span></span> which deallocates memory releasing the block of memory back to the heap. If memory
     is  continuously  allocated  and  not  released  two  things  may  happen:  memory  leak  or  the
     requesting process could be killed. Take care to free memory.</li></ul>
<!--l. 237--><p class="noindent" ><span 
class="cmbx-10">Note</span>:Unlike Java, C has no garbage collection of heap objects, and so programs must be very careful
about deallocating memory that is no longer required.
<!--l. 240--><p class="noindent" >The memory management functions use &#8220;pointer to void&#8221; (void *) which allows the programmer to assign
the returned pointer to memory to any struct, array, variable without casting. This is a very good example
of the use of pointer to void.
<!--l. 242--><p class="noindent" >Consider the following example which allocates space for a new copy of a given string. This is very similar
to the standard function named strdup():
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;returns</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;requested</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;*malloc(unsigned</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;nbytes);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*newstr(const</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*s)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if(</span><span 
class="cmtt-10">&#x00A0;(p=malloc(strlen(s)+1))</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fprintf(stderr,"out</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;memory!\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(1);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strcpy(p,s);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 273--><p class="noindent" ><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> is also frequently used to allocate memory for structures.
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*line;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*next;</span><br /><span 
class="cmtt-10">&#x00A0;};</span><br /><br /><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(</span><span 
class="cmtt-10">&#x00A0;sizeof(struct</span><span 
class="cmtt-10">&#x00A0;l)</span><span 
class="cmtt-10">&#x00A0;),</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;fgets(buf,</span><span 
class="cmtt-10">&#x00A0;MAX,</span><span 
class="cmtt-10">&#x00A0;fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;while(</span><span 
class="cmtt-10">&#x00A0;!feof(fp)</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=NEW(struct</span><span 
class="cmtt-10">&#x00A0;l);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;line</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;newstr(buf);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;hd;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;p;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fgets(buf,MAX,fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 304--><p class="noindent" >The program below uses <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc</span></span></span> to dynamically create an array of integers based on the user input n. The
program allocates the memory, fills it with random integers scaled between 18 and -9, displays the array
and frees the memory. It does this forever.
<!--l. 306--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/memory.c" > memory.c </a>
<!--l. 308--><p class="noindent" >The contents of memory.c looks like this:
<!--l. 310--><p class="noindent" ><span 
class="cmbx-10">Compilie the code and run it</span>.
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;memory.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Uses</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;create</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;ints.</span><span 
class="cmtt-10">&#x00A0;The</span><br /><span 
class="cmtt-10">&#x00A0;user</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;n.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;allocates</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory,</span><span 
class="cmtt-10">&#x00A0;fills</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;random</span><span 
class="cmtt-10">&#x00A0;integers</span><br /><span 
class="cmtt-10">&#x00A0;scaled</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-9,</span><span 
class="cmtt-10">&#x00A0;displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;does</span><br /><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sums</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;elements.</span><br /><br /><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;problem</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;adapted</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;Book</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;C</span><span 
class="cmtt-10">&#x00A0;(Kelly,</span><span 
class="cmtt-10">&#x00A0;Pohl)</span><span 
class="cmtt-10">&#x00A0;pg.</span><span 
class="cmtt-10">&#x00A0;261.</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;time.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;string.h&#x003E;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;useful</span><span 
class="cmtt-10">&#x00A0;macros.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(),</span><span 
class="cmtt-10">&#x00A0;BZERO(),</span><span 
class="cmtt-10">&#x00A0;MY_ASSERT(),</span><span 
class="cmtt-10">&#x00A0;LOG()</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;prototypes</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srand(time(NULL));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\n%s\n",</span><br />        <span 
class="cmtt-10">&#x00A0;"This</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;following</span><span 
class="cmtt-10">&#x00A0;repeatedly:\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;Create</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;n\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2)</span><span 
class="cmtt-10">&#x00A0;Fill</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;randomly</span><span 
class="cmtt-10">&#x00A0;distributed</span><span 
class="cmtt-10">&#x00A0;digits\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;3)</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;elements\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;4)</span><span 
class="cmtt-10">&#x00A0;Frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;allocated</span><span 
class="cmtt-10">&#x00A0;memory\n");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Input</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;want</span><span 
class="cmtt-10">&#x00A0;created.</span><span 
class="cmtt-10">&#x00A0;n:</span><span 
class="cmtt-10">&#x00A0;");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(scanf("%d",</span><span 
class="cmtt-10">&#x00A0;&amp;n)</span><span 
class="cmtt-10">&#x00A0;!=1</span><span 
class="cmtt-10">&#x00A0;||</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;LOG("Usage:</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;has</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;&#x003E;</span><span 
class="cmtt-10">&#x00A0;0\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;continue;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;try</span><span 
class="cmtt-10">&#x00A0;again</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;malloc()</span><span 
class="cmtt-10">&#x00A0;allocate</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;unused</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;object</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;n</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;unspecified.</span><span 
class="cmtt-10">&#x00A0;Because</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;good</span><span 
class="cmtt-10">&#x00A0;idea</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//to</span><span 
class="cmtt-10">&#x00A0;zeroise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;returned</span><span 
class="cmtt-10">&#x00A0;memory.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;putchar(&#8217;\n&#8217;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;bytes;</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ip</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;malloc&#8217;d</span><span 
class="cmtt-10">&#x00A0;array,</span><span 
class="cmtt-10">&#x00A0;recall</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;could</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;value</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;BZERO&#8217;d</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(ip,</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;initialed</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sum</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;initArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Sum</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;%d\n\n",</span><span 
class="cmtt-10">&#x00A0;sumArray(ip,</span><span 
class="cmtt-10">&#x00A0;n));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;don&#8217;t</span><span 
class="cmtt-10">&#x00A0;forget</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;free</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;leaks</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;free(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\nLater!\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;a[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;rand()%19</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;scales</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i,</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;=0;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;a[i];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(sum);</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("a</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;[");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%d%s",</span><span 
class="cmtt-10">&#x00A0;a[i],</span><span 
class="cmtt-10">&#x00A0;((i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;?</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;:</span><span 
class="cmtt-10">&#x00A0;"]\n"));</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 445--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a>Use macros and header files</h3>
<!--l. 447--><p class="noindent" >Here is the header file header.h. It defines a number of useful macros that you can use in the TinySearch
Engine project.
<!--l. 450--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/header.h" > header.h </a>
                                                                                  
                                                                                  
<!--l. 452--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;header.h</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;utilites</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TinySearchEngine</span><span 
class="cmtt-10">&#x00A0;engine</span><span 
class="cmtt-10">&#x00A0;project</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;MACROs</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;initialization</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;some</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;exceptions</span><span 
class="cmtt-10">&#x00A0;processing</span><br /><span 
class="cmtt-10">//</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;makes</span><span 
class="cmtt-10">&#x00A0;sure</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;include</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;twice.</span><span 
class="cmtt-10">&#x00A0;Use</span><span 
class="cmtt-10">&#x00A0;it.</span><br /><br /><span 
class="cmtt-10">#ifndef</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;min(x,y)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;((x)&#x003E;(y))?(y):(x)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Print</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;together</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;source</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;current</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;number.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;LOG(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("[%s:%d]%s\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__,</span><span 
class="cmtt-10">&#x00A0;s)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;new</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;t</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MYASSERT(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(!(s))</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("General</span><span 
class="cmtt-10">&#x00A0;Assert</span><span 
class="cmtt-10">&#x00A0;Error</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;((s)</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("No</span><span 
class="cmtt-10">&#x00A0;enough</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;perror(":");</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;starts</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;m</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;zero.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;BZERO(n,m)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;memset(n,</span><span 
class="cmtt-10">&#x00A0;0,</span><span 
class="cmtt-10">&#x00A0;m)</span><br /><br /><span 
class="cmtt-10">#endif</span><br /><br /></div></div>
<!--l. 506--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-9000"></a>Examples of mallocing crawler data structures</h3>
<!--l. 508--><p class="noindent" >We have discuss pointers and we have looked at simple allocation of arrays using dynamic
memory. Note that malloc (which we will use through the course) returns a &#8220;pointer to void&#8221;
(void *) allowing the returning pointer to be &#8220;cast&#8221; to any data structure. In what follows,
we use sample code that is relevant to the crawler and allocate memory for some important
data structures, including, the dictionary, DNODE and URLNODE. Don&#8217;t worry that you do
not know the meaning of these structures at this point. You will become very familiar with
them.
<!--l. 515--><p class="noindent" >So let&#8217;s write some code to dynamically create the dictionary. After that we will allocate a URLNODE
and DNODE and link them into the structure. This is similar to what you need to do in the real crawler
code - so take a close look.
<!--l. 519--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/dictionary-example.c" > dictionary-example.c </a>
<!--l. 521--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;dictionary-example.c</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Descriptions:</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;goal</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;show</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocating</span><span 
class="cmtt-10">&#x00A0;memory</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dat</span><span 
class="cmtt-10">&#x00A0;structures.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;example</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;shows</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;void/</span><span 
class="cmtt-10">&#x00A0;casting</span><span 
class="cmtt-10">&#x00A0;pointers</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;used.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;drawn</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;implementation.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;While</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;imcomplete</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;illustrates</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;important</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structures</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;such</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DICTIONARY,</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;created</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;malloc.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary:</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;provides</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;purpose</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;based</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;where</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;URLNODEs)</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;assigned</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;stored</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;DNODE.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;blown</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;functions</span><span 
class="cmtt-10">&#x00A0;(not</span><span 
class="cmtt-10">&#x00A0;presented</span><span 
class="cmtt-10">&#x00A0;below)</span><span 
class="cmtt-10">&#x00A0;provide</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;adding/removing/searching</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(URLNODEs)</span><span 
class="cmtt-10">&#x00A0;inside</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;super</span><span 
class="cmtt-10">&#x00A0;fast</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;speed.</span><br /><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;memory.h&#x003E;</span><br /><span 
class="cmtt-10">//#include</span><span 
class="cmtt-10">&#x00A0;"dictionary.h"</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Unlikely</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;more</span><span 
class="cmtt-10">&#x00A0;than</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;longer</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;1000</span><span 
class="cmtt-10">&#x00A0;chars.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;term</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;a</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;Dictionary/hash</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;term</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;KEY_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Maximum</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;within</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_HASH_SLOT</span><span 
class="cmtt-10">&#x00A0;10000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;structures</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;dictionary.h</span><span 
class="cmtt-10">&#x00A0;but</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;put</span><span 
class="cmtt-10">&#x00A0;them</span><span 
class="cmtt-10">&#x00A0;here</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;ease</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;discussion.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;next;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;prev;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void*</span><span 
class="cmtt-10">&#x00A0;data;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;data,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;key[KEY_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;key,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DNODE;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;DNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;holds</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;double</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;unordered</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;exception</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;(URL)</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;clusters</span><span 
class="cmtt-10">&#x00A0;along</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;So</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;uniqueness</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;found</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;cluster</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;wit</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;addElement</span><span 
class="cmtt-10">&#x00A0;function.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;hash[MAX_HASH_SLOT];</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;slots,</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;DNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;start;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;double</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;terminated</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;pointer</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;end;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;last</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;list</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DICTIONARY;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;DICTIONARY;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;max</span><span 
class="cmtt-10">&#x00A0;length</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;path.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_URL_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;store</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;information</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;url[MAX_URL_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;e.g.,</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;depth;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;visited;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;crawled</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not,</span><span 
class="cmtt-10">&#x00A0;marked</span><span 
class="cmtt-10">&#x00A0;true(1),</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;false(0)</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__URL;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL</span><span 
class="cmtt-10">&#x00A0;URLNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;routine</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;fixed</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;keep</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;happy</span><br /><br /><span 
class="cmtt-10">unsigned</span><span 
class="cmtt-10">&#x00A0;long</span><span 
class="cmtt-10">&#x00A0;hash=20;</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;make_hash(char</span><span 
class="cmtt-10">&#x00A0;*c)</span><br /><span 
class="cmtt-10">{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(hash);</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main(void){</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;depth</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;*url="http://www.cs.dartmouth.edu/~campbell/";</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Initialise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*dict</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DICTIONARY));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(dict,</span><span 
class="cmtt-10">&#x00A0;sizeof(DICTIONARY));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;*n</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(URLNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(URLNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;depth;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;sizeof(n-&#x003E;url));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strncpy(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;url,</span><span 
class="cmtt-10">&#x00A0;strlen(url));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;At</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;point</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;call</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;did</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exist;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;example,</span><span 
class="cmtt-10">&#x00A0;DAdd(dict,</span><span 
class="cmtt-10">&#x00A0;n,</span><span 
class="cmtt-10">&#x00A0;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;function.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;course</span><span 
class="cmtt-10">&#x00A0;incomplete.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;h</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;make_hash(url);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MYASSERT(dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;*d</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(d,</span><span 
class="cmtt-10">&#x00A0;sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;hash[h]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;NULL;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;copy</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;here</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;dict:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("hash</span><span 
class="cmtt-10">&#x00A0;%lu\n",</span><span 
class="cmtt-10">&#x00A0;hash);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;hash[hash]</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;hash[hash]);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;end);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;d:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;next);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;prev);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;data);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;key</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;initialized</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;example");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;structure:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;url</span><span 
class="cmtt-10">&#x00A0;%s\n",n-&#x003E;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;depth);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;visited);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exists</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;exist</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;initial</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/dynamicmem.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="dynamicmem.tex"> 
<meta name="date" content="2014-01-31 08:59:00"> 
<link rel="stylesheet" type="text/css" href="dynamicmem.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 9</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>Pointers and Dynamic Memory Allocation</h1>
<!--l. 21--><p class="noindent" >In this lecture, we carr on our introduction to the C language.
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 26--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">Pesky pointers continued
     </li>
     <li class="itemize">Dynamic memory allocation
     </li>
     <li class="itemize">Useful header file and macros for TinySearch Engine
     </li>
     <li class="itemize">Useful example of dynamic allocation of crawler data structures
     </li></ul>
<!--l. 36--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>Pointer Arithmetic on Structs</h3>
<!--l. 38--><p class="noindent" >When you incremet and decrement a pointer it adjust based on the data type pointed to by the pointer. In
the previous examples the data type pointed to was a char - which is a byte (8 bits) in terms of strorage.
So p++ (where char *p) increments by obe byte of 8 bits. But what happens if the pointer p points to a
structure?
<!--l. 40--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/pointers.c" > pointers.c </a>
<!--l. 42--><p class="noindent" >The contents of pointers.c looks like this:
                                                                                  
                                                                                  
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;pointers.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Creates</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;types.</span><span 
class="cmtt-10">&#x00A0;Initialises</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;computes</span><br /><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;written</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;study</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;happens</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;incremented</span><br /><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;decremented.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;None</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;display</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;different</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;one</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Lecture</span><span 
class="cmtt-10">&#x00A0;6.</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;definitions</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;are</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;characters.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;typedef</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;define</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;type.</span><span 
class="cmtt-10">&#x00A0;Saves</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;defining</span><span 
class="cmtt-10">&#x00A0;instances</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;type.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_person</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*name;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*addr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;person;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;How</span><span 
class="cmtt-10">&#x00A0;big</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;struct?</span><br /><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;people[NUMPEOPLE];</span><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myname</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;"Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell";</span><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myadr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;"People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich";</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;intiatlise</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;array</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;(which</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;tag)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;person?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;%ld</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0x%x</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes\n",</span><span 
class="cmtt-10">&#x00A0;sizeof(p),</span><span 
class="cmtt-10">&#x00A0;(unsigned</span><span 
class="cmtt-10">&#x00A0;int)sizeof(person));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;variables?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)&amp;p,(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)people);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;increment</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;table</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;decrement</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;previous</span><span 
class="cmtt-10">&#x00A0;person</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p--;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;initialise</span><span 
class="cmtt-10">&#x00A0;our</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].age</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;21;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].name</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myname;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].addr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myadr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;reset</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;(even</span><span 
class="cmtt-10">&#x00A0;though</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;already)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;compute</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;people.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;NOTE,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;incremet</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;move</span><span 
class="cmtt-10">&#x00A0;through</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;Importantly</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;"-&#x003E;"</span><span 
class="cmtt-10">&#x00A0;symbol</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;index</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;-&#x003E;</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;.</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;used</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;%s\n",</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;name,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;addr);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years\n",</span><span 
class="cmtt-10">&#x00A0;age);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /></div></div>
<!--l. 158--><p class="noindent" >If you compile and run pointers then you get the following. Look closely at the pointer values and the
address of the people array of structs and the various sizes of data types including a pointer and the size of
the person struct.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">[atc@dhcp-210-161</span><span 
class="cmtt-10">&#x00A0;l8]</span><span 
class="cmtt-10">&#x00A0;./pointers</span><br /><span 
class="cmtt-10">pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;4</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0xc</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2070,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x208c</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;21</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;2100</span><span 
class="cmtt-10">&#x00A0;years</span><br /><br /></div></div>
<!--l. 178--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>Sorting an array of values</h3>
<!--l. 180--><p class="noindent" >A frequently required operation is to sort an array of, say, integers or characters. The standard C library
provides a generic function named qsort() to help with this, but we must write a pointer-based function to
perform the comparison of the arrays elements:
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;N</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;compare(const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*jp)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(*i</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;*j);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;main(int</span><span 
class="cmtt-10">&#x00A0;argc,</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*argv[])</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;values[N];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srandom(</span><span 
class="cmtt-10">&#x00A0;getpid()</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for(i=0</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i&#x003C;N</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;values[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;random();</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;qsort((void</span><span 
class="cmtt-10">&#x00A0;*)values,</span><span 
class="cmtt-10">&#x00A0;(size_t)N,sizeof(values[0]),</span><span 
class="cmtt-10">&#x00A0;compare);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;....</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(0);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 219--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a>Dynamic memory allocation</h3>
<!--l. 221--><p class="noindent" >The function malloc() returns a requested number of bytes from the operating systems heap. If insufficient
memory is available malloc returns NULL. When we are finished using the space returned by malloc(), our
program should be returned to the heap with a call to free(). If a process continues to malloc() memory
and fails to deallocate it using free(), the process will quickly run out of memory and terminate
ungracefully.
<!--l. 227--><p class="noindent" >The dynamic memory management functions are supported by the standard C library and their detailed
function protypes are found in stdlib.h. Memor allocation functions allow programmers to dynamically
allocate memory from the heap for variables, arrays, and structures; rather that statically allocating space
on the stack. Many times it is not possible to know in advance of run time of a program what the memory
demands for the program are. People that use static allocation somewhat have to second guess what the
worst case memory needs are and statically allocation that at compile time. This is not a good
programming principle. Better to make your program general and capable of dealing with a
wide variety of demands - the message, but the smarts into the program and don&#8217;t second
guess.
<!--l. 229--><p class="noindent" >The following memory management prototypes are supported:
     <ul class="itemize1">
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">calloc()</span></span></span> which dynamically allocates memory - &#8220;c&#8221; stands for contiguous allocation. calloc
     is typically used to allocate contiguous space for arrays. The memory is with all bits set to
     zero/ char arrays to NULL.
                                                                                  
                                                                                  
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> which dynamically allocates memory - &#8220;m&#8221; stands for memory. Similar to calloc
     but more general purpose allocation function. Does not initialize memory (user has to do that
     if necessary).
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">realloc()</span></span></span> which dynamically reallocates allocates memory - &#8220;r&#8221; stands for reallocate memory.
     This function allows the programmer to change the size of previously allocated memory to a
     new size.
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">free()</span></span></span> which deallocates memory releasing the block of memory back to the heap. If memory
     is  continuously  allocated  and  not  released  two  things  may  happen:  memory  leak  or  the
     requesting process could be killed. Take care to free memory.</li></ul>
<!--l. 237--><p class="noindent" ><span 
class="cmbx-10">Note</span>:Unlike Java, C has no garbage collection of heap objects, and so programs must be very careful
about deallocating memory that is no longer required.
<!--l. 240--><p class="noindent" >The memory management functions use &#8220;pointer to void&#8221; (void *) which allows the programmer to assign
the returned pointer to memory to any struct, array, variable without casting. This is a very good example
of the use of pointer to void.
<!--l. 242--><p class="noindent" >Consider the following example which allocates space for a new copy of a given string. This is very similar
to the standard function named strdup():
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;returns</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;requested</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;*malloc(unsigned</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;nbytes);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*newstr(const</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*s)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if(</span><span 
class="cmtt-10">&#x00A0;(p=malloc(strlen(s)+1))</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fprintf(stderr,"out</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;memory!\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(1);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strcpy(p,s);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 273--><p class="noindent" ><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> is also frequently used to allocate memory for structures.
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*line;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*next;</span><br /><span 
class="cmtt-10">&#x00A0;};</span><br /><br /><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(</span><span 
class="cmtt-10">&#x00A0;sizeof(struct</span><span 
class="cmtt-10">&#x00A0;l)</span><span 
class="cmtt-10">&#x00A0;),</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;fgets(buf,</span><span 
class="cmtt-10">&#x00A0;MAX,</span><span 
class="cmtt-10">&#x00A0;fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;while(</span><span 
class="cmtt-10">&#x00A0;!feof(fp)</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=NEW(struct</span><span 
class="cmtt-10">&#x00A0;l);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;line</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;newstr(buf);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;hd;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;p;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fgets(buf,MAX,fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 304--><p class="noindent" >The program below uses <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc</span></span></span> to dynamically create an array of integers based on the user input n. The
program allocates the memory, fills it with random integers scaled between 18 and -9, displays the array
and frees the memory. It does this forever.
<!--l. 306--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/memory.c" > memory.c </a>
<!--l. 308--><p class="noindent" >The contents of memory.c looks like this:
<!--l. 310--><p class="noindent" ><span 
class="cmbx-10">Compilie the code and run it</span>.
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;memory.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Uses</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;create</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;ints.</span><span 
class="cmtt-10">&#x00A0;The</span><br /><span 
class="cmtt-10">&#x00A0;user</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;n.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;allocates</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory,</span><span 
class="cmtt-10">&#x00A0;fills</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;random</span><span 
class="cmtt-10">&#x00A0;integers</span><br /><span 
class="cmtt-10">&#x00A0;scaled</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-9,</span><span 
class="cmtt-10">&#x00A0;displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;does</span><br /><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sums</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;elements.</span><br /><br /><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;problem</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;adapted</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;Book</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;C</span><span 
class="cmtt-10">&#x00A0;(Kelly,</span><span 
class="cmtt-10">&#x00A0;Pohl)</span><span 
class="cmtt-10">&#x00A0;pg.</span><span 
class="cmtt-10">&#x00A0;261.</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;time.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;string.h&#x003E;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;useful</span><span 
class="cmtt-10">&#x00A0;macros.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(),</span><span 
class="cmtt-10">&#x00A0;BZERO(),</span><span 
class="cmtt-10">&#x00A0;MY_ASSERT(),</span><span 
class="cmtt-10">&#x00A0;LOG()</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;prototypes</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srand(time(NULL));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\n%s\n",</span><br />        <span 
class="cmtt-10">&#x00A0;"This</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;following</span><span 
class="cmtt-10">&#x00A0;repeatedly:\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;Create</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;n\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2)</span><span 
class="cmtt-10">&#x00A0;Fill</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;randomly</span><span 
class="cmtt-10">&#x00A0;distributed</span><span 
class="cmtt-10">&#x00A0;digits\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;3)</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;elements\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;4)</span><span 
class="cmtt-10">&#x00A0;Frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;allocated</span><span 
class="cmtt-10">&#x00A0;memory\n");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Input</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;want</span><span 
class="cmtt-10">&#x00A0;created.</span><span 
class="cmtt-10">&#x00A0;n:</span><span 
class="cmtt-10">&#x00A0;");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(scanf("%d",</span><span 
class="cmtt-10">&#x00A0;&amp;n)</span><span 
class="cmtt-10">&#x00A0;!=1</span><span 
class="cmtt-10">&#x00A0;||</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;LOG("Usage:</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;has</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;&#x003E;</span><span 
class="cmtt-10">&#x00A0;0\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;continue;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;try</span><span 
class="cmtt-10">&#x00A0;again</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;malloc()</span><span 
class="cmtt-10">&#x00A0;allocate</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;unused</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;object</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;n</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;unspecified.</span><span 
class="cmtt-10">&#x00A0;Because</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;good</span><span 
class="cmtt-10">&#x00A0;idea</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//to</span><span 
class="cmtt-10">&#x00A0;zeroise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;returned</span><span 
class="cmtt-10">&#x00A0;memory.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;putchar(&#8217;\n&#8217;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;bytes;</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ip</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;malloc&#8217;d</span><span 
class="cmtt-10">&#x00A0;array,</span><span 
class="cmtt-10">&#x00A0;recall</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;could</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;value</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;BZERO&#8217;d</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(ip,</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;initialed</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sum</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;initArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Sum</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;%d\n\n",</span><span 
class="cmtt-10">&#x00A0;sumArray(ip,</span><span 
class="cmtt-10">&#x00A0;n));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;don&#8217;t</span><span 
class="cmtt-10">&#x00A0;forget</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;free</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;leaks</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;free(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\nLater!\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;a[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;rand()%19</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;scales</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i,</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;=0;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;a[i];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(sum);</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("a</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;[");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%d%s",</span><span 
class="cmtt-10">&#x00A0;a[i],</span><span 
class="cmtt-10">&#x00A0;((i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;?</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;:</span><span 
class="cmtt-10">&#x00A0;"]\n"));</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 445--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a>Use macros and header files</h3>
<!--l. 447--><p class="noindent" >Here is the header file header.h. It defines a number of useful macros that you can use in the TinySearch
Engine project.
<!--l. 450--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/header.h" > header.h </a>
                                                                                  
                                                                                  
<!--l. 452--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;header.h</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;utilites</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TinySearchEngine</span><span 
class="cmtt-10">&#x00A0;engine</span><span 
class="cmtt-10">&#x00A0;project</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;MACROs</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;initialization</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;some</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;exceptions</span><span 
class="cmtt-10">&#x00A0;processing</span><br /><span 
class="cmtt-10">//</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;makes</span><span 
class="cmtt-10">&#x00A0;sure</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;include</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;twice.</span><span 
class="cmtt-10">&#x00A0;Use</span><span 
class="cmtt-10">&#x00A0;it.</span><br /><br /><span 
class="cmtt-10">#ifndef</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;min(x,y)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;((x)&#x003E;(y))?(y):(x)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Print</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;together</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;source</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;current</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;number.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;LOG(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("[%s:%d]%s\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__,</span><span 
class="cmtt-10">&#x00A0;s)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;new</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;t</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MYASSERT(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(!(s))</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("General</span><span 
class="cmtt-10">&#x00A0;Assert</span><span 
class="cmtt-10">&#x00A0;Error</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;((s)</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("No</span><span 
class="cmtt-10">&#x00A0;enough</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;perror(":");</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;starts</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;m</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;zero.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;BZERO(n,m)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;memset(n,</span><span 
class="cmtt-10">&#x00A0;0,</span><span 
class="cmtt-10">&#x00A0;m)</span><br /><br /><span 
class="cmtt-10">#endif</span><br /><br /></div></div>
<!--l. 506--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-9000"></a>Examples of mallocing crawler data structures</h3>
<!--l. 508--><p class="noindent" >We have discuss pointers and we have looked at simple allocation of arrays using dynamic
memory. Note that malloc (which we will use through the course) returns a &#8220;pointer to void&#8221;
(void *) allowing the returning pointer to be &#8220;cast&#8221; to any data structure. In what follows,
we use sample code that is relevant to the crawler and allocate memory for some important
data structures, including, the dictionary, DNODE and URLNODE. Don&#8217;t worry that you do
not know the meaning of these structures at this point. You will become very familiar with
them.
<!--l. 515--><p class="noindent" >So let&#8217;s write some code to dynamically create the dictionary. After that we will allocate a URLNODE
and DNODE and link them into the structure. This is similar to what you need to do in the real crawler
code - so take a close look.
<!--l. 519--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/dictionary-example.c" > dictionary-example.c </a>
<!--l. 521--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;dictionary-example.c</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Descriptions:</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;goal</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;show</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocating</span><span 
class="cmtt-10">&#x00A0;memory</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dat</span><span 
class="cmtt-10">&#x00A0;structures.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;example</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;shows</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;void/</span><span 
class="cmtt-10">&#x00A0;casting</span><span 
class="cmtt-10">&#x00A0;pointers</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;used.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;drawn</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;implementation.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;While</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;imcomplete</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;illustrates</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;important</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structures</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;such</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DICTIONARY,</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;created</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;malloc.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary:</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;provides</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;purpose</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;based</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;where</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;URLNODEs)</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;assigned</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;stored</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;DNODE.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;blown</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;functions</span><span 
class="cmtt-10">&#x00A0;(not</span><span 
class="cmtt-10">&#x00A0;presented</span><span 
class="cmtt-10">&#x00A0;below)</span><span 
class="cmtt-10">&#x00A0;provide</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;adding/removing/searching</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(URLNODEs)</span><span 
class="cmtt-10">&#x00A0;inside</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;super</span><span 
class="cmtt-10">&#x00A0;fast</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;speed.</span><br /><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;memory.h&#x003E;</span><br /><span 
class="cmtt-10">//#include</span><span 
class="cmtt-10">&#x00A0;"dictionary.h"</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Unlikely</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;more</span><span 
class="cmtt-10">&#x00A0;than</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;longer</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;1000</span><span 
class="cmtt-10">&#x00A0;chars.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;term</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;a</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;Dictionary/hash</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;term</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;KEY_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Maximum</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;within</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_HASH_SLOT</span><span 
class="cmtt-10">&#x00A0;10000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;structures</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;dictionary.h</span><span 
class="cmtt-10">&#x00A0;but</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;put</span><span 
class="cmtt-10">&#x00A0;them</span><span 
class="cmtt-10">&#x00A0;here</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;ease</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;discussion.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;next;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;prev;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void*</span><span 
class="cmtt-10">&#x00A0;data;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;data,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;key[KEY_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;key,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DNODE;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;DNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;holds</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;double</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;unordered</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;exception</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;(URL)</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;clusters</span><span 
class="cmtt-10">&#x00A0;along</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;So</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;uniqueness</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;found</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;cluster</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;wit</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;addElement</span><span 
class="cmtt-10">&#x00A0;function.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;hash[MAX_HASH_SLOT];</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;slots,</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;DNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;start;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;double</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;terminated</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;pointer</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;end;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;last</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;list</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DICTIONARY;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;DICTIONARY;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;max</span><span 
class="cmtt-10">&#x00A0;length</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;path.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_URL_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;store</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;information</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;url[MAX_URL_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;e.g.,</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;depth;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;visited;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;crawled</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not,</span><span 
class="cmtt-10">&#x00A0;marked</span><span 
class="cmtt-10">&#x00A0;true(1),</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;false(0)</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__URL;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL</span><span 
class="cmtt-10">&#x00A0;URLNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;routine</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;fixed</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;keep</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;happy</span><br /><br /><span 
class="cmtt-10">unsigned</span><span 
class="cmtt-10">&#x00A0;long</span><span 
class="cmtt-10">&#x00A0;hash=20;</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;make_hash(char</span><span 
class="cmtt-10">&#x00A0;*c)</span><br /><span 
class="cmtt-10">{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(hash);</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main(void){</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;depth</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;*url="http://www.cs.dartmouth.edu/~campbell/";</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Initialise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*dict</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DICTIONARY));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(dict,</span><span 
class="cmtt-10">&#x00A0;sizeof(DICTIONARY));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;*n</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(URLNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(URLNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;depth;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;sizeof(n-&#x003E;url));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strncpy(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;url,</span><span 
class="cmtt-10">&#x00A0;strlen(url));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;At</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;point</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;call</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;did</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exist;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;example,</span><span 
class="cmtt-10">&#x00A0;DAdd(dict,</span><span 
class="cmtt-10">&#x00A0;n,</span><span 
class="cmtt-10">&#x00A0;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;function.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;course</span><span 
class="cmtt-10">&#x00A0;incomplete.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;h</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;make_hash(url);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MYASSERT(dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;*d</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(d,</span><span 
class="cmtt-10">&#x00A0;sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;hash[h]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;NULL;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;copy</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;here</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;dict:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("hash</span><span 
class="cmtt-10">&#x00A0;%lu\n",</span><span 
class="cmtt-10">&#x00A0;hash);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;hash[hash]</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;hash[hash]);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;end);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;d:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;next);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;prev);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;data);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;key</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;initialized</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;example");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;structure:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;url</span><span 
class="cmtt-10">&#x00A0;%s\n",n-&#x003E;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;depth);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;visited);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exists</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;exist</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;initial</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
 
</body></html> 

                                                                                  


http://www.cs.dartmouth.edu/~campbell/cs50/dynamicmem.html
Depth: 2
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title></title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<meta name="originator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)"> 
<!-- html --> 
<meta name="src" content="dynamicmem.tex"> 
<meta name="date" content="2014-01-31 08:59:00"> 
<link rel="stylesheet" type="text/css" href="dynamicmem.css"> 
</head><body 
>
<h1 class="likepartHead"><a 
 id="x1-1000"></a>CS 50 Software Design and Implementation</h1>
<h1 class="likepartHead"><a 
 id="x1-2000"></a>Lecture 9</h1>
<h1 class="likepartHead"><a 
 id="x1-3000"></a>Pointers and Dynamic Memory Allocation</h1>
<!--l. 21--><p class="noindent" >In this lecture, we carr on our introduction to the C language.
<h3 class="likesectionHead"><a 
 id="x1-4000"></a>Goals</h3>
<!--l. 26--><p class="noindent" >We plan to learn the following from today&#8217;s lecture:
     <ul class="itemize1">
     <li class="itemize">Pesky pointers continued
     </li>
     <li class="itemize">Dynamic memory allocation
     </li>
     <li class="itemize">Useful header file and macros for TinySearch Engine
     </li>
     <li class="itemize">Useful example of dynamic allocation of crawler data structures
     </li></ul>
<!--l. 36--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-5000"></a>Pointer Arithmetic on Structs</h3>
<!--l. 38--><p class="noindent" >When you incremet and decrement a pointer it adjust based on the data type pointed to by the pointer. In
the previous examples the data type pointed to was a char - which is a byte (8 bits) in terms of strorage.
So p++ (where char *p) increments by obe byte of 8 bits. But what happens if the pointer p points to a
structure?
<!--l. 40--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/pointers.c" > pointers.c </a>
<!--l. 42--><p class="noindent" >The contents of pointers.c looks like this:
                                                                                  
                                                                                  
<div 
class="colorbox" id="colorbox1"><div class="BVerbatimInput"><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;pointers.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Creates</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;types.</span><span 
class="cmtt-10">&#x00A0;Initialises</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;computes</span><br /><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;written</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;study</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;look</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;happens</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;incremented</span><br /><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;decremented.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;None</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;display</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;different</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;one</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Lecture</span><span 
class="cmtt-10">&#x00A0;6.</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;definitions</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;are</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;characters.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;typedef</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;define</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;type.</span><span 
class="cmtt-10">&#x00A0;Saves</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;when</span><span 
class="cmtt-10">&#x00A0;defining</span><span 
class="cmtt-10">&#x00A0;instances</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;type.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_person</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*name;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*addr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;person;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;How</span><span 
class="cmtt-10">&#x00A0;big</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;struct?</span><br /><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;people[NUMPEOPLE];</span><br /><span 
class="cmtt-10">person</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;age;</span><br /><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myname</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;"Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell";</span><br /><span 
class="cmtt-10">char</span><span 
class="cmtt-10">&#x00A0;*myadr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;"People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich";</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main()</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;intiatlise</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;array</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;(which</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;tag)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;needed</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;person?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;%ld</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0x%x</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes\n",</span><span 
class="cmtt-10">&#x00A0;sizeof(p),</span><span 
class="cmtt-10">&#x00A0;(unsigned</span><span 
class="cmtt-10">&#x00A0;int)sizeof(person));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;much</span><span 
class="cmtt-10">&#x00A0;storage</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people?</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;what</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;variables?</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)&amp;p,(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)people);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;increment</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;next</span><span 
class="cmtt-10">&#x00A0;person</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;table</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;decrement</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;previous</span><span 
class="cmtt-10">&#x00A0;person</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p--;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%p\n",</span><span 
class="cmtt-10">&#x00A0;(void</span><span 
class="cmtt-10">&#x00A0;*)p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;initialise</span><span 
class="cmtt-10">&#x00A0;our</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].age</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;21;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].name</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myname;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;people[i].addr</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;myadr;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;reset</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;(even</span><span 
class="cmtt-10">&#x00A0;though</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;already)</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Let&#8217;s</span><span 
class="cmtt-10">&#x00A0;compute</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;total</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;people.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;NOTE,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;incremet</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;move</span><span 
class="cmtt-10">&#x00A0;through</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;structs.</span><span 
class="cmtt-10">&#x00A0;Importantly</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;"-&#x003E;"</span><span 
class="cmtt-10">&#x00A0;symbol</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;index</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;struct.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i=0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;NUMPEOPLE;</span><span 
class="cmtt-10">&#x00A0;i++)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;-&#x003E;</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;.</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;used</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p++;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;people;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;%s\n",</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;name,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;age,</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;addr);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;%d</span><span 
class="cmtt-10">&#x00A0;years\n",</span><span 
class="cmtt-10">&#x00A0;age);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /></div></div>
<!--l. 158--><p class="noindent" >If you compile and run pointers then you get the following. Look closely at the pointer values and the
address of the people array of structs and the various sizes of data types including a pointer and the size of
the person struct.
<div 
class="colorbox" id="colorbox2"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">[atc@dhcp-210-161</span><span 
class="cmtt-10">&#x00A0;l8]</span><span 
class="cmtt-10">&#x00A0;./pointers</span><br /><span 
class="cmtt-10">pointer</span><span 
class="cmtt-10">&#x00A0;needs</span><span 
class="cmtt-10">&#x00A0;4</span><span 
class="cmtt-10">&#x00A0;bytes,</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;0xc</span><span 
class="cmtt-10">&#x00A0;(HEX)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2070,</span><span 
class="cmtt-10">&#x00A0;it&#8217;s</span><span 
class="cmtt-10">&#x00A0;contes</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;(i.e.,</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to)</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;address</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;incrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x208c</span><br /><span 
class="cmtt-10">after</span><span 
class="cmtt-10">&#x00A0;decrementing</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;0x2080</span><br /><span 
class="cmtt-10">Andrew</span><span 
class="cmtt-10">&#x00A0;T.</span><span 
class="cmtt-10">&#x00A0;Campbell</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;21</span><span 
class="cmtt-10">&#x00A0;years</span><span 
class="cmtt-10">&#x00A0;old</span><span 
class="cmtt-10">&#x00A0;(again)</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;lives</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;People&#8217;s</span><span 
class="cmtt-10">&#x00A0;Republic</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;Norwich</span><br /><span 
class="cmtt-10">The</span><span 
class="cmtt-10">&#x00A0;accumulative</span><span 
class="cmtt-10">&#x00A0;age</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;people</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;2100</span><span 
class="cmtt-10">&#x00A0;years</span><br /><br /></div></div>
<!--l. 178--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-6000"></a>Sorting an array of values</h3>
<!--l. 180--><p class="noindent" >A frequently required operation is to sort an array of, say, integers or characters. The standard C library
provides a generic function named qsort() to help with this, but we must write a pointer-based function to
perform the comparison of the arrays elements:
<div 
class="colorbox" id="colorbox3"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;N</span><span 
class="cmtt-10">&#x00A0;100</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;compare(const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;const</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*jp)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(*i</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;*j);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;main(int</span><span 
class="cmtt-10">&#x00A0;argc,</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*argv[])</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;values[N];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srandom(</span><span 
class="cmtt-10">&#x00A0;getpid()</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for(i=0</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i&#x003C;N</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;values[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;random();</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;qsort((void</span><span 
class="cmtt-10">&#x00A0;*)values,</span><span 
class="cmtt-10">&#x00A0;(size_t)N,sizeof(values[0]),</span><span 
class="cmtt-10">&#x00A0;compare);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;....</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(0);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 219--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-7000"></a>Dynamic memory allocation</h3>
<!--l. 221--><p class="noindent" >The function malloc() returns a requested number of bytes from the operating systems heap. If insufficient
memory is available malloc returns NULL. When we are finished using the space returned by malloc(), our
program should be returned to the heap with a call to free(). If a process continues to malloc() memory
and fails to deallocate it using free(), the process will quickly run out of memory and terminate
ungracefully.
<!--l. 227--><p class="noindent" >The dynamic memory management functions are supported by the standard C library and their detailed
function protypes are found in stdlib.h. Memor allocation functions allow programmers to dynamically
allocate memory from the heap for variables, arrays, and structures; rather that statically allocating space
on the stack. Many times it is not possible to know in advance of run time of a program what the memory
demands for the program are. People that use static allocation somewhat have to second guess what the
worst case memory needs are and statically allocation that at compile time. This is not a good
programming principle. Better to make your program general and capable of dealing with a
wide variety of demands - the message, but the smarts into the program and don&#8217;t second
guess.
<!--l. 229--><p class="noindent" >The following memory management prototypes are supported:
     <ul class="itemize1">
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">calloc()</span></span></span> which dynamically allocates memory - &#8220;c&#8221; stands for contiguous allocation. calloc
     is typically used to allocate contiguous space for arrays. The memory is with all bits set to
     zero/ char arrays to NULL.
                                                                                  
                                                                                  
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> which dynamically allocates memory - &#8220;m&#8221; stands for memory. Similar to calloc
     but more general purpose allocation function. Does not initialize memory (user has to do that
     if necessary).
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">realloc()</span></span></span> which dynamically reallocates allocates memory - &#8220;r&#8221; stands for reallocate memory.
     This function allows the programmer to change the size of previously allocated memory to a
     new size.
     </li>
     <li class="itemize"><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">free()</span></span></span> which deallocates memory releasing the block of memory back to the heap. If memory
     is  continuously  allocated  and  not  released  two  things  may  happen:  memory  leak  or  the
     requesting process could be killed. Take care to free memory.</li></ul>
<!--l. 237--><p class="noindent" ><span 
class="cmbx-10">Note</span>:Unlike Java, C has no garbage collection of heap objects, and so programs must be very careful
about deallocating memory that is no longer required.
<!--l. 240--><p class="noindent" >The memory management functions use &#8220;pointer to void&#8221; (void *) which allows the programmer to assign
the returned pointer to memory to any struct, array, variable without casting. This is a very good example
of the use of pointer to void.
<!--l. 242--><p class="noindent" >Consider the following example which allocates space for a new copy of a given string. This is very similar
to the standard function named strdup():
<div 
class="colorbox" id="colorbox4"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;returns</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;requested</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void</span><span 
class="cmtt-10">&#x00A0;*malloc(unsigned</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;nbytes);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*newstr(const</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*s)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if(</span><span 
class="cmtt-10">&#x00A0;(p=malloc(strlen(s)+1))</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fprintf(stderr,"out</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;memory!\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(1);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strcpy(p,s);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(p);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 273--><p class="noindent" ><span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc()</span></span></span> is also frequently used to allocate memory for structures.
<div 
class="colorbox" id="colorbox5"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;*line;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*next;</span><br /><span 
class="cmtt-10">&#x00A0;};</span><br /><br /><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;l</span><span 
class="cmtt-10">&#x00A0;*hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(</span><span 
class="cmtt-10">&#x00A0;sizeof(struct</span><span 
class="cmtt-10">&#x00A0;l)</span><span 
class="cmtt-10">&#x00A0;),</span><span 
class="cmtt-10">&#x00A0;*p;</span><br /><br /><span 
class="cmtt-10">&#x00A0;fgets(buf,</span><span 
class="cmtt-10">&#x00A0;MAX,</span><span 
class="cmtt-10">&#x00A0;fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;while(</span><span 
class="cmtt-10">&#x00A0;!feof(fp)</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p</span><span 
class="cmtt-10">&#x00A0;=NEW(struct</span><span 
class="cmtt-10">&#x00A0;l);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;line</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;newstr(buf);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;p-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;hd;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;hd</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;p;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;fgets(buf,MAX,fp);</span><br /><br /><span 
class="cmtt-10">&#x00A0;}</span><br /><br /></div></div>
<!--l. 304--><p class="noindent" >The program below uses <span class="obeylines-h"><span class="verb"><span 
class="cmtt-10">malloc</span></span></span> to dynamically create an array of integers based on the user input n. The
program allocates the memory, fills it with random integers scaled between 18 and -9, displays the array
and frees the memory. It does this forever.
<!--l. 306--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/memory.c" > memory.c </a>
<!--l. 308--><p class="noindent" >The contents of memory.c looks like this:
<!--l. 310--><p class="noindent" ><span 
class="cmbx-10">Compilie the code and run it</span>.
<div 
class="colorbox" id="colorbox6"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">/*</span><br /><br /><span 
class="cmtt-10">&#x00A0;File:</span><span 
class="cmtt-10">&#x00A0;memory.c</span><br /><br /><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Uses</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;create</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;ints.</span><span 
class="cmtt-10">&#x00A0;The</span><br /><span 
class="cmtt-10">&#x00A0;user</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;n.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;allocates</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory,</span><span 
class="cmtt-10">&#x00A0;fills</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;random</span><span 
class="cmtt-10">&#x00A0;integers</span><br /><span 
class="cmtt-10">&#x00A0;scaled</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-9,</span><span 
class="cmtt-10">&#x00A0;displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;does</span><br /><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;Input:</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><br /><br /><span 
class="cmtt-10">&#x00A0;Output:</span><span 
class="cmtt-10">&#x00A0;Displays</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;contents</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sums</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;all</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;elements.</span><br /><br /><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;problem</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;adapted</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;Book</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;C</span><span 
class="cmtt-10">&#x00A0;(Kelly,</span><span 
class="cmtt-10">&#x00A0;Pohl)</span><span 
class="cmtt-10">&#x00A0;pg.</span><span 
class="cmtt-10">&#x00A0;261.</span><br /><br /><span 
class="cmtt-10">*/</span><br /><br /><span 
class="cmtt-10">#include&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;time.h&#x003E;</span><br /><span 
class="cmtt-10">#include&#x003C;string.h&#x003E;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;local</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;various</span><span 
class="cmtt-10">&#x00A0;useful</span><span 
class="cmtt-10">&#x00A0;macros.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(),</span><span 
class="cmtt-10">&#x00A0;BZERO(),</span><span 
class="cmtt-10">&#x00A0;MY_ASSERT(),</span><span 
class="cmtt-10">&#x00A0;LOG()</span><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;prototypes</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;);</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;(void)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;*ip,</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;srand(time(NULL));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\n%s\n",</span><br />        <span 
class="cmtt-10">&#x00A0;"This</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;following</span><span 
class="cmtt-10">&#x00A0;repeatedly:\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;Create</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;n\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;2)</span><span 
class="cmtt-10">&#x00A0;Fill</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;randomly</span><span 
class="cmtt-10">&#x00A0;distributed</span><span 
class="cmtt-10">&#x00A0;digits\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;3)</span><span 
class="cmtt-10">&#x00A0;Prints</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;its</span><span 
class="cmtt-10">&#x00A0;elements\n"</span><br />        <span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;4)</span><span 
class="cmtt-10">&#x00A0;Frees</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;allocated</span><span 
class="cmtt-10">&#x00A0;memory\n");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;;</span><span 
class="cmtt-10">&#x00A0;)</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;forever</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Input</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;want</span><span 
class="cmtt-10">&#x00A0;created.</span><span 
class="cmtt-10">&#x00A0;n:</span><span 
class="cmtt-10">&#x00A0;");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(scanf("%d",</span><span 
class="cmtt-10">&#x00A0;&amp;n)</span><span 
class="cmtt-10">&#x00A0;!=1</span><span 
class="cmtt-10">&#x00A0;||</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;LOG("Usage:</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;has</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;&#x003E;</span><span 
class="cmtt-10">&#x00A0;0\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;continue;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;try</span><span 
class="cmtt-10">&#x00A0;again</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;User</span><span 
class="cmtt-10">&#x00A0;enters</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;We</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;the</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;array.</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;malloc()</span><span 
class="cmtt-10">&#x00A0;allocate</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;unused</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;object</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;bytes</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;n</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;whose</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;unspecified.</span><span 
class="cmtt-10">&#x00A0;Because</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;good</span><span 
class="cmtt-10">&#x00A0;idea</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//to</span><span 
class="cmtt-10">&#x00A0;zeroise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;returned</span><span 
class="cmtt-10">&#x00A0;memory.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;putchar(&#8217;\n&#8217;);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;allocate</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;bytes;</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int)</span><span 
class="cmtt-10">&#x00A0;bytes</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;ip</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;malloc(n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;malloc&#8217;d</span><span 
class="cmtt-10">&#x00A0;array,</span><span 
class="cmtt-10">&#x00A0;recall</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;specified</span><span 
class="cmtt-10">&#x00A0;could</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;any</span><span 
class="cmtt-10">&#x00A0;value</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;BZERO&#8217;d</span><span 
class="cmtt-10">&#x00A0;array</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(ip,</span><span 
class="cmtt-10">&#x00A0;n*sizeof(int));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;display</span><span 
class="cmtt-10">&#x00A0;initialed</span><span 
class="cmtt-10">&#x00A0;array</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;sum</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;initArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;displayArray(ip,</span><span 
class="cmtt-10">&#x00A0;n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("Sum</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;%d\n\n",</span><span 
class="cmtt-10">&#x00A0;sumArray(ip,</span><span 
class="cmtt-10">&#x00A0;n));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;don&#8217;t</span><span 
class="cmtt-10">&#x00A0;forget</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;free</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;leaks</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;free(ip);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("\nLater!\n\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;initArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;a[i]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;rand()%19</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;scales</span><span 
class="cmtt-10">&#x00A0;between</span><span 
class="cmtt-10">&#x00A0;18</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;9</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;sumArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i,</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;=0;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;sum</span><span 
class="cmtt-10">&#x00A0;+=</span><span 
class="cmtt-10">&#x00A0;a[i];</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(sum);</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">void</span><span 
class="cmtt-10">&#x00A0;displayArray(int</span><span 
class="cmtt-10">&#x00A0;*a,</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;n)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;i;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("a</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;[");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;(i</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><span 
class="cmtt-10">&#x00A0;i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n;</span><span 
class="cmtt-10">&#x00A0;i++)</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("%d%s",</span><span 
class="cmtt-10">&#x00A0;a[i],</span><span 
class="cmtt-10">&#x00A0;((i</span><span 
class="cmtt-10">&#x00A0;&#x003C;</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;1)</span><span 
class="cmtt-10">&#x00A0;?</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;"</span><span 
class="cmtt-10">&#x00A0;:</span><span 
class="cmtt-10">&#x00A0;"]\n"));</span><br /><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
<!--l. 445--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-8000"></a>Use macros and header files</h3>
<!--l. 447--><p class="noindent" >Here is the header file header.h. It defines a number of useful macros that you can use in the TinySearch
Engine project.
<!--l. 450--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/header.h" > header.h </a>
                                                                                  
                                                                                  
<!--l. 452--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox7"><div class="BVerbatimInput"><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;header.h</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Description:</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;utilites</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;TinySearchEngine</span><span 
class="cmtt-10">&#x00A0;engine</span><span 
class="cmtt-10">&#x00A0;project</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;MACROs</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;initialization</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;some</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;exceptions</span><span 
class="cmtt-10">&#x00A0;processing</span><br /><span 
class="cmtt-10">//</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Note,</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;makes</span><span 
class="cmtt-10">&#x00A0;sure</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;do</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;include</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;twice.</span><span 
class="cmtt-10">&#x00A0;Use</span><span 
class="cmtt-10">&#x00A0;it.</span><br /><br /><span 
class="cmtt-10">#ifndef</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;_HEADER_H_</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;min(x,y)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;((x)&#x003E;(y))?(y):(x)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Print</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;together</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;source</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;name</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;current</span><span 
class="cmtt-10">&#x00A0;line</span><span 
class="cmtt-10">&#x00A0;number.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;LOG(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("[%s:%d]%s\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__,</span><span 
class="cmtt-10">&#x00A0;s)</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;new</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;t</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;NEW(t)</span><span 
class="cmtt-10">&#x00A0;malloc(sizeof(t))</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MYASSERT(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(!(s))</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("General</span><span 
class="cmtt-10">&#x00A0;Assert</span><span 
class="cmtt-10">&#x00A0;Error</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d\n",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;whether</span><span 
class="cmtt-10">&#x00A0;s</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;allocation.</span><span 
class="cmtt-10">&#x00A0;Quit</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;program</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;NULL.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(s)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;((s)</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;{</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("No</span><span 
class="cmtt-10">&#x00A0;enough</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;%s:line%d</span><span 
class="cmtt-10">&#x00A0;",</span><span 
class="cmtt-10">&#x00A0;__FILE__,</span><span 
class="cmtt-10">&#x00A0;__LINE__);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;perror(":");</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;exit(-1);</span><span 
class="cmtt-10">&#x00A0;\</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;memory</span><span 
class="cmtt-10">&#x00A0;space</span><span 
class="cmtt-10">&#x00A0;starts</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;n</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;size</span><span 
class="cmtt-10">&#x00A0;\a</span><span 
class="cmtt-10">&#x00A0;m</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;zero.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;BZERO(n,m)</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;memset(n,</span><span 
class="cmtt-10">&#x00A0;0,</span><span 
class="cmtt-10">&#x00A0;m)</span><br /><br /><span 
class="cmtt-10">#endif</span><br /><br /></div></div>
<!--l. 506--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-9000"></a>Examples of mallocing crawler data structures</h3>
<!--l. 508--><p class="noindent" >We have discuss pointers and we have looked at simple allocation of arrays using dynamic
memory. Note that malloc (which we will use through the course) returns a &#8220;pointer to void&#8221;
(void *) allowing the returning pointer to be &#8220;cast&#8221; to any data structure. In what follows,
we use sample code that is relevant to the crawler and allocate memory for some important
data structures, including, the dictionary, DNODE and URLNODE. Don&#8217;t worry that you do
not know the meaning of these structures at this point. You will become very familiar with
them.
<!--l. 515--><p class="noindent" >So let&#8217;s write some code to dynamically create the dictionary. After that we will allocate a URLNODE
and DNODE and link them into the structure. This is similar to what you need to do in the real crawler
code - so take a close look.
<!--l. 519--><p class="noindent" ><span 
class="cmbx-10">C code</span>:<a 
href="http://www.cs.dartmouth.edu/~campbell/cs50/dictionary-example.c" > dictionary-example.c </a>
<!--l. 521--><p class="noindent" >The contents of header.c looks like this:
<div 
class="colorbox" id="colorbox8"><div class="BVerbatimInput"><br /><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Filename:</span><span 
class="cmtt-10">&#x00A0;dictionary-example.c</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Descriptions:</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;goal</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;show</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;use</span><span 
class="cmtt-10">&#x00A0;-</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;allocating</span><span 
class="cmtt-10">&#x00A0;memory</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;dat</span><span 
class="cmtt-10">&#x00A0;structures.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Some</span><span 
class="cmtt-10">&#x00A0;example</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;shows</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;malloc</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;void/</span><span 
class="cmtt-10">&#x00A0;casting</span><span 
class="cmtt-10">&#x00A0;pointers</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;can</span><span 
class="cmtt-10">&#x00A0;be</span><span 
class="cmtt-10">&#x00A0;used.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;below</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;drawn</span><span 
class="cmtt-10">&#x00A0;from</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;crawler</span><span 
class="cmtt-10">&#x00A0;implementation.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;While</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;imcomplete</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;illustrates</span><span 
class="cmtt-10">&#x00A0;how</span><span 
class="cmtt-10">&#x00A0;important</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structures</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;such</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DICTIONARY,</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;dynamically</span><span 
class="cmtt-10">&#x00A0;created</span><span 
class="cmtt-10">&#x00A0;using</span><span 
class="cmtt-10">&#x00A0;malloc.</span><br /><span 
class="cmtt-10">//</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;note</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary:</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;A</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;provides</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;purpose</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;based</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;where</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;URLNODEs)</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;assigned</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;stored</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;DNODE.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;full</span><span 
class="cmtt-10">&#x00A0;blown</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;functions</span><span 
class="cmtt-10">&#x00A0;(not</span><span 
class="cmtt-10">&#x00A0;presented</span><span 
class="cmtt-10">&#x00A0;below)</span><span 
class="cmtt-10">&#x00A0;provide</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;for</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;adding/removing/searching</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;elements</span><span 
class="cmtt-10">&#x00A0;(URLNODEs)</span><span 
class="cmtt-10">&#x00A0;inside</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;at</span><span 
class="cmtt-10">&#x00A0;super</span><span 
class="cmtt-10">&#x00A0;fast</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;speed.</span><br /><br /><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdio.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;stdlib.h&#x003E;</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;&#x003C;memory.h&#x003E;</span><br /><span 
class="cmtt-10">//#include</span><span 
class="cmtt-10">&#x00A0;"dictionary.h"</span><br /><span 
class="cmtt-10">#include</span><span 
class="cmtt-10">&#x00A0;"header.h"</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Unlikely</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;have</span><span 
class="cmtt-10">&#x00A0;more</span><span 
class="cmtt-10">&#x00A0;than</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;longer</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;1000</span><span 
class="cmtt-10">&#x00A0;chars.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;as</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;term</span><span 
class="cmtt-10">&#x00A0;KEY</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;a</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;general</span><span 
class="cmtt-10">&#x00A0;Dictionary/hash</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;term</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;KEY_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;Maximum</span><span 
class="cmtt-10">&#x00A0;number</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;within</span><span 
class="cmtt-10">&#x00A0;dictionary</span><br /><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_HASH_SLOT</span><span 
class="cmtt-10">&#x00A0;10000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;structures</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;defined</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;header</span><span 
class="cmtt-10">&#x00A0;file</span><span 
class="cmtt-10">&#x00A0;dictionary.h</span><span 
class="cmtt-10">&#x00A0;but</span><span 
class="cmtt-10">&#x00A0;I</span><span 
class="cmtt-10">&#x00A0;put</span><span 
class="cmtt-10">&#x00A0;them</span><span 
class="cmtt-10">&#x00A0;here</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;ease</span><span 
class="cmtt-10">&#x00A0;of</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;discussion.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;next;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE*</span><span 
class="cmtt-10">&#x00A0;prev;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;void*</span><span 
class="cmtt-10">&#x00A0;data;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;data,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;pointer</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;key[KEY_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;actual</span><span 
class="cmtt-10">&#x00A0;key,</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;case</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DNODE;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DNODE</span><span 
class="cmtt-10">&#x00A0;DNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;holds</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;pointers</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;double</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;This</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;unordered</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;exception</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;(URL)</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;are</span><span 
class="cmtt-10">&#x00A0;clusters</span><span 
class="cmtt-10">&#x00A0;along</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;So</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;into</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;list.</span><span 
class="cmtt-10">&#x00A0;Check</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;uniqueness</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;found</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;end</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;cluster</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;wit</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;same</span><span 
class="cmtt-10">&#x00A0;URL.</span><span 
class="cmtt-10">&#x00A0;You</span><span 
class="cmtt-10">&#x00A0;will</span><span 
class="cmtt-10">&#x00A0;have</span><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;write</span><span 
class="cmtt-10">&#x00A0;an</span><span 
class="cmtt-10">&#x00A0;addElement</span><span 
class="cmtt-10">&#x00A0;function.</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;hash[MAX_HASH_SLOT];</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;hash</span><span 
class="cmtt-10">&#x00A0;table</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;slots,</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;slot</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;DNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;start;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;start</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;double</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;list</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;DNODES</span><span 
class="cmtt-10">&#x00A0;terminated</span><span 
class="cmtt-10">&#x00A0;by</span><span 
class="cmtt-10">&#x00A0;NULL</span><span 
class="cmtt-10">&#x00A0;pointer</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE*</span><span 
class="cmtt-10">&#x00A0;end;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;points</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;last</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;on</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;list</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__DICTIONARY;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_DICTIONARY</span><span 
class="cmtt-10">&#x00A0;DICTIONARY;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;The</span><span 
class="cmtt-10">&#x00A0;max</span><span 
class="cmtt-10">&#x00A0;length</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;path.</span><br /><span 
class="cmtt-10">#define</span><span 
class="cmtt-10">&#x00A0;MAX_URL_LENGTH</span><span 
class="cmtt-10">&#x00A0;1000</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;store</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;information</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;each</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;url[MAX_URL_LENGTH];</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;e.g.,</span><span 
class="cmtt-10">&#x00A0;www.cs.dartmouth.edu</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;depth;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;associated</span><span 
class="cmtt-10">&#x00A0;with</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;URL.</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;visited;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//!&#x003C;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;crawled</span><span 
class="cmtt-10">&#x00A0;or</span><span 
class="cmtt-10">&#x00A0;not,</span><span 
class="cmtt-10">&#x00A0;marked</span><span 
class="cmtt-10">&#x00A0;true(1),</span><span 
class="cmtt-10">&#x00A0;otherwise</span><span 
class="cmtt-10">&#x00A0;false(0)</span><br /><span 
class="cmtt-10">}</span><span 
class="cmtt-10">&#x00A0;__URL;</span><br /><br /><span 
class="cmtt-10">typedef</span><span 
class="cmtt-10">&#x00A0;struct</span><span 
class="cmtt-10">&#x00A0;_URL</span><span 
class="cmtt-10">&#x00A0;URLNODE;</span><br /><br /><span 
class="cmtt-10">//</span><span 
class="cmtt-10">&#x00A0;These</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;routine</span><span 
class="cmtt-10">&#x00A0;just</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;fixed</span><span 
class="cmtt-10">&#x00A0;value</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;keep</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;main</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;happy</span><br /><br /><span 
class="cmtt-10">unsigned</span><span 
class="cmtt-10">&#x00A0;long</span><span 
class="cmtt-10">&#x00A0;hash=20;</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;make_hash(char</span><span 
class="cmtt-10">&#x00A0;*c)</span><br /><span 
class="cmtt-10">{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return(hash);</span><br /><span 
class="cmtt-10">}</span><br /><br /><span 
class="cmtt-10">int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;main(void){</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;dummy</span><span 
class="cmtt-10">&#x00A0;URL</span><span 
class="cmtt-10">&#x00A0;and</span><span 
class="cmtt-10">&#x00A0;depth</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;char</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;*url="http://www.cs.dartmouth.edu/~campbell/";</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;1;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Initialise</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;data</span><span 
class="cmtt-10">&#x00A0;structure</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*dict</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DICTIONARY</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DICTIONARY));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(dict,</span><span 
class="cmtt-10">&#x00A0;sizeof(DICTIONARY));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;Set</span><span 
class="cmtt-10">&#x00A0;up</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;*n</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(URLNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(URLNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;depth</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;depth;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;sizeof(n-&#x003E;url));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;strncpy(n-&#x003E;url,</span><span 
class="cmtt-10">&#x00A0;url,</span><span 
class="cmtt-10">&#x00A0;strlen(url));</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;At</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;point</span><span 
class="cmtt-10">&#x00A0;we</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;call</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;function</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;add</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;to</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;dictionary</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;did</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exist;</span><span 
class="cmtt-10">&#x00A0;for</span><span 
class="cmtt-10">&#x00A0;example,</span><span 
class="cmtt-10">&#x00A0;DAdd(dict,</span><span 
class="cmtt-10">&#x00A0;n,</span><span 
class="cmtt-10">&#x00A0;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;Here</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;a</span><span 
class="cmtt-10">&#x00A0;little</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;code</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;that</span><span 
class="cmtt-10">&#x00A0;function.</span><span 
class="cmtt-10">&#x00A0;It</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;of</span><span 
class="cmtt-10">&#x00A0;course</span><span 
class="cmtt-10">&#x00A0;incomplete.</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;int</span><span 
class="cmtt-10">&#x00A0;h</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;make_hash(url);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;(dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL)</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MYASSERT(dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;==</span><span 
class="cmtt-10">&#x00A0;NULL);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;*d</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;(DNODE</span><span 
class="cmtt-10">&#x00A0;*)malloc(sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;MALLOC_CHECK(d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;BZERO(d,</span><span 
class="cmtt-10">&#x00A0;sizeof(DNODE));</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;hash[h]</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;NULL;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;n;</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;you</span><span 
class="cmtt-10">&#x00A0;would</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;copy</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;key</span><span 
class="cmtt-10">&#x00A0;over</span><span 
class="cmtt-10">&#x00A0;here</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;=</span><span 
class="cmtt-10">&#x00A0;d;</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DICTIONARY</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;dict:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("hash</span><span 
class="cmtt-10">&#x00A0;%lu\n",</span><span 
class="cmtt-10">&#x00A0;hash);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;hash[hash]</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;hash[hash]);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;start</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;start);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("dict-&#x003E;end</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)dict-&#x003E;end);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;structure</span><span 
class="cmtt-10">&#x00A0;d:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;next</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;next);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;prev</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;prev);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;data</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)d-&#x003E;data);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("d-&#x003E;key</span><span 
class="cmtt-10">&#x00A0;is</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;initialized</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;this</span><span 
class="cmtt-10">&#x00A0;example");</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("The</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><span 
class="cmtt-10">&#x00A0;structure:\n");</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n</span><span 
class="cmtt-10">&#x00A0;%p\n",(void</span><span 
class="cmtt-10">&#x00A0;*)n);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;url</span><span 
class="cmtt-10">&#x00A0;%s\n",n-&#x003E;url);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;depth);</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;printf("n-&#x003E;visited</span><span 
class="cmtt-10">&#x00A0;%d\n",n-&#x003E;visited);</span><br /><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><span 
class="cmtt-10">&#x00A0;else</span><span 
class="cmtt-10">&#x00A0;{</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;need</span><span 
class="cmtt-10">&#x00A0;to</span><span 
class="cmtt-10">&#x00A0;check</span><span 
class="cmtt-10">&#x00A0;if</span><span 
class="cmtt-10">&#x00A0;the</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;already</span><span 
class="cmtt-10">&#x00A0;exists</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;If</span><span 
class="cmtt-10">&#x00A0;it</span><span 
class="cmtt-10">&#x00A0;does</span><span 
class="cmtt-10">&#x00A0;not</span><span 
class="cmtt-10">&#x00A0;exist</span><span 
class="cmtt-10">&#x00A0;then</span><span 
class="cmtt-10">&#x00A0;initial</span><span 
class="cmtt-10">&#x00A0;DNODE</span><span 
class="cmtt-10">&#x00A0;and</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;//</span><span 
class="cmtt-10">&#x00A0;link</span><span 
class="cmtt-10">&#x00A0;in</span><span 
class="cmtt-10">&#x00A0;URLNODE</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;}</span><br /><span 
class="cmtt-10">&#x00A0;</span><span 
class="cmtt-10">&#x00A0;return</span><span 
class="cmtt-10">&#x00A0;0;</span><br /><span 
class="cmtt-10">}</span><br /><br /></div></div>
 
</body></html> 

                                                                                  


